
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model caderno_aluno
 * 
 */
export type caderno_aluno = $Result.DefaultSelection<Prisma.$caderno_alunoPayload>
/**
 * Model tbl_alternativas
 * 
 */
export type tbl_alternativas = $Result.DefaultSelection<Prisma.$tbl_alternativasPayload>
/**
 * Model tbl_aluno
 * 
 */
export type tbl_aluno = $Result.DefaultSelection<Prisma.$tbl_alunoPayload>
/**
 * Model tbl_aluno_agenda
 * 
 */
export type tbl_aluno_agenda = $Result.DefaultSelection<Prisma.$tbl_aluno_agendaPayload>
/**
 * Model tbl_cronograma
 * 
 */
export type tbl_cronograma = $Result.DefaultSelection<Prisma.$tbl_cronogramaPayload>
/**
 * Model tbl_cursos
 * 
 */
export type tbl_cursos = $Result.DefaultSelection<Prisma.$tbl_cursosPayload>
/**
 * Model tbl_cursos_disciplina
 * 
 */
export type tbl_cursos_disciplina = $Result.DefaultSelection<Prisma.$tbl_cursos_disciplinaPayload>
/**
 * Model tbl_disciplina
 * 
 */
export type tbl_disciplina = $Result.DefaultSelection<Prisma.$tbl_disciplinaPayload>
/**
 * Model tbl_disciplina_topico
 * 
 */
export type tbl_disciplina_topico = $Result.DefaultSelection<Prisma.$tbl_disciplina_topicoPayload>
/**
 * Model tbl_exercicio
 * 
 */
export type tbl_exercicio = $Result.DefaultSelection<Prisma.$tbl_exercicioPayload>
/**
 * Model tbl_fases
 * 
 */
export type tbl_fases = $Result.DefaultSelection<Prisma.$tbl_fasesPayload>
/**
 * Model tbl_horarios
 * 
 */
export type tbl_horarios = $Result.DefaultSelection<Prisma.$tbl_horariosPayload>
/**
 * Model tbl_icones
 * 
 */
export type tbl_icones = $Result.DefaultSelection<Prisma.$tbl_iconesPayload>
/**
 * Model tbl_intituicoes
 * 
 */
export type tbl_intituicoes = $Result.DefaultSelection<Prisma.$tbl_intituicoesPayload>
/**
 * Model tbl_prof_agenda
 * 
 */
export type tbl_prof_agenda = $Result.DefaultSelection<Prisma.$tbl_prof_agendaPayload>
/**
 * Model tbl_prof_disciplinas
 * 
 */
export type tbl_prof_disciplinas = $Result.DefaultSelection<Prisma.$tbl_prof_disciplinasPayload>
/**
 * Model tbl_professor
 * 
 */
export type tbl_professor = $Result.DefaultSelection<Prisma.$tbl_professorPayload>
/**
 * Model tbl_redacao
 * 
 */
export type tbl_redacao = $Result.DefaultSelection<Prisma.$tbl_redacaoPayload>
/**
 * Model tbl_semana
 * 
 */
export type tbl_semana = $Result.DefaultSelection<Prisma.$tbl_semanaPayload>
/**
 * Model tbl_tema
 * 
 */
export type tbl_tema = $Result.DefaultSelection<Prisma.$tbl_temaPayload>
/**
 * Model tbl_topicos
 * 
 */
export type tbl_topicos = $Result.DefaultSelection<Prisma.$tbl_topicosPayload>
/**
 * Model tbl_vest_fases
 * 
 */
export type tbl_vest_fases = $Result.DefaultSelection<Prisma.$tbl_vest_fasesPayload>
/**
 * Model tbl_vestibulares
 * 
 */
export type tbl_vestibulares = $Result.DefaultSelection<Prisma.$tbl_vestibularesPayload>
/**
 * Model tbl_videoaulas
 * 
 */
export type tbl_videoaulas = $Result.DefaultSelection<Prisma.$tbl_videoaulasPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Caderno_alunos
 * const caderno_alunos = await prisma.caderno_aluno.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Caderno_alunos
   * const caderno_alunos = await prisma.caderno_aluno.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.caderno_aluno`: Exposes CRUD operations for the **caderno_aluno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Caderno_alunos
    * const caderno_alunos = await prisma.caderno_aluno.findMany()
    * ```
    */
  get caderno_aluno(): Prisma.caderno_alunoDelegate<ExtArgs>;

  /**
   * `prisma.tbl_alternativas`: Exposes CRUD operations for the **tbl_alternativas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_alternativas
    * const tbl_alternativas = await prisma.tbl_alternativas.findMany()
    * ```
    */
  get tbl_alternativas(): Prisma.tbl_alternativasDelegate<ExtArgs>;

  /**
   * `prisma.tbl_aluno`: Exposes CRUD operations for the **tbl_aluno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_alunos
    * const tbl_alunos = await prisma.tbl_aluno.findMany()
    * ```
    */
  get tbl_aluno(): Prisma.tbl_alunoDelegate<ExtArgs>;

  /**
   * `prisma.tbl_aluno_agenda`: Exposes CRUD operations for the **tbl_aluno_agenda** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_aluno_agenda
    * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.findMany()
    * ```
    */
  get tbl_aluno_agenda(): Prisma.tbl_aluno_agendaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_cronograma`: Exposes CRUD operations for the **tbl_cronograma** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_cronogramas
    * const tbl_cronogramas = await prisma.tbl_cronograma.findMany()
    * ```
    */
  get tbl_cronograma(): Prisma.tbl_cronogramaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_cursos`: Exposes CRUD operations for the **tbl_cursos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_cursos
    * const tbl_cursos = await prisma.tbl_cursos.findMany()
    * ```
    */
  get tbl_cursos(): Prisma.tbl_cursosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_cursos_disciplina`: Exposes CRUD operations for the **tbl_cursos_disciplina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_cursos_disciplinas
    * const tbl_cursos_disciplinas = await prisma.tbl_cursos_disciplina.findMany()
    * ```
    */
  get tbl_cursos_disciplina(): Prisma.tbl_cursos_disciplinaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_disciplina`: Exposes CRUD operations for the **tbl_disciplina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_disciplinas
    * const tbl_disciplinas = await prisma.tbl_disciplina.findMany()
    * ```
    */
  get tbl_disciplina(): Prisma.tbl_disciplinaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_disciplina_topico`: Exposes CRUD operations for the **tbl_disciplina_topico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_disciplina_topicos
    * const tbl_disciplina_topicos = await prisma.tbl_disciplina_topico.findMany()
    * ```
    */
  get tbl_disciplina_topico(): Prisma.tbl_disciplina_topicoDelegate<ExtArgs>;

  /**
   * `prisma.tbl_exercicio`: Exposes CRUD operations for the **tbl_exercicio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_exercicios
    * const tbl_exercicios = await prisma.tbl_exercicio.findMany()
    * ```
    */
  get tbl_exercicio(): Prisma.tbl_exercicioDelegate<ExtArgs>;

  /**
   * `prisma.tbl_fases`: Exposes CRUD operations for the **tbl_fases** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_fases
    * const tbl_fases = await prisma.tbl_fases.findMany()
    * ```
    */
  get tbl_fases(): Prisma.tbl_fasesDelegate<ExtArgs>;

  /**
   * `prisma.tbl_horarios`: Exposes CRUD operations for the **tbl_horarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_horarios
    * const tbl_horarios = await prisma.tbl_horarios.findMany()
    * ```
    */
  get tbl_horarios(): Prisma.tbl_horariosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_icones`: Exposes CRUD operations for the **tbl_icones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_icones
    * const tbl_icones = await prisma.tbl_icones.findMany()
    * ```
    */
  get tbl_icones(): Prisma.tbl_iconesDelegate<ExtArgs>;

  /**
   * `prisma.tbl_intituicoes`: Exposes CRUD operations for the **tbl_intituicoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_intituicoes
    * const tbl_intituicoes = await prisma.tbl_intituicoes.findMany()
    * ```
    */
  get tbl_intituicoes(): Prisma.tbl_intituicoesDelegate<ExtArgs>;

  /**
   * `prisma.tbl_prof_agenda`: Exposes CRUD operations for the **tbl_prof_agenda** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_prof_agenda
    * const tbl_prof_agenda = await prisma.tbl_prof_agenda.findMany()
    * ```
    */
  get tbl_prof_agenda(): Prisma.tbl_prof_agendaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_prof_disciplinas`: Exposes CRUD operations for the **tbl_prof_disciplinas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_prof_disciplinas
    * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.findMany()
    * ```
    */
  get tbl_prof_disciplinas(): Prisma.tbl_prof_disciplinasDelegate<ExtArgs>;

  /**
   * `prisma.tbl_professor`: Exposes CRUD operations for the **tbl_professor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_professors
    * const tbl_professors = await prisma.tbl_professor.findMany()
    * ```
    */
  get tbl_professor(): Prisma.tbl_professorDelegate<ExtArgs>;

  /**
   * `prisma.tbl_redacao`: Exposes CRUD operations for the **tbl_redacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_redacaos
    * const tbl_redacaos = await prisma.tbl_redacao.findMany()
    * ```
    */
  get tbl_redacao(): Prisma.tbl_redacaoDelegate<ExtArgs>;

  /**
   * `prisma.tbl_semana`: Exposes CRUD operations for the **tbl_semana** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_semanas
    * const tbl_semanas = await prisma.tbl_semana.findMany()
    * ```
    */
  get tbl_semana(): Prisma.tbl_semanaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_tema`: Exposes CRUD operations for the **tbl_tema** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_temas
    * const tbl_temas = await prisma.tbl_tema.findMany()
    * ```
    */
  get tbl_tema(): Prisma.tbl_temaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_topicos`: Exposes CRUD operations for the **tbl_topicos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_topicos
    * const tbl_topicos = await prisma.tbl_topicos.findMany()
    * ```
    */
  get tbl_topicos(): Prisma.tbl_topicosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_vest_fases`: Exposes CRUD operations for the **tbl_vest_fases** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_vest_fases
    * const tbl_vest_fases = await prisma.tbl_vest_fases.findMany()
    * ```
    */
  get tbl_vest_fases(): Prisma.tbl_vest_fasesDelegate<ExtArgs>;

  /**
   * `prisma.tbl_vestibulares`: Exposes CRUD operations for the **tbl_vestibulares** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_vestibulares
    * const tbl_vestibulares = await prisma.tbl_vestibulares.findMany()
    * ```
    */
  get tbl_vestibulares(): Prisma.tbl_vestibularesDelegate<ExtArgs>;

  /**
   * `prisma.tbl_videoaulas`: Exposes CRUD operations for the **tbl_videoaulas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_videoaulas
    * const tbl_videoaulas = await prisma.tbl_videoaulas.findMany()
    * ```
    */
  get tbl_videoaulas(): Prisma.tbl_videoaulasDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.19.1
   * Query Engine version: 69d742ee20b815d88e17e54db4a2a7a3b30324e3
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    caderno_aluno: 'caderno_aluno',
    tbl_alternativas: 'tbl_alternativas',
    tbl_aluno: 'tbl_aluno',
    tbl_aluno_agenda: 'tbl_aluno_agenda',
    tbl_cronograma: 'tbl_cronograma',
    tbl_cursos: 'tbl_cursos',
    tbl_cursos_disciplina: 'tbl_cursos_disciplina',
    tbl_disciplina: 'tbl_disciplina',
    tbl_disciplina_topico: 'tbl_disciplina_topico',
    tbl_exercicio: 'tbl_exercicio',
    tbl_fases: 'tbl_fases',
    tbl_horarios: 'tbl_horarios',
    tbl_icones: 'tbl_icones',
    tbl_intituicoes: 'tbl_intituicoes',
    tbl_prof_agenda: 'tbl_prof_agenda',
    tbl_prof_disciplinas: 'tbl_prof_disciplinas',
    tbl_professor: 'tbl_professor',
    tbl_redacao: 'tbl_redacao',
    tbl_semana: 'tbl_semana',
    tbl_tema: 'tbl_tema',
    tbl_topicos: 'tbl_topicos',
    tbl_vest_fases: 'tbl_vest_fases',
    tbl_vestibulares: 'tbl_vestibulares',
    tbl_videoaulas: 'tbl_videoaulas'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "caderno_aluno" | "tbl_alternativas" | "tbl_aluno" | "tbl_aluno_agenda" | "tbl_cronograma" | "tbl_cursos" | "tbl_cursos_disciplina" | "tbl_disciplina" | "tbl_disciplina_topico" | "tbl_exercicio" | "tbl_fases" | "tbl_horarios" | "tbl_icones" | "tbl_intituicoes" | "tbl_prof_agenda" | "tbl_prof_disciplinas" | "tbl_professor" | "tbl_redacao" | "tbl_semana" | "tbl_tema" | "tbl_topicos" | "tbl_vest_fases" | "tbl_vestibulares" | "tbl_videoaulas"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      caderno_aluno: {
        payload: Prisma.$caderno_alunoPayload<ExtArgs>
        fields: Prisma.caderno_alunoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.caderno_alunoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.caderno_alunoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload>
          }
          findFirst: {
            args: Prisma.caderno_alunoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.caderno_alunoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload>
          }
          findMany: {
            args: Prisma.caderno_alunoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload>[]
          }
          create: {
            args: Prisma.caderno_alunoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload>
          }
          createMany: {
            args: Prisma.caderno_alunoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.caderno_alunoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload>
          }
          update: {
            args: Prisma.caderno_alunoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload>
          }
          deleteMany: {
            args: Prisma.caderno_alunoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.caderno_alunoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.caderno_alunoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caderno_alunoPayload>
          }
          aggregate: {
            args: Prisma.Caderno_alunoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCaderno_aluno>
          }
          groupBy: {
            args: Prisma.caderno_alunoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Caderno_alunoGroupByOutputType>[]
          }
          count: {
            args: Prisma.caderno_alunoCountArgs<ExtArgs>
            result: $Utils.Optional<Caderno_alunoCountAggregateOutputType> | number
          }
        }
      }
      tbl_alternativas: {
        payload: Prisma.$tbl_alternativasPayload<ExtArgs>
        fields: Prisma.tbl_alternativasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_alternativasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_alternativasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload>
          }
          findFirst: {
            args: Prisma.tbl_alternativasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_alternativasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload>
          }
          findMany: {
            args: Prisma.tbl_alternativasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload>[]
          }
          create: {
            args: Prisma.tbl_alternativasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload>
          }
          createMany: {
            args: Prisma.tbl_alternativasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_alternativasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload>
          }
          update: {
            args: Prisma.tbl_alternativasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload>
          }
          deleteMany: {
            args: Prisma.tbl_alternativasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_alternativasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_alternativasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alternativasPayload>
          }
          aggregate: {
            args: Prisma.Tbl_alternativasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_alternativas>
          }
          groupBy: {
            args: Prisma.tbl_alternativasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_alternativasGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_alternativasCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_alternativasCountAggregateOutputType> | number
          }
        }
      }
      tbl_aluno: {
        payload: Prisma.$tbl_alunoPayload<ExtArgs>
        fields: Prisma.tbl_alunoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_alunoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_alunoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload>
          }
          findFirst: {
            args: Prisma.tbl_alunoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_alunoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload>
          }
          findMany: {
            args: Prisma.tbl_alunoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload>[]
          }
          create: {
            args: Prisma.tbl_alunoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload>
          }
          createMany: {
            args: Prisma.tbl_alunoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_alunoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload>
          }
          update: {
            args: Prisma.tbl_alunoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_alunoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_alunoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_alunoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_alunoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_alunoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_aluno>
          }
          groupBy: {
            args: Prisma.tbl_alunoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_alunoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_alunoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_alunoCountAggregateOutputType> | number
          }
        }
      }
      tbl_aluno_agenda: {
        payload: Prisma.$tbl_aluno_agendaPayload<ExtArgs>
        fields: Prisma.tbl_aluno_agendaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_aluno_agendaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_aluno_agendaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload>
          }
          findFirst: {
            args: Prisma.tbl_aluno_agendaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_aluno_agendaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload>
          }
          findMany: {
            args: Prisma.tbl_aluno_agendaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload>[]
          }
          create: {
            args: Prisma.tbl_aluno_agendaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload>
          }
          createMany: {
            args: Prisma.tbl_aluno_agendaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_aluno_agendaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload>
          }
          update: {
            args: Prisma.tbl_aluno_agendaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_aluno_agendaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_aluno_agendaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_aluno_agendaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_aluno_agendaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_aluno_agendaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_aluno_agenda>
          }
          groupBy: {
            args: Prisma.tbl_aluno_agendaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_aluno_agendaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_aluno_agendaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_aluno_agendaCountAggregateOutputType> | number
          }
        }
      }
      tbl_cronograma: {
        payload: Prisma.$tbl_cronogramaPayload<ExtArgs>
        fields: Prisma.tbl_cronogramaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_cronogramaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_cronogramaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload>
          }
          findFirst: {
            args: Prisma.tbl_cronogramaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_cronogramaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload>
          }
          findMany: {
            args: Prisma.tbl_cronogramaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload>[]
          }
          create: {
            args: Prisma.tbl_cronogramaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload>
          }
          createMany: {
            args: Prisma.tbl_cronogramaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_cronogramaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload>
          }
          update: {
            args: Prisma.tbl_cronogramaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_cronogramaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_cronogramaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_cronogramaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cronogramaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_cronogramaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_cronograma>
          }
          groupBy: {
            args: Prisma.tbl_cronogramaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_cronogramaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_cronogramaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_cronogramaCountAggregateOutputType> | number
          }
        }
      }
      tbl_cursos: {
        payload: Prisma.$tbl_cursosPayload<ExtArgs>
        fields: Prisma.tbl_cursosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_cursosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_cursosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload>
          }
          findFirst: {
            args: Prisma.tbl_cursosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_cursosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload>
          }
          findMany: {
            args: Prisma.tbl_cursosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload>[]
          }
          create: {
            args: Prisma.tbl_cursosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload>
          }
          createMany: {
            args: Prisma.tbl_cursosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_cursosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload>
          }
          update: {
            args: Prisma.tbl_cursosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_cursosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_cursosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_cursosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_cursosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_cursos>
          }
          groupBy: {
            args: Prisma.tbl_cursosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_cursosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_cursosCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_cursosCountAggregateOutputType> | number
          }
        }
      }
      tbl_cursos_disciplina: {
        payload: Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>
        fields: Prisma.tbl_cursos_disciplinaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_cursos_disciplinaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_cursos_disciplinaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload>
          }
          findFirst: {
            args: Prisma.tbl_cursos_disciplinaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_cursos_disciplinaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload>
          }
          findMany: {
            args: Prisma.tbl_cursos_disciplinaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload>[]
          }
          create: {
            args: Prisma.tbl_cursos_disciplinaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload>
          }
          createMany: {
            args: Prisma.tbl_cursos_disciplinaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_cursos_disciplinaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload>
          }
          update: {
            args: Prisma.tbl_cursos_disciplinaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_cursos_disciplinaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_cursos_disciplinaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_cursos_disciplinaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cursos_disciplinaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_cursos_disciplinaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_cursos_disciplina>
          }
          groupBy: {
            args: Prisma.tbl_cursos_disciplinaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_cursos_disciplinaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_cursos_disciplinaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_cursos_disciplinaCountAggregateOutputType> | number
          }
        }
      }
      tbl_disciplina: {
        payload: Prisma.$tbl_disciplinaPayload<ExtArgs>
        fields: Prisma.tbl_disciplinaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_disciplinaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_disciplinaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload>
          }
          findFirst: {
            args: Prisma.tbl_disciplinaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_disciplinaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload>
          }
          findMany: {
            args: Prisma.tbl_disciplinaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload>[]
          }
          create: {
            args: Prisma.tbl_disciplinaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload>
          }
          createMany: {
            args: Prisma.tbl_disciplinaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_disciplinaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload>
          }
          update: {
            args: Prisma.tbl_disciplinaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_disciplinaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_disciplinaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_disciplinaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplinaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_disciplinaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_disciplina>
          }
          groupBy: {
            args: Prisma.tbl_disciplinaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_disciplinaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_disciplinaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_disciplinaCountAggregateOutputType> | number
          }
        }
      }
      tbl_disciplina_topico: {
        payload: Prisma.$tbl_disciplina_topicoPayload<ExtArgs>
        fields: Prisma.tbl_disciplina_topicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_disciplina_topicoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_disciplina_topicoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload>
          }
          findFirst: {
            args: Prisma.tbl_disciplina_topicoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_disciplina_topicoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload>
          }
          findMany: {
            args: Prisma.tbl_disciplina_topicoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload>[]
          }
          create: {
            args: Prisma.tbl_disciplina_topicoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload>
          }
          createMany: {
            args: Prisma.tbl_disciplina_topicoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_disciplina_topicoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload>
          }
          update: {
            args: Prisma.tbl_disciplina_topicoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_disciplina_topicoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_disciplina_topicoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_disciplina_topicoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_disciplina_topicoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_disciplina_topicoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_disciplina_topico>
          }
          groupBy: {
            args: Prisma.tbl_disciplina_topicoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_disciplina_topicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_disciplina_topicoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_disciplina_topicoCountAggregateOutputType> | number
          }
        }
      }
      tbl_exercicio: {
        payload: Prisma.$tbl_exercicioPayload<ExtArgs>
        fields: Prisma.tbl_exercicioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_exercicioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_exercicioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload>
          }
          findFirst: {
            args: Prisma.tbl_exercicioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_exercicioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload>
          }
          findMany: {
            args: Prisma.tbl_exercicioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload>[]
          }
          create: {
            args: Prisma.tbl_exercicioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload>
          }
          createMany: {
            args: Prisma.tbl_exercicioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_exercicioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload>
          }
          update: {
            args: Prisma.tbl_exercicioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload>
          }
          deleteMany: {
            args: Prisma.tbl_exercicioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_exercicioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_exercicioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_exercicioPayload>
          }
          aggregate: {
            args: Prisma.Tbl_exercicioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_exercicio>
          }
          groupBy: {
            args: Prisma.tbl_exercicioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_exercicioGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_exercicioCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_exercicioCountAggregateOutputType> | number
          }
        }
      }
      tbl_fases: {
        payload: Prisma.$tbl_fasesPayload<ExtArgs>
        fields: Prisma.tbl_fasesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_fasesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_fasesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload>
          }
          findFirst: {
            args: Prisma.tbl_fasesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_fasesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload>
          }
          findMany: {
            args: Prisma.tbl_fasesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload>[]
          }
          create: {
            args: Prisma.tbl_fasesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload>
          }
          createMany: {
            args: Prisma.tbl_fasesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_fasesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload>
          }
          update: {
            args: Prisma.tbl_fasesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload>
          }
          deleteMany: {
            args: Prisma.tbl_fasesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_fasesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_fasesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_fasesPayload>
          }
          aggregate: {
            args: Prisma.Tbl_fasesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_fases>
          }
          groupBy: {
            args: Prisma.tbl_fasesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_fasesGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_fasesCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_fasesCountAggregateOutputType> | number
          }
        }
      }
      tbl_horarios: {
        payload: Prisma.$tbl_horariosPayload<ExtArgs>
        fields: Prisma.tbl_horariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_horariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_horariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload>
          }
          findFirst: {
            args: Prisma.tbl_horariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_horariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload>
          }
          findMany: {
            args: Prisma.tbl_horariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload>[]
          }
          create: {
            args: Prisma.tbl_horariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload>
          }
          createMany: {
            args: Prisma.tbl_horariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_horariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload>
          }
          update: {
            args: Prisma.tbl_horariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_horariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_horariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_horariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_horariosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_horariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_horarios>
          }
          groupBy: {
            args: Prisma.tbl_horariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_horariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_horariosCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_horariosCountAggregateOutputType> | number
          }
        }
      }
      tbl_icones: {
        payload: Prisma.$tbl_iconesPayload<ExtArgs>
        fields: Prisma.tbl_iconesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_iconesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_iconesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload>
          }
          findFirst: {
            args: Prisma.tbl_iconesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_iconesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload>
          }
          findMany: {
            args: Prisma.tbl_iconesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload>[]
          }
          create: {
            args: Prisma.tbl_iconesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload>
          }
          createMany: {
            args: Prisma.tbl_iconesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_iconesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload>
          }
          update: {
            args: Prisma.tbl_iconesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload>
          }
          deleteMany: {
            args: Prisma.tbl_iconesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_iconesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_iconesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_iconesPayload>
          }
          aggregate: {
            args: Prisma.Tbl_iconesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_icones>
          }
          groupBy: {
            args: Prisma.tbl_iconesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_iconesGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_iconesCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_iconesCountAggregateOutputType> | number
          }
        }
      }
      tbl_intituicoes: {
        payload: Prisma.$tbl_intituicoesPayload<ExtArgs>
        fields: Prisma.tbl_intituicoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_intituicoesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_intituicoesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload>
          }
          findFirst: {
            args: Prisma.tbl_intituicoesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_intituicoesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload>
          }
          findMany: {
            args: Prisma.tbl_intituicoesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload>[]
          }
          create: {
            args: Prisma.tbl_intituicoesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload>
          }
          createMany: {
            args: Prisma.tbl_intituicoesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_intituicoesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload>
          }
          update: {
            args: Prisma.tbl_intituicoesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload>
          }
          deleteMany: {
            args: Prisma.tbl_intituicoesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_intituicoesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_intituicoesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_intituicoesPayload>
          }
          aggregate: {
            args: Prisma.Tbl_intituicoesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_intituicoes>
          }
          groupBy: {
            args: Prisma.tbl_intituicoesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_intituicoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_intituicoesCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_intituicoesCountAggregateOutputType> | number
          }
        }
      }
      tbl_prof_agenda: {
        payload: Prisma.$tbl_prof_agendaPayload<ExtArgs>
        fields: Prisma.tbl_prof_agendaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_prof_agendaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_prof_agendaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload>
          }
          findFirst: {
            args: Prisma.tbl_prof_agendaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_prof_agendaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload>
          }
          findMany: {
            args: Prisma.tbl_prof_agendaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload>[]
          }
          create: {
            args: Prisma.tbl_prof_agendaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload>
          }
          createMany: {
            args: Prisma.tbl_prof_agendaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_prof_agendaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload>
          }
          update: {
            args: Prisma.tbl_prof_agendaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_prof_agendaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_prof_agendaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_prof_agendaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_agendaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_prof_agendaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_prof_agenda>
          }
          groupBy: {
            args: Prisma.tbl_prof_agendaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_prof_agendaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_prof_agendaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_prof_agendaCountAggregateOutputType> | number
          }
        }
      }
      tbl_prof_disciplinas: {
        payload: Prisma.$tbl_prof_disciplinasPayload<ExtArgs>
        fields: Prisma.tbl_prof_disciplinasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_prof_disciplinasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_prof_disciplinasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload>
          }
          findFirst: {
            args: Prisma.tbl_prof_disciplinasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_prof_disciplinasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload>
          }
          findMany: {
            args: Prisma.tbl_prof_disciplinasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload>[]
          }
          create: {
            args: Prisma.tbl_prof_disciplinasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload>
          }
          createMany: {
            args: Prisma.tbl_prof_disciplinasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_prof_disciplinasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload>
          }
          update: {
            args: Prisma.tbl_prof_disciplinasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload>
          }
          deleteMany: {
            args: Prisma.tbl_prof_disciplinasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_prof_disciplinasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_prof_disciplinasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_prof_disciplinasPayload>
          }
          aggregate: {
            args: Prisma.Tbl_prof_disciplinasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_prof_disciplinas>
          }
          groupBy: {
            args: Prisma.tbl_prof_disciplinasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_prof_disciplinasGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_prof_disciplinasCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_prof_disciplinasCountAggregateOutputType> | number
          }
        }
      }
      tbl_professor: {
        payload: Prisma.$tbl_professorPayload<ExtArgs>
        fields: Prisma.tbl_professorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_professorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_professorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload>
          }
          findFirst: {
            args: Prisma.tbl_professorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_professorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload>
          }
          findMany: {
            args: Prisma.tbl_professorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload>[]
          }
          create: {
            args: Prisma.tbl_professorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload>
          }
          createMany: {
            args: Prisma.tbl_professorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_professorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload>
          }
          update: {
            args: Prisma.tbl_professorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload>
          }
          deleteMany: {
            args: Prisma.tbl_professorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_professorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_professorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_professorPayload>
          }
          aggregate: {
            args: Prisma.Tbl_professorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_professor>
          }
          groupBy: {
            args: Prisma.tbl_professorGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_professorGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_professorCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_professorCountAggregateOutputType> | number
          }
        }
      }
      tbl_redacao: {
        payload: Prisma.$tbl_redacaoPayload<ExtArgs>
        fields: Prisma.tbl_redacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_redacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_redacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload>
          }
          findFirst: {
            args: Prisma.tbl_redacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_redacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload>
          }
          findMany: {
            args: Prisma.tbl_redacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload>[]
          }
          create: {
            args: Prisma.tbl_redacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload>
          }
          createMany: {
            args: Prisma.tbl_redacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_redacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload>
          }
          update: {
            args: Prisma.tbl_redacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_redacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_redacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_redacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_redacaoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_redacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_redacao>
          }
          groupBy: {
            args: Prisma.tbl_redacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_redacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_redacaoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_redacaoCountAggregateOutputType> | number
          }
        }
      }
      tbl_semana: {
        payload: Prisma.$tbl_semanaPayload<ExtArgs>
        fields: Prisma.tbl_semanaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_semanaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_semanaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload>
          }
          findFirst: {
            args: Prisma.tbl_semanaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_semanaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload>
          }
          findMany: {
            args: Prisma.tbl_semanaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload>[]
          }
          create: {
            args: Prisma.tbl_semanaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload>
          }
          createMany: {
            args: Prisma.tbl_semanaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_semanaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload>
          }
          update: {
            args: Prisma.tbl_semanaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_semanaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_semanaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_semanaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_semanaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_semanaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_semana>
          }
          groupBy: {
            args: Prisma.tbl_semanaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_semanaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_semanaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_semanaCountAggregateOutputType> | number
          }
        }
      }
      tbl_tema: {
        payload: Prisma.$tbl_temaPayload<ExtArgs>
        fields: Prisma.tbl_temaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_temaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_temaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload>
          }
          findFirst: {
            args: Prisma.tbl_temaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_temaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload>
          }
          findMany: {
            args: Prisma.tbl_temaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload>[]
          }
          create: {
            args: Prisma.tbl_temaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload>
          }
          createMany: {
            args: Prisma.tbl_temaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_temaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload>
          }
          update: {
            args: Prisma.tbl_temaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_temaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_temaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_temaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_temaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_temaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_tema>
          }
          groupBy: {
            args: Prisma.tbl_temaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_temaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_temaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_temaCountAggregateOutputType> | number
          }
        }
      }
      tbl_topicos: {
        payload: Prisma.$tbl_topicosPayload<ExtArgs>
        fields: Prisma.tbl_topicosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_topicosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_topicosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload>
          }
          findFirst: {
            args: Prisma.tbl_topicosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_topicosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload>
          }
          findMany: {
            args: Prisma.tbl_topicosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload>[]
          }
          create: {
            args: Prisma.tbl_topicosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload>
          }
          createMany: {
            args: Prisma.tbl_topicosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_topicosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload>
          }
          update: {
            args: Prisma.tbl_topicosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_topicosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_topicosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_topicosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_topicosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_topicosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_topicos>
          }
          groupBy: {
            args: Prisma.tbl_topicosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_topicosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_topicosCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_topicosCountAggregateOutputType> | number
          }
        }
      }
      tbl_vest_fases: {
        payload: Prisma.$tbl_vest_fasesPayload<ExtArgs>
        fields: Prisma.tbl_vest_fasesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_vest_fasesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_vest_fasesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload>
          }
          findFirst: {
            args: Prisma.tbl_vest_fasesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_vest_fasesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload>
          }
          findMany: {
            args: Prisma.tbl_vest_fasesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload>[]
          }
          create: {
            args: Prisma.tbl_vest_fasesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload>
          }
          createMany: {
            args: Prisma.tbl_vest_fasesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_vest_fasesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload>
          }
          update: {
            args: Prisma.tbl_vest_fasesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload>
          }
          deleteMany: {
            args: Prisma.tbl_vest_fasesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_vest_fasesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_vest_fasesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vest_fasesPayload>
          }
          aggregate: {
            args: Prisma.Tbl_vest_fasesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_vest_fases>
          }
          groupBy: {
            args: Prisma.tbl_vest_fasesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_vest_fasesGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_vest_fasesCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_vest_fasesCountAggregateOutputType> | number
          }
        }
      }
      tbl_vestibulares: {
        payload: Prisma.$tbl_vestibularesPayload<ExtArgs>
        fields: Prisma.tbl_vestibularesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_vestibularesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_vestibularesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload>
          }
          findFirst: {
            args: Prisma.tbl_vestibularesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_vestibularesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload>
          }
          findMany: {
            args: Prisma.tbl_vestibularesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload>[]
          }
          create: {
            args: Prisma.tbl_vestibularesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload>
          }
          createMany: {
            args: Prisma.tbl_vestibularesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_vestibularesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload>
          }
          update: {
            args: Prisma.tbl_vestibularesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload>
          }
          deleteMany: {
            args: Prisma.tbl_vestibularesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_vestibularesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_vestibularesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_vestibularesPayload>
          }
          aggregate: {
            args: Prisma.Tbl_vestibularesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_vestibulares>
          }
          groupBy: {
            args: Prisma.tbl_vestibularesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_vestibularesGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_vestibularesCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_vestibularesCountAggregateOutputType> | number
          }
        }
      }
      tbl_videoaulas: {
        payload: Prisma.$tbl_videoaulasPayload<ExtArgs>
        fields: Prisma.tbl_videoaulasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_videoaulasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_videoaulasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload>
          }
          findFirst: {
            args: Prisma.tbl_videoaulasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_videoaulasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload>
          }
          findMany: {
            args: Prisma.tbl_videoaulasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload>[]
          }
          create: {
            args: Prisma.tbl_videoaulasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload>
          }
          createMany: {
            args: Prisma.tbl_videoaulasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_videoaulasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload>
          }
          update: {
            args: Prisma.tbl_videoaulasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload>
          }
          deleteMany: {
            args: Prisma.tbl_videoaulasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_videoaulasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_videoaulasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_videoaulasPayload>
          }
          aggregate: {
            args: Prisma.Tbl_videoaulasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_videoaulas>
          }
          groupBy: {
            args: Prisma.tbl_videoaulasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_videoaulasGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_videoaulasCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_videoaulasCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Tbl_alunoCountOutputType
   */

  export type Tbl_alunoCountOutputType = {
    caderno_aluno: number
    tbl_aluno_agenda: number
  }

  export type Tbl_alunoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    caderno_aluno?: boolean | Tbl_alunoCountOutputTypeCountCaderno_alunoArgs
    tbl_aluno_agenda?: boolean | Tbl_alunoCountOutputTypeCountTbl_aluno_agendaArgs
  }

  // Custom InputTypes
  /**
   * Tbl_alunoCountOutputType without action
   */
  export type Tbl_alunoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_alunoCountOutputType
     */
    select?: Tbl_alunoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_alunoCountOutputType without action
   */
  export type Tbl_alunoCountOutputTypeCountCaderno_alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: caderno_alunoWhereInput
  }

  /**
   * Tbl_alunoCountOutputType without action
   */
  export type Tbl_alunoCountOutputTypeCountTbl_aluno_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_aluno_agendaWhereInput
  }


  /**
   * Count Type Tbl_aluno_agendaCountOutputType
   */

  export type Tbl_aluno_agendaCountOutputType = {
    tbl_cronograma: number
  }

  export type Tbl_aluno_agendaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_cronograma?: boolean | Tbl_aluno_agendaCountOutputTypeCountTbl_cronogramaArgs
  }

  // Custom InputTypes
  /**
   * Tbl_aluno_agendaCountOutputType without action
   */
  export type Tbl_aluno_agendaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_aluno_agendaCountOutputType
     */
    select?: Tbl_aluno_agendaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_aluno_agendaCountOutputType without action
   */
  export type Tbl_aluno_agendaCountOutputTypeCountTbl_cronogramaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cronogramaWhereInput
  }


  /**
   * Count Type Tbl_cursosCountOutputType
   */

  export type Tbl_cursosCountOutputType = {
    tbl_aluno: number
    tbl_cursos_disciplina: number
  }

  export type Tbl_cursosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_aluno?: boolean | Tbl_cursosCountOutputTypeCountTbl_alunoArgs
    tbl_cursos_disciplina?: boolean | Tbl_cursosCountOutputTypeCountTbl_cursos_disciplinaArgs
  }

  // Custom InputTypes
  /**
   * Tbl_cursosCountOutputType without action
   */
  export type Tbl_cursosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_cursosCountOutputType
     */
    select?: Tbl_cursosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_cursosCountOutputType without action
   */
  export type Tbl_cursosCountOutputTypeCountTbl_alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_alunoWhereInput
  }

  /**
   * Tbl_cursosCountOutputType without action
   */
  export type Tbl_cursosCountOutputTypeCountTbl_cursos_disciplinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cursos_disciplinaWhereInput
  }


  /**
   * Count Type Tbl_disciplinaCountOutputType
   */

  export type Tbl_disciplinaCountOutputType = {
    tbl_cronograma: number
    tbl_cursos_disciplina: number
    tbl_disciplina_topico: number
    tbl_prof_disciplinas: number
  }

  export type Tbl_disciplinaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_cronograma?: boolean | Tbl_disciplinaCountOutputTypeCountTbl_cronogramaArgs
    tbl_cursos_disciplina?: boolean | Tbl_disciplinaCountOutputTypeCountTbl_cursos_disciplinaArgs
    tbl_disciplina_topico?: boolean | Tbl_disciplinaCountOutputTypeCountTbl_disciplina_topicoArgs
    tbl_prof_disciplinas?: boolean | Tbl_disciplinaCountOutputTypeCountTbl_prof_disciplinasArgs
  }

  // Custom InputTypes
  /**
   * Tbl_disciplinaCountOutputType without action
   */
  export type Tbl_disciplinaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_disciplinaCountOutputType
     */
    select?: Tbl_disciplinaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_disciplinaCountOutputType without action
   */
  export type Tbl_disciplinaCountOutputTypeCountTbl_cronogramaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cronogramaWhereInput
  }

  /**
   * Tbl_disciplinaCountOutputType without action
   */
  export type Tbl_disciplinaCountOutputTypeCountTbl_cursos_disciplinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cursos_disciplinaWhereInput
  }

  /**
   * Tbl_disciplinaCountOutputType without action
   */
  export type Tbl_disciplinaCountOutputTypeCountTbl_disciplina_topicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_disciplina_topicoWhereInput
  }

  /**
   * Tbl_disciplinaCountOutputType without action
   */
  export type Tbl_disciplinaCountOutputTypeCountTbl_prof_disciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_prof_disciplinasWhereInput
  }


  /**
   * Count Type Tbl_exercicioCountOutputType
   */

  export type Tbl_exercicioCountOutputType = {
    tbl_alternativas: number
  }

  export type Tbl_exercicioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_alternativas?: boolean | Tbl_exercicioCountOutputTypeCountTbl_alternativasArgs
  }

  // Custom InputTypes
  /**
   * Tbl_exercicioCountOutputType without action
   */
  export type Tbl_exercicioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_exercicioCountOutputType
     */
    select?: Tbl_exercicioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_exercicioCountOutputType without action
   */
  export type Tbl_exercicioCountOutputTypeCountTbl_alternativasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_alternativasWhereInput
  }


  /**
   * Count Type Tbl_fasesCountOutputType
   */

  export type Tbl_fasesCountOutputType = {
    tbl_vest_fases: number
  }

  export type Tbl_fasesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_vest_fases?: boolean | Tbl_fasesCountOutputTypeCountTbl_vest_fasesArgs
  }

  // Custom InputTypes
  /**
   * Tbl_fasesCountOutputType without action
   */
  export type Tbl_fasesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_fasesCountOutputType
     */
    select?: Tbl_fasesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_fasesCountOutputType without action
   */
  export type Tbl_fasesCountOutputTypeCountTbl_vest_fasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_vest_fasesWhereInput
  }


  /**
   * Count Type Tbl_iconesCountOutputType
   */

  export type Tbl_iconesCountOutputType = {
    tbl_aluno: number
    tbl_professor: number
  }

  export type Tbl_iconesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_aluno?: boolean | Tbl_iconesCountOutputTypeCountTbl_alunoArgs
    tbl_professor?: boolean | Tbl_iconesCountOutputTypeCountTbl_professorArgs
  }

  // Custom InputTypes
  /**
   * Tbl_iconesCountOutputType without action
   */
  export type Tbl_iconesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_iconesCountOutputType
     */
    select?: Tbl_iconesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_iconesCountOutputType without action
   */
  export type Tbl_iconesCountOutputTypeCountTbl_alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_alunoWhereInput
  }

  /**
   * Tbl_iconesCountOutputType without action
   */
  export type Tbl_iconesCountOutputTypeCountTbl_professorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_professorWhereInput
  }


  /**
   * Count Type Tbl_intituicoesCountOutputType
   */

  export type Tbl_intituicoesCountOutputType = {
    tbl_vestibulares: number
  }

  export type Tbl_intituicoesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_vestibulares?: boolean | Tbl_intituicoesCountOutputTypeCountTbl_vestibularesArgs
  }

  // Custom InputTypes
  /**
   * Tbl_intituicoesCountOutputType without action
   */
  export type Tbl_intituicoesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_intituicoesCountOutputType
     */
    select?: Tbl_intituicoesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_intituicoesCountOutputType without action
   */
  export type Tbl_intituicoesCountOutputTypeCountTbl_vestibularesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_vestibularesWhereInput
  }


  /**
   * Count Type Tbl_professorCountOutputType
   */

  export type Tbl_professorCountOutputType = {
    tbl_prof_agenda: number
    tbl_prof_disciplinas: number
  }

  export type Tbl_professorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_prof_agenda?: boolean | Tbl_professorCountOutputTypeCountTbl_prof_agendaArgs
    tbl_prof_disciplinas?: boolean | Tbl_professorCountOutputTypeCountTbl_prof_disciplinasArgs
  }

  // Custom InputTypes
  /**
   * Tbl_professorCountOutputType without action
   */
  export type Tbl_professorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_professorCountOutputType
     */
    select?: Tbl_professorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_professorCountOutputType without action
   */
  export type Tbl_professorCountOutputTypeCountTbl_prof_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_prof_agendaWhereInput
  }

  /**
   * Tbl_professorCountOutputType without action
   */
  export type Tbl_professorCountOutputTypeCountTbl_prof_disciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_prof_disciplinasWhereInput
  }


  /**
   * Count Type Tbl_semanaCountOutputType
   */

  export type Tbl_semanaCountOutputType = {
    tbl_aluno_agenda: number
    tbl_prof_agenda: number
  }

  export type Tbl_semanaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_aluno_agenda?: boolean | Tbl_semanaCountOutputTypeCountTbl_aluno_agendaArgs
    tbl_prof_agenda?: boolean | Tbl_semanaCountOutputTypeCountTbl_prof_agendaArgs
  }

  // Custom InputTypes
  /**
   * Tbl_semanaCountOutputType without action
   */
  export type Tbl_semanaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_semanaCountOutputType
     */
    select?: Tbl_semanaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_semanaCountOutputType without action
   */
  export type Tbl_semanaCountOutputTypeCountTbl_aluno_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_aluno_agendaWhereInput
  }

  /**
   * Tbl_semanaCountOutputType without action
   */
  export type Tbl_semanaCountOutputTypeCountTbl_prof_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_prof_agendaWhereInput
  }


  /**
   * Count Type Tbl_temaCountOutputType
   */

  export type Tbl_temaCountOutputType = {
    tbl_redacao: number
  }

  export type Tbl_temaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_redacao?: boolean | Tbl_temaCountOutputTypeCountTbl_redacaoArgs
  }

  // Custom InputTypes
  /**
   * Tbl_temaCountOutputType without action
   */
  export type Tbl_temaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_temaCountOutputType
     */
    select?: Tbl_temaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_temaCountOutputType without action
   */
  export type Tbl_temaCountOutputTypeCountTbl_redacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_redacaoWhereInput
  }


  /**
   * Count Type Tbl_topicosCountOutputType
   */

  export type Tbl_topicosCountOutputType = {
    tbl_disciplina_topico: number
    tbl_videoaulas: number
  }

  export type Tbl_topicosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_disciplina_topico?: boolean | Tbl_topicosCountOutputTypeCountTbl_disciplina_topicoArgs
    tbl_videoaulas?: boolean | Tbl_topicosCountOutputTypeCountTbl_videoaulasArgs
  }

  // Custom InputTypes
  /**
   * Tbl_topicosCountOutputType without action
   */
  export type Tbl_topicosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_topicosCountOutputType
     */
    select?: Tbl_topicosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_topicosCountOutputType without action
   */
  export type Tbl_topicosCountOutputTypeCountTbl_disciplina_topicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_disciplina_topicoWhereInput
  }

  /**
   * Tbl_topicosCountOutputType without action
   */
  export type Tbl_topicosCountOutputTypeCountTbl_videoaulasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_videoaulasWhereInput
  }


  /**
   * Count Type Tbl_vestibularesCountOutputType
   */

  export type Tbl_vestibularesCountOutputType = {
    tbl_vest_fases: number
  }

  export type Tbl_vestibularesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_vest_fases?: boolean | Tbl_vestibularesCountOutputTypeCountTbl_vest_fasesArgs
  }

  // Custom InputTypes
  /**
   * Tbl_vestibularesCountOutputType without action
   */
  export type Tbl_vestibularesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_vestibularesCountOutputType
     */
    select?: Tbl_vestibularesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_vestibularesCountOutputType without action
   */
  export type Tbl_vestibularesCountOutputTypeCountTbl_vest_fasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_vest_fasesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model caderno_aluno
   */

  export type AggregateCaderno_aluno = {
    _count: Caderno_alunoCountAggregateOutputType | null
    _avg: Caderno_alunoAvgAggregateOutputType | null
    _sum: Caderno_alunoSumAggregateOutputType | null
    _min: Caderno_alunoMinAggregateOutputType | null
    _max: Caderno_alunoMaxAggregateOutputType | null
  }

  export type Caderno_alunoAvgAggregateOutputType = {
    id: number | null
    aluno_id: number | null
  }

  export type Caderno_alunoSumAggregateOutputType = {
    id: number | null
    aluno_id: number | null
  }

  export type Caderno_alunoMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    texto: string | null
    aluno_id: number | null
  }

  export type Caderno_alunoMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    texto: string | null
    aluno_id: number | null
  }

  export type Caderno_alunoCountAggregateOutputType = {
    id: number
    titulo: number
    texto: number
    aluno_id: number
    _all: number
  }


  export type Caderno_alunoAvgAggregateInputType = {
    id?: true
    aluno_id?: true
  }

  export type Caderno_alunoSumAggregateInputType = {
    id?: true
    aluno_id?: true
  }

  export type Caderno_alunoMinAggregateInputType = {
    id?: true
    titulo?: true
    texto?: true
    aluno_id?: true
  }

  export type Caderno_alunoMaxAggregateInputType = {
    id?: true
    titulo?: true
    texto?: true
    aluno_id?: true
  }

  export type Caderno_alunoCountAggregateInputType = {
    id?: true
    titulo?: true
    texto?: true
    aluno_id?: true
    _all?: true
  }

  export type Caderno_alunoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which caderno_aluno to aggregate.
     */
    where?: caderno_alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caderno_alunos to fetch.
     */
    orderBy?: caderno_alunoOrderByWithRelationInput | caderno_alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: caderno_alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caderno_alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caderno_alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned caderno_alunos
    **/
    _count?: true | Caderno_alunoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Caderno_alunoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Caderno_alunoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Caderno_alunoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Caderno_alunoMaxAggregateInputType
  }

  export type GetCaderno_alunoAggregateType<T extends Caderno_alunoAggregateArgs> = {
        [P in keyof T & keyof AggregateCaderno_aluno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCaderno_aluno[P]>
      : GetScalarType<T[P], AggregateCaderno_aluno[P]>
  }




  export type caderno_alunoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: caderno_alunoWhereInput
    orderBy?: caderno_alunoOrderByWithAggregationInput | caderno_alunoOrderByWithAggregationInput[]
    by: Caderno_alunoScalarFieldEnum[] | Caderno_alunoScalarFieldEnum
    having?: caderno_alunoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Caderno_alunoCountAggregateInputType | true
    _avg?: Caderno_alunoAvgAggregateInputType
    _sum?: Caderno_alunoSumAggregateInputType
    _min?: Caderno_alunoMinAggregateInputType
    _max?: Caderno_alunoMaxAggregateInputType
  }

  export type Caderno_alunoGroupByOutputType = {
    id: number
    titulo: string
    texto: string
    aluno_id: number
    _count: Caderno_alunoCountAggregateOutputType | null
    _avg: Caderno_alunoAvgAggregateOutputType | null
    _sum: Caderno_alunoSumAggregateOutputType | null
    _min: Caderno_alunoMinAggregateOutputType | null
    _max: Caderno_alunoMaxAggregateOutputType | null
  }

  type GetCaderno_alunoGroupByPayload<T extends caderno_alunoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Caderno_alunoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Caderno_alunoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Caderno_alunoGroupByOutputType[P]>
            : GetScalarType<T[P], Caderno_alunoGroupByOutputType[P]>
        }
      >
    >


  export type caderno_alunoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    texto?: boolean
    aluno_id?: boolean
    tbl_aluno?: boolean | tbl_alunoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["caderno_aluno"]>


  export type caderno_alunoSelectScalar = {
    id?: boolean
    titulo?: boolean
    texto?: boolean
    aluno_id?: boolean
  }

  export type caderno_alunoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_aluno?: boolean | tbl_alunoDefaultArgs<ExtArgs>
  }

  export type $caderno_alunoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "caderno_aluno"
    objects: {
      tbl_aluno: Prisma.$tbl_alunoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      texto: string
      aluno_id: number
    }, ExtArgs["result"]["caderno_aluno"]>
    composites: {}
  }

  type caderno_alunoGetPayload<S extends boolean | null | undefined | caderno_alunoDefaultArgs> = $Result.GetResult<Prisma.$caderno_alunoPayload, S>

  type caderno_alunoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<caderno_alunoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Caderno_alunoCountAggregateInputType | true
    }

  export interface caderno_alunoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['caderno_aluno'], meta: { name: 'caderno_aluno' } }
    /**
     * Find zero or one Caderno_aluno that matches the filter.
     * @param {caderno_alunoFindUniqueArgs} args - Arguments to find a Caderno_aluno
     * @example
     * // Get one Caderno_aluno
     * const caderno_aluno = await prisma.caderno_aluno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends caderno_alunoFindUniqueArgs>(args: SelectSubset<T, caderno_alunoFindUniqueArgs<ExtArgs>>): Prisma__caderno_alunoClient<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Caderno_aluno that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {caderno_alunoFindUniqueOrThrowArgs} args - Arguments to find a Caderno_aluno
     * @example
     * // Get one Caderno_aluno
     * const caderno_aluno = await prisma.caderno_aluno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends caderno_alunoFindUniqueOrThrowArgs>(args: SelectSubset<T, caderno_alunoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__caderno_alunoClient<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Caderno_aluno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caderno_alunoFindFirstArgs} args - Arguments to find a Caderno_aluno
     * @example
     * // Get one Caderno_aluno
     * const caderno_aluno = await prisma.caderno_aluno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends caderno_alunoFindFirstArgs>(args?: SelectSubset<T, caderno_alunoFindFirstArgs<ExtArgs>>): Prisma__caderno_alunoClient<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Caderno_aluno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caderno_alunoFindFirstOrThrowArgs} args - Arguments to find a Caderno_aluno
     * @example
     * // Get one Caderno_aluno
     * const caderno_aluno = await prisma.caderno_aluno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends caderno_alunoFindFirstOrThrowArgs>(args?: SelectSubset<T, caderno_alunoFindFirstOrThrowArgs<ExtArgs>>): Prisma__caderno_alunoClient<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Caderno_alunos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caderno_alunoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Caderno_alunos
     * const caderno_alunos = await prisma.caderno_aluno.findMany()
     * 
     * // Get first 10 Caderno_alunos
     * const caderno_alunos = await prisma.caderno_aluno.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const caderno_alunoWithIdOnly = await prisma.caderno_aluno.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends caderno_alunoFindManyArgs>(args?: SelectSubset<T, caderno_alunoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Caderno_aluno.
     * @param {caderno_alunoCreateArgs} args - Arguments to create a Caderno_aluno.
     * @example
     * // Create one Caderno_aluno
     * const Caderno_aluno = await prisma.caderno_aluno.create({
     *   data: {
     *     // ... data to create a Caderno_aluno
     *   }
     * })
     * 
     */
    create<T extends caderno_alunoCreateArgs>(args: SelectSubset<T, caderno_alunoCreateArgs<ExtArgs>>): Prisma__caderno_alunoClient<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Caderno_alunos.
     * @param {caderno_alunoCreateManyArgs} args - Arguments to create many Caderno_alunos.
     * @example
     * // Create many Caderno_alunos
     * const caderno_aluno = await prisma.caderno_aluno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends caderno_alunoCreateManyArgs>(args?: SelectSubset<T, caderno_alunoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Caderno_aluno.
     * @param {caderno_alunoDeleteArgs} args - Arguments to delete one Caderno_aluno.
     * @example
     * // Delete one Caderno_aluno
     * const Caderno_aluno = await prisma.caderno_aluno.delete({
     *   where: {
     *     // ... filter to delete one Caderno_aluno
     *   }
     * })
     * 
     */
    delete<T extends caderno_alunoDeleteArgs>(args: SelectSubset<T, caderno_alunoDeleteArgs<ExtArgs>>): Prisma__caderno_alunoClient<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Caderno_aluno.
     * @param {caderno_alunoUpdateArgs} args - Arguments to update one Caderno_aluno.
     * @example
     * // Update one Caderno_aluno
     * const caderno_aluno = await prisma.caderno_aluno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends caderno_alunoUpdateArgs>(args: SelectSubset<T, caderno_alunoUpdateArgs<ExtArgs>>): Prisma__caderno_alunoClient<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Caderno_alunos.
     * @param {caderno_alunoDeleteManyArgs} args - Arguments to filter Caderno_alunos to delete.
     * @example
     * // Delete a few Caderno_alunos
     * const { count } = await prisma.caderno_aluno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends caderno_alunoDeleteManyArgs>(args?: SelectSubset<T, caderno_alunoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Caderno_alunos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caderno_alunoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Caderno_alunos
     * const caderno_aluno = await prisma.caderno_aluno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends caderno_alunoUpdateManyArgs>(args: SelectSubset<T, caderno_alunoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Caderno_aluno.
     * @param {caderno_alunoUpsertArgs} args - Arguments to update or create a Caderno_aluno.
     * @example
     * // Update or create a Caderno_aluno
     * const caderno_aluno = await prisma.caderno_aluno.upsert({
     *   create: {
     *     // ... data to create a Caderno_aluno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Caderno_aluno we want to update
     *   }
     * })
     */
    upsert<T extends caderno_alunoUpsertArgs>(args: SelectSubset<T, caderno_alunoUpsertArgs<ExtArgs>>): Prisma__caderno_alunoClient<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Caderno_alunos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caderno_alunoCountArgs} args - Arguments to filter Caderno_alunos to count.
     * @example
     * // Count the number of Caderno_alunos
     * const count = await prisma.caderno_aluno.count({
     *   where: {
     *     // ... the filter for the Caderno_alunos we want to count
     *   }
     * })
    **/
    count<T extends caderno_alunoCountArgs>(
      args?: Subset<T, caderno_alunoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Caderno_alunoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Caderno_aluno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Caderno_alunoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Caderno_alunoAggregateArgs>(args: Subset<T, Caderno_alunoAggregateArgs>): Prisma.PrismaPromise<GetCaderno_alunoAggregateType<T>>

    /**
     * Group by Caderno_aluno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caderno_alunoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends caderno_alunoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: caderno_alunoGroupByArgs['orderBy'] }
        : { orderBy?: caderno_alunoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, caderno_alunoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCaderno_alunoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the caderno_aluno model
   */
  readonly fields: caderno_alunoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for caderno_aluno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__caderno_alunoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_aluno<T extends tbl_alunoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_alunoDefaultArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the caderno_aluno model
   */ 
  interface caderno_alunoFieldRefs {
    readonly id: FieldRef<"caderno_aluno", 'Int'>
    readonly titulo: FieldRef<"caderno_aluno", 'String'>
    readonly texto: FieldRef<"caderno_aluno", 'String'>
    readonly aluno_id: FieldRef<"caderno_aluno", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * caderno_aluno findUnique
   */
  export type caderno_alunoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * Filter, which caderno_aluno to fetch.
     */
    where: caderno_alunoWhereUniqueInput
  }

  /**
   * caderno_aluno findUniqueOrThrow
   */
  export type caderno_alunoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * Filter, which caderno_aluno to fetch.
     */
    where: caderno_alunoWhereUniqueInput
  }

  /**
   * caderno_aluno findFirst
   */
  export type caderno_alunoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * Filter, which caderno_aluno to fetch.
     */
    where?: caderno_alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caderno_alunos to fetch.
     */
    orderBy?: caderno_alunoOrderByWithRelationInput | caderno_alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for caderno_alunos.
     */
    cursor?: caderno_alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caderno_alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caderno_alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of caderno_alunos.
     */
    distinct?: Caderno_alunoScalarFieldEnum | Caderno_alunoScalarFieldEnum[]
  }

  /**
   * caderno_aluno findFirstOrThrow
   */
  export type caderno_alunoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * Filter, which caderno_aluno to fetch.
     */
    where?: caderno_alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caderno_alunos to fetch.
     */
    orderBy?: caderno_alunoOrderByWithRelationInput | caderno_alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for caderno_alunos.
     */
    cursor?: caderno_alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caderno_alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caderno_alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of caderno_alunos.
     */
    distinct?: Caderno_alunoScalarFieldEnum | Caderno_alunoScalarFieldEnum[]
  }

  /**
   * caderno_aluno findMany
   */
  export type caderno_alunoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * Filter, which caderno_alunos to fetch.
     */
    where?: caderno_alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caderno_alunos to fetch.
     */
    orderBy?: caderno_alunoOrderByWithRelationInput | caderno_alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing caderno_alunos.
     */
    cursor?: caderno_alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caderno_alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caderno_alunos.
     */
    skip?: number
    distinct?: Caderno_alunoScalarFieldEnum | Caderno_alunoScalarFieldEnum[]
  }

  /**
   * caderno_aluno create
   */
  export type caderno_alunoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * The data needed to create a caderno_aluno.
     */
    data: XOR<caderno_alunoCreateInput, caderno_alunoUncheckedCreateInput>
  }

  /**
   * caderno_aluno createMany
   */
  export type caderno_alunoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many caderno_alunos.
     */
    data: caderno_alunoCreateManyInput | caderno_alunoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * caderno_aluno update
   */
  export type caderno_alunoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * The data needed to update a caderno_aluno.
     */
    data: XOR<caderno_alunoUpdateInput, caderno_alunoUncheckedUpdateInput>
    /**
     * Choose, which caderno_aluno to update.
     */
    where: caderno_alunoWhereUniqueInput
  }

  /**
   * caderno_aluno updateMany
   */
  export type caderno_alunoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update caderno_alunos.
     */
    data: XOR<caderno_alunoUpdateManyMutationInput, caderno_alunoUncheckedUpdateManyInput>
    /**
     * Filter which caderno_alunos to update
     */
    where?: caderno_alunoWhereInput
  }

  /**
   * caderno_aluno upsert
   */
  export type caderno_alunoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * The filter to search for the caderno_aluno to update in case it exists.
     */
    where: caderno_alunoWhereUniqueInput
    /**
     * In case the caderno_aluno found by the `where` argument doesn't exist, create a new caderno_aluno with this data.
     */
    create: XOR<caderno_alunoCreateInput, caderno_alunoUncheckedCreateInput>
    /**
     * In case the caderno_aluno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<caderno_alunoUpdateInput, caderno_alunoUncheckedUpdateInput>
  }

  /**
   * caderno_aluno delete
   */
  export type caderno_alunoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    /**
     * Filter which caderno_aluno to delete.
     */
    where: caderno_alunoWhereUniqueInput
  }

  /**
   * caderno_aluno deleteMany
   */
  export type caderno_alunoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which caderno_alunos to delete
     */
    where?: caderno_alunoWhereInput
  }

  /**
   * caderno_aluno without action
   */
  export type caderno_alunoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_alternativas
   */

  export type AggregateTbl_alternativas = {
    _count: Tbl_alternativasCountAggregateOutputType | null
    _avg: Tbl_alternativasAvgAggregateOutputType | null
    _sum: Tbl_alternativasSumAggregateOutputType | null
    _min: Tbl_alternativasMinAggregateOutputType | null
    _max: Tbl_alternativasMaxAggregateOutputType | null
  }

  export type Tbl_alternativasAvgAggregateOutputType = {
    id: number | null
    questao_id: number | null
  }

  export type Tbl_alternativasSumAggregateOutputType = {
    id: number | null
    questao_id: number | null
  }

  export type Tbl_alternativasMinAggregateOutputType = {
    id: number | null
    opcao: string | null
    resposta: boolean | null
    questao_id: number | null
  }

  export type Tbl_alternativasMaxAggregateOutputType = {
    id: number | null
    opcao: string | null
    resposta: boolean | null
    questao_id: number | null
  }

  export type Tbl_alternativasCountAggregateOutputType = {
    id: number
    opcao: number
    resposta: number
    questao_id: number
    _all: number
  }


  export type Tbl_alternativasAvgAggregateInputType = {
    id?: true
    questao_id?: true
  }

  export type Tbl_alternativasSumAggregateInputType = {
    id?: true
    questao_id?: true
  }

  export type Tbl_alternativasMinAggregateInputType = {
    id?: true
    opcao?: true
    resposta?: true
    questao_id?: true
  }

  export type Tbl_alternativasMaxAggregateInputType = {
    id?: true
    opcao?: true
    resposta?: true
    questao_id?: true
  }

  export type Tbl_alternativasCountAggregateInputType = {
    id?: true
    opcao?: true
    resposta?: true
    questao_id?: true
    _all?: true
  }

  export type Tbl_alternativasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_alternativas to aggregate.
     */
    where?: tbl_alternativasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_alternativas to fetch.
     */
    orderBy?: tbl_alternativasOrderByWithRelationInput | tbl_alternativasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_alternativasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_alternativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_alternativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_alternativas
    **/
    _count?: true | Tbl_alternativasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_alternativasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_alternativasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_alternativasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_alternativasMaxAggregateInputType
  }

  export type GetTbl_alternativasAggregateType<T extends Tbl_alternativasAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_alternativas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_alternativas[P]>
      : GetScalarType<T[P], AggregateTbl_alternativas[P]>
  }




  export type tbl_alternativasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_alternativasWhereInput
    orderBy?: tbl_alternativasOrderByWithAggregationInput | tbl_alternativasOrderByWithAggregationInput[]
    by: Tbl_alternativasScalarFieldEnum[] | Tbl_alternativasScalarFieldEnum
    having?: tbl_alternativasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_alternativasCountAggregateInputType | true
    _avg?: Tbl_alternativasAvgAggregateInputType
    _sum?: Tbl_alternativasSumAggregateInputType
    _min?: Tbl_alternativasMinAggregateInputType
    _max?: Tbl_alternativasMaxAggregateInputType
  }

  export type Tbl_alternativasGroupByOutputType = {
    id: number
    opcao: string
    resposta: boolean
    questao_id: number
    _count: Tbl_alternativasCountAggregateOutputType | null
    _avg: Tbl_alternativasAvgAggregateOutputType | null
    _sum: Tbl_alternativasSumAggregateOutputType | null
    _min: Tbl_alternativasMinAggregateOutputType | null
    _max: Tbl_alternativasMaxAggregateOutputType | null
  }

  type GetTbl_alternativasGroupByPayload<T extends tbl_alternativasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_alternativasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_alternativasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_alternativasGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_alternativasGroupByOutputType[P]>
        }
      >
    >


  export type tbl_alternativasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    opcao?: boolean
    resposta?: boolean
    questao_id?: boolean
    tbl_exercicio?: boolean | tbl_exercicioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_alternativas"]>


  export type tbl_alternativasSelectScalar = {
    id?: boolean
    opcao?: boolean
    resposta?: boolean
    questao_id?: boolean
  }

  export type tbl_alternativasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_exercicio?: boolean | tbl_exercicioDefaultArgs<ExtArgs>
  }

  export type $tbl_alternativasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_alternativas"
    objects: {
      tbl_exercicio: Prisma.$tbl_exercicioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      opcao: string
      resposta: boolean
      questao_id: number
    }, ExtArgs["result"]["tbl_alternativas"]>
    composites: {}
  }

  type tbl_alternativasGetPayload<S extends boolean | null | undefined | tbl_alternativasDefaultArgs> = $Result.GetResult<Prisma.$tbl_alternativasPayload, S>

  type tbl_alternativasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_alternativasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_alternativasCountAggregateInputType | true
    }

  export interface tbl_alternativasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_alternativas'], meta: { name: 'tbl_alternativas' } }
    /**
     * Find zero or one Tbl_alternativas that matches the filter.
     * @param {tbl_alternativasFindUniqueArgs} args - Arguments to find a Tbl_alternativas
     * @example
     * // Get one Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_alternativasFindUniqueArgs>(args: SelectSubset<T, tbl_alternativasFindUniqueArgs<ExtArgs>>): Prisma__tbl_alternativasClient<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_alternativas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_alternativasFindUniqueOrThrowArgs} args - Arguments to find a Tbl_alternativas
     * @example
     * // Get one Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_alternativasFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_alternativasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_alternativasClient<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_alternativas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alternativasFindFirstArgs} args - Arguments to find a Tbl_alternativas
     * @example
     * // Get one Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_alternativasFindFirstArgs>(args?: SelectSubset<T, tbl_alternativasFindFirstArgs<ExtArgs>>): Prisma__tbl_alternativasClient<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_alternativas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alternativasFindFirstOrThrowArgs} args - Arguments to find a Tbl_alternativas
     * @example
     * // Get one Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_alternativasFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_alternativasFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_alternativasClient<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_alternativas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alternativasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.findMany()
     * 
     * // Get first 10 Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_alternativasWithIdOnly = await prisma.tbl_alternativas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_alternativasFindManyArgs>(args?: SelectSubset<T, tbl_alternativasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_alternativas.
     * @param {tbl_alternativasCreateArgs} args - Arguments to create a Tbl_alternativas.
     * @example
     * // Create one Tbl_alternativas
     * const Tbl_alternativas = await prisma.tbl_alternativas.create({
     *   data: {
     *     // ... data to create a Tbl_alternativas
     *   }
     * })
     * 
     */
    create<T extends tbl_alternativasCreateArgs>(args: SelectSubset<T, tbl_alternativasCreateArgs<ExtArgs>>): Prisma__tbl_alternativasClient<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_alternativas.
     * @param {tbl_alternativasCreateManyArgs} args - Arguments to create many Tbl_alternativas.
     * @example
     * // Create many Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_alternativasCreateManyArgs>(args?: SelectSubset<T, tbl_alternativasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_alternativas.
     * @param {tbl_alternativasDeleteArgs} args - Arguments to delete one Tbl_alternativas.
     * @example
     * // Delete one Tbl_alternativas
     * const Tbl_alternativas = await prisma.tbl_alternativas.delete({
     *   where: {
     *     // ... filter to delete one Tbl_alternativas
     *   }
     * })
     * 
     */
    delete<T extends tbl_alternativasDeleteArgs>(args: SelectSubset<T, tbl_alternativasDeleteArgs<ExtArgs>>): Prisma__tbl_alternativasClient<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_alternativas.
     * @param {tbl_alternativasUpdateArgs} args - Arguments to update one Tbl_alternativas.
     * @example
     * // Update one Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_alternativasUpdateArgs>(args: SelectSubset<T, tbl_alternativasUpdateArgs<ExtArgs>>): Prisma__tbl_alternativasClient<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_alternativas.
     * @param {tbl_alternativasDeleteManyArgs} args - Arguments to filter Tbl_alternativas to delete.
     * @example
     * // Delete a few Tbl_alternativas
     * const { count } = await prisma.tbl_alternativas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_alternativasDeleteManyArgs>(args?: SelectSubset<T, tbl_alternativasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_alternativas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alternativasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_alternativasUpdateManyArgs>(args: SelectSubset<T, tbl_alternativasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_alternativas.
     * @param {tbl_alternativasUpsertArgs} args - Arguments to update or create a Tbl_alternativas.
     * @example
     * // Update or create a Tbl_alternativas
     * const tbl_alternativas = await prisma.tbl_alternativas.upsert({
     *   create: {
     *     // ... data to create a Tbl_alternativas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_alternativas we want to update
     *   }
     * })
     */
    upsert<T extends tbl_alternativasUpsertArgs>(args: SelectSubset<T, tbl_alternativasUpsertArgs<ExtArgs>>): Prisma__tbl_alternativasClient<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_alternativas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alternativasCountArgs} args - Arguments to filter Tbl_alternativas to count.
     * @example
     * // Count the number of Tbl_alternativas
     * const count = await prisma.tbl_alternativas.count({
     *   where: {
     *     // ... the filter for the Tbl_alternativas we want to count
     *   }
     * })
    **/
    count<T extends tbl_alternativasCountArgs>(
      args?: Subset<T, tbl_alternativasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_alternativasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_alternativas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_alternativasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_alternativasAggregateArgs>(args: Subset<T, Tbl_alternativasAggregateArgs>): Prisma.PrismaPromise<GetTbl_alternativasAggregateType<T>>

    /**
     * Group by Tbl_alternativas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alternativasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_alternativasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_alternativasGroupByArgs['orderBy'] }
        : { orderBy?: tbl_alternativasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_alternativasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_alternativasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_alternativas model
   */
  readonly fields: tbl_alternativasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_alternativas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_alternativasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_exercicio<T extends tbl_exercicioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_exercicioDefaultArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_alternativas model
   */ 
  interface tbl_alternativasFieldRefs {
    readonly id: FieldRef<"tbl_alternativas", 'Int'>
    readonly opcao: FieldRef<"tbl_alternativas", 'String'>
    readonly resposta: FieldRef<"tbl_alternativas", 'Boolean'>
    readonly questao_id: FieldRef<"tbl_alternativas", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_alternativas findUnique
   */
  export type tbl_alternativasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_alternativas to fetch.
     */
    where: tbl_alternativasWhereUniqueInput
  }

  /**
   * tbl_alternativas findUniqueOrThrow
   */
  export type tbl_alternativasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_alternativas to fetch.
     */
    where: tbl_alternativasWhereUniqueInput
  }

  /**
   * tbl_alternativas findFirst
   */
  export type tbl_alternativasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_alternativas to fetch.
     */
    where?: tbl_alternativasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_alternativas to fetch.
     */
    orderBy?: tbl_alternativasOrderByWithRelationInput | tbl_alternativasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_alternativas.
     */
    cursor?: tbl_alternativasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_alternativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_alternativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_alternativas.
     */
    distinct?: Tbl_alternativasScalarFieldEnum | Tbl_alternativasScalarFieldEnum[]
  }

  /**
   * tbl_alternativas findFirstOrThrow
   */
  export type tbl_alternativasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_alternativas to fetch.
     */
    where?: tbl_alternativasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_alternativas to fetch.
     */
    orderBy?: tbl_alternativasOrderByWithRelationInput | tbl_alternativasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_alternativas.
     */
    cursor?: tbl_alternativasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_alternativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_alternativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_alternativas.
     */
    distinct?: Tbl_alternativasScalarFieldEnum | Tbl_alternativasScalarFieldEnum[]
  }

  /**
   * tbl_alternativas findMany
   */
  export type tbl_alternativasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_alternativas to fetch.
     */
    where?: tbl_alternativasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_alternativas to fetch.
     */
    orderBy?: tbl_alternativasOrderByWithRelationInput | tbl_alternativasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_alternativas.
     */
    cursor?: tbl_alternativasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_alternativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_alternativas.
     */
    skip?: number
    distinct?: Tbl_alternativasScalarFieldEnum | Tbl_alternativasScalarFieldEnum[]
  }

  /**
   * tbl_alternativas create
   */
  export type tbl_alternativasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_alternativas.
     */
    data: XOR<tbl_alternativasCreateInput, tbl_alternativasUncheckedCreateInput>
  }

  /**
   * tbl_alternativas createMany
   */
  export type tbl_alternativasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_alternativas.
     */
    data: tbl_alternativasCreateManyInput | tbl_alternativasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_alternativas update
   */
  export type tbl_alternativasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_alternativas.
     */
    data: XOR<tbl_alternativasUpdateInput, tbl_alternativasUncheckedUpdateInput>
    /**
     * Choose, which tbl_alternativas to update.
     */
    where: tbl_alternativasWhereUniqueInput
  }

  /**
   * tbl_alternativas updateMany
   */
  export type tbl_alternativasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_alternativas.
     */
    data: XOR<tbl_alternativasUpdateManyMutationInput, tbl_alternativasUncheckedUpdateManyInput>
    /**
     * Filter which tbl_alternativas to update
     */
    where?: tbl_alternativasWhereInput
  }

  /**
   * tbl_alternativas upsert
   */
  export type tbl_alternativasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_alternativas to update in case it exists.
     */
    where: tbl_alternativasWhereUniqueInput
    /**
     * In case the tbl_alternativas found by the `where` argument doesn't exist, create a new tbl_alternativas with this data.
     */
    create: XOR<tbl_alternativasCreateInput, tbl_alternativasUncheckedCreateInput>
    /**
     * In case the tbl_alternativas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_alternativasUpdateInput, tbl_alternativasUncheckedUpdateInput>
  }

  /**
   * tbl_alternativas delete
   */
  export type tbl_alternativasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    /**
     * Filter which tbl_alternativas to delete.
     */
    where: tbl_alternativasWhereUniqueInput
  }

  /**
   * tbl_alternativas deleteMany
   */
  export type tbl_alternativasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_alternativas to delete
     */
    where?: tbl_alternativasWhereInput
  }

  /**
   * tbl_alternativas without action
   */
  export type tbl_alternativasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
  }


  /**
   * Model tbl_aluno
   */

  export type AggregateTbl_aluno = {
    _count: Tbl_alunoCountAggregateOutputType | null
    _avg: Tbl_alunoAvgAggregateOutputType | null
    _sum: Tbl_alunoSumAggregateOutputType | null
    _min: Tbl_alunoMinAggregateOutputType | null
    _max: Tbl_alunoMaxAggregateOutputType | null
  }

  export type Tbl_alunoAvgAggregateOutputType = {
    id: number | null
    icone_id: number | null
    curso_id: number | null
  }

  export type Tbl_alunoSumAggregateOutputType = {
    id: number | null
    icone_id: number | null
    curso_id: number | null
  }

  export type Tbl_alunoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    icone_id: number | null
    curso_id: number | null
    status: boolean | null
  }

  export type Tbl_alunoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    icone_id: number | null
    curso_id: number | null
    status: boolean | null
  }

  export type Tbl_alunoCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    senha: number
    icone_id: number
    curso_id: number
    status: number
    _all: number
  }


  export type Tbl_alunoAvgAggregateInputType = {
    id?: true
    icone_id?: true
    curso_id?: true
  }

  export type Tbl_alunoSumAggregateInputType = {
    id?: true
    icone_id?: true
    curso_id?: true
  }

  export type Tbl_alunoMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    icone_id?: true
    curso_id?: true
    status?: true
  }

  export type Tbl_alunoMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    icone_id?: true
    curso_id?: true
    status?: true
  }

  export type Tbl_alunoCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    icone_id?: true
    curso_id?: true
    status?: true
    _all?: true
  }

  export type Tbl_alunoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_aluno to aggregate.
     */
    where?: tbl_alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_alunos to fetch.
     */
    orderBy?: tbl_alunoOrderByWithRelationInput | tbl_alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_alunos
    **/
    _count?: true | Tbl_alunoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_alunoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_alunoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_alunoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_alunoMaxAggregateInputType
  }

  export type GetTbl_alunoAggregateType<T extends Tbl_alunoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_aluno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_aluno[P]>
      : GetScalarType<T[P], AggregateTbl_aluno[P]>
  }




  export type tbl_alunoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_alunoWhereInput
    orderBy?: tbl_alunoOrderByWithAggregationInput | tbl_alunoOrderByWithAggregationInput[]
    by: Tbl_alunoScalarFieldEnum[] | Tbl_alunoScalarFieldEnum
    having?: tbl_alunoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_alunoCountAggregateInputType | true
    _avg?: Tbl_alunoAvgAggregateInputType
    _sum?: Tbl_alunoSumAggregateInputType
    _min?: Tbl_alunoMinAggregateInputType
    _max?: Tbl_alunoMaxAggregateInputType
  }

  export type Tbl_alunoGroupByOutputType = {
    id: number
    nome: string
    email: string
    senha: string | null
    icone_id: number
    curso_id: number
    status: boolean | null
    _count: Tbl_alunoCountAggregateOutputType | null
    _avg: Tbl_alunoAvgAggregateOutputType | null
    _sum: Tbl_alunoSumAggregateOutputType | null
    _min: Tbl_alunoMinAggregateOutputType | null
    _max: Tbl_alunoMaxAggregateOutputType | null
  }

  type GetTbl_alunoGroupByPayload<T extends tbl_alunoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_alunoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_alunoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_alunoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_alunoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_alunoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    icone_id?: boolean
    curso_id?: boolean
    status?: boolean
    caderno_aluno?: boolean | tbl_aluno$caderno_alunoArgs<ExtArgs>
    tbl_icones?: boolean | tbl_iconesDefaultArgs<ExtArgs>
    tbl_cursos?: boolean | tbl_cursosDefaultArgs<ExtArgs>
    tbl_aluno_agenda?: boolean | tbl_aluno$tbl_aluno_agendaArgs<ExtArgs>
    _count?: boolean | Tbl_alunoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_aluno"]>


  export type tbl_alunoSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    icone_id?: boolean
    curso_id?: boolean
    status?: boolean
  }

  export type tbl_alunoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    caderno_aluno?: boolean | tbl_aluno$caderno_alunoArgs<ExtArgs>
    tbl_icones?: boolean | tbl_iconesDefaultArgs<ExtArgs>
    tbl_cursos?: boolean | tbl_cursosDefaultArgs<ExtArgs>
    tbl_aluno_agenda?: boolean | tbl_aluno$tbl_aluno_agendaArgs<ExtArgs>
    _count?: boolean | Tbl_alunoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_alunoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_aluno"
    objects: {
      caderno_aluno: Prisma.$caderno_alunoPayload<ExtArgs>[]
      tbl_icones: Prisma.$tbl_iconesPayload<ExtArgs>
      tbl_cursos: Prisma.$tbl_cursosPayload<ExtArgs>
      tbl_aluno_agenda: Prisma.$tbl_aluno_agendaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      senha: string | null
      icone_id: number
      curso_id: number
      status: boolean | null
    }, ExtArgs["result"]["tbl_aluno"]>
    composites: {}
  }

  type tbl_alunoGetPayload<S extends boolean | null | undefined | tbl_alunoDefaultArgs> = $Result.GetResult<Prisma.$tbl_alunoPayload, S>

  type tbl_alunoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_alunoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_alunoCountAggregateInputType | true
    }

  export interface tbl_alunoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_aluno'], meta: { name: 'tbl_aluno' } }
    /**
     * Find zero or one Tbl_aluno that matches the filter.
     * @param {tbl_alunoFindUniqueArgs} args - Arguments to find a Tbl_aluno
     * @example
     * // Get one Tbl_aluno
     * const tbl_aluno = await prisma.tbl_aluno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_alunoFindUniqueArgs>(args: SelectSubset<T, tbl_alunoFindUniqueArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_aluno that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_alunoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_aluno
     * @example
     * // Get one Tbl_aluno
     * const tbl_aluno = await prisma.tbl_aluno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_alunoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_alunoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_aluno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alunoFindFirstArgs} args - Arguments to find a Tbl_aluno
     * @example
     * // Get one Tbl_aluno
     * const tbl_aluno = await prisma.tbl_aluno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_alunoFindFirstArgs>(args?: SelectSubset<T, tbl_alunoFindFirstArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_aluno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alunoFindFirstOrThrowArgs} args - Arguments to find a Tbl_aluno
     * @example
     * // Get one Tbl_aluno
     * const tbl_aluno = await prisma.tbl_aluno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_alunoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_alunoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_alunos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alunoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_alunos
     * const tbl_alunos = await prisma.tbl_aluno.findMany()
     * 
     * // Get first 10 Tbl_alunos
     * const tbl_alunos = await prisma.tbl_aluno.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_alunoWithIdOnly = await prisma.tbl_aluno.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_alunoFindManyArgs>(args?: SelectSubset<T, tbl_alunoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_aluno.
     * @param {tbl_alunoCreateArgs} args - Arguments to create a Tbl_aluno.
     * @example
     * // Create one Tbl_aluno
     * const Tbl_aluno = await prisma.tbl_aluno.create({
     *   data: {
     *     // ... data to create a Tbl_aluno
     *   }
     * })
     * 
     */
    create<T extends tbl_alunoCreateArgs>(args: SelectSubset<T, tbl_alunoCreateArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_alunos.
     * @param {tbl_alunoCreateManyArgs} args - Arguments to create many Tbl_alunos.
     * @example
     * // Create many Tbl_alunos
     * const tbl_aluno = await prisma.tbl_aluno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_alunoCreateManyArgs>(args?: SelectSubset<T, tbl_alunoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_aluno.
     * @param {tbl_alunoDeleteArgs} args - Arguments to delete one Tbl_aluno.
     * @example
     * // Delete one Tbl_aluno
     * const Tbl_aluno = await prisma.tbl_aluno.delete({
     *   where: {
     *     // ... filter to delete one Tbl_aluno
     *   }
     * })
     * 
     */
    delete<T extends tbl_alunoDeleteArgs>(args: SelectSubset<T, tbl_alunoDeleteArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_aluno.
     * @param {tbl_alunoUpdateArgs} args - Arguments to update one Tbl_aluno.
     * @example
     * // Update one Tbl_aluno
     * const tbl_aluno = await prisma.tbl_aluno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_alunoUpdateArgs>(args: SelectSubset<T, tbl_alunoUpdateArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_alunos.
     * @param {tbl_alunoDeleteManyArgs} args - Arguments to filter Tbl_alunos to delete.
     * @example
     * // Delete a few Tbl_alunos
     * const { count } = await prisma.tbl_aluno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_alunoDeleteManyArgs>(args?: SelectSubset<T, tbl_alunoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_alunos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alunoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_alunos
     * const tbl_aluno = await prisma.tbl_aluno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_alunoUpdateManyArgs>(args: SelectSubset<T, tbl_alunoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_aluno.
     * @param {tbl_alunoUpsertArgs} args - Arguments to update or create a Tbl_aluno.
     * @example
     * // Update or create a Tbl_aluno
     * const tbl_aluno = await prisma.tbl_aluno.upsert({
     *   create: {
     *     // ... data to create a Tbl_aluno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_aluno we want to update
     *   }
     * })
     */
    upsert<T extends tbl_alunoUpsertArgs>(args: SelectSubset<T, tbl_alunoUpsertArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_alunos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alunoCountArgs} args - Arguments to filter Tbl_alunos to count.
     * @example
     * // Count the number of Tbl_alunos
     * const count = await prisma.tbl_aluno.count({
     *   where: {
     *     // ... the filter for the Tbl_alunos we want to count
     *   }
     * })
    **/
    count<T extends tbl_alunoCountArgs>(
      args?: Subset<T, tbl_alunoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_alunoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_aluno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_alunoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_alunoAggregateArgs>(args: Subset<T, Tbl_alunoAggregateArgs>): Prisma.PrismaPromise<GetTbl_alunoAggregateType<T>>

    /**
     * Group by Tbl_aluno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_alunoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_alunoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_alunoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_alunoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_alunoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_alunoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_aluno model
   */
  readonly fields: tbl_alunoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_aluno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_alunoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    caderno_aluno<T extends tbl_aluno$caderno_alunoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_aluno$caderno_alunoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$caderno_alunoPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_icones<T extends tbl_iconesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_iconesDefaultArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_cursos<T extends tbl_cursosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cursosDefaultArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_aluno_agenda<T extends tbl_aluno$tbl_aluno_agendaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_aluno$tbl_aluno_agendaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_aluno model
   */ 
  interface tbl_alunoFieldRefs {
    readonly id: FieldRef<"tbl_aluno", 'Int'>
    readonly nome: FieldRef<"tbl_aluno", 'String'>
    readonly email: FieldRef<"tbl_aluno", 'String'>
    readonly senha: FieldRef<"tbl_aluno", 'String'>
    readonly icone_id: FieldRef<"tbl_aluno", 'Int'>
    readonly curso_id: FieldRef<"tbl_aluno", 'Int'>
    readonly status: FieldRef<"tbl_aluno", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_aluno findUnique
   */
  export type tbl_alunoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno to fetch.
     */
    where: tbl_alunoWhereUniqueInput
  }

  /**
   * tbl_aluno findUniqueOrThrow
   */
  export type tbl_alunoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno to fetch.
     */
    where: tbl_alunoWhereUniqueInput
  }

  /**
   * tbl_aluno findFirst
   */
  export type tbl_alunoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno to fetch.
     */
    where?: tbl_alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_alunos to fetch.
     */
    orderBy?: tbl_alunoOrderByWithRelationInput | tbl_alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_alunos.
     */
    cursor?: tbl_alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_alunos.
     */
    distinct?: Tbl_alunoScalarFieldEnum | Tbl_alunoScalarFieldEnum[]
  }

  /**
   * tbl_aluno findFirstOrThrow
   */
  export type tbl_alunoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno to fetch.
     */
    where?: tbl_alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_alunos to fetch.
     */
    orderBy?: tbl_alunoOrderByWithRelationInput | tbl_alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_alunos.
     */
    cursor?: tbl_alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_alunos.
     */
    distinct?: Tbl_alunoScalarFieldEnum | Tbl_alunoScalarFieldEnum[]
  }

  /**
   * tbl_aluno findMany
   */
  export type tbl_alunoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_alunos to fetch.
     */
    where?: tbl_alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_alunos to fetch.
     */
    orderBy?: tbl_alunoOrderByWithRelationInput | tbl_alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_alunos.
     */
    cursor?: tbl_alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_alunos.
     */
    skip?: number
    distinct?: Tbl_alunoScalarFieldEnum | Tbl_alunoScalarFieldEnum[]
  }

  /**
   * tbl_aluno create
   */
  export type tbl_alunoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_aluno.
     */
    data: XOR<tbl_alunoCreateInput, tbl_alunoUncheckedCreateInput>
  }

  /**
   * tbl_aluno createMany
   */
  export type tbl_alunoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_alunos.
     */
    data: tbl_alunoCreateManyInput | tbl_alunoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_aluno update
   */
  export type tbl_alunoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_aluno.
     */
    data: XOR<tbl_alunoUpdateInput, tbl_alunoUncheckedUpdateInput>
    /**
     * Choose, which tbl_aluno to update.
     */
    where: tbl_alunoWhereUniqueInput
  }

  /**
   * tbl_aluno updateMany
   */
  export type tbl_alunoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_alunos.
     */
    data: XOR<tbl_alunoUpdateManyMutationInput, tbl_alunoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_alunos to update
     */
    where?: tbl_alunoWhereInput
  }

  /**
   * tbl_aluno upsert
   */
  export type tbl_alunoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_aluno to update in case it exists.
     */
    where: tbl_alunoWhereUniqueInput
    /**
     * In case the tbl_aluno found by the `where` argument doesn't exist, create a new tbl_aluno with this data.
     */
    create: XOR<tbl_alunoCreateInput, tbl_alunoUncheckedCreateInput>
    /**
     * In case the tbl_aluno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_alunoUpdateInput, tbl_alunoUncheckedUpdateInput>
  }

  /**
   * tbl_aluno delete
   */
  export type tbl_alunoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    /**
     * Filter which tbl_aluno to delete.
     */
    where: tbl_alunoWhereUniqueInput
  }

  /**
   * tbl_aluno deleteMany
   */
  export type tbl_alunoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_alunos to delete
     */
    where?: tbl_alunoWhereInput
  }

  /**
   * tbl_aluno.caderno_aluno
   */
  export type tbl_aluno$caderno_alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caderno_aluno
     */
    select?: caderno_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caderno_alunoInclude<ExtArgs> | null
    where?: caderno_alunoWhereInput
    orderBy?: caderno_alunoOrderByWithRelationInput | caderno_alunoOrderByWithRelationInput[]
    cursor?: caderno_alunoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Caderno_alunoScalarFieldEnum | Caderno_alunoScalarFieldEnum[]
  }

  /**
   * tbl_aluno.tbl_aluno_agenda
   */
  export type tbl_aluno$tbl_aluno_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    where?: tbl_aluno_agendaWhereInput
    orderBy?: tbl_aluno_agendaOrderByWithRelationInput | tbl_aluno_agendaOrderByWithRelationInput[]
    cursor?: tbl_aluno_agendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_aluno_agendaScalarFieldEnum | Tbl_aluno_agendaScalarFieldEnum[]
  }

  /**
   * tbl_aluno without action
   */
  export type tbl_alunoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_aluno_agenda
   */

  export type AggregateTbl_aluno_agenda = {
    _count: Tbl_aluno_agendaCountAggregateOutputType | null
    _avg: Tbl_aluno_agendaAvgAggregateOutputType | null
    _sum: Tbl_aluno_agendaSumAggregateOutputType | null
    _min: Tbl_aluno_agendaMinAggregateOutputType | null
    _max: Tbl_aluno_agendaMaxAggregateOutputType | null
  }

  export type Tbl_aluno_agendaAvgAggregateOutputType = {
    id: number | null
    carga_horaria: number | null
    semana_id: number | null
    aluno_id: number | null
  }

  export type Tbl_aluno_agendaSumAggregateOutputType = {
    id: number | null
    carga_horaria: number | null
    semana_id: number | null
    aluno_id: number | null
  }

  export type Tbl_aluno_agendaMinAggregateOutputType = {
    id: number | null
    carga_horaria: number | null
    semana_id: number | null
    aluno_id: number | null
  }

  export type Tbl_aluno_agendaMaxAggregateOutputType = {
    id: number | null
    carga_horaria: number | null
    semana_id: number | null
    aluno_id: number | null
  }

  export type Tbl_aluno_agendaCountAggregateOutputType = {
    id: number
    carga_horaria: number
    semana_id: number
    aluno_id: number
    _all: number
  }


  export type Tbl_aluno_agendaAvgAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    aluno_id?: true
  }

  export type Tbl_aluno_agendaSumAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    aluno_id?: true
  }

  export type Tbl_aluno_agendaMinAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    aluno_id?: true
  }

  export type Tbl_aluno_agendaMaxAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    aluno_id?: true
  }

  export type Tbl_aluno_agendaCountAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    aluno_id?: true
    _all?: true
  }

  export type Tbl_aluno_agendaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_aluno_agenda to aggregate.
     */
    where?: tbl_aluno_agendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_aluno_agenda to fetch.
     */
    orderBy?: tbl_aluno_agendaOrderByWithRelationInput | tbl_aluno_agendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_aluno_agendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_aluno_agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_aluno_agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_aluno_agenda
    **/
    _count?: true | Tbl_aluno_agendaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_aluno_agendaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_aluno_agendaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_aluno_agendaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_aluno_agendaMaxAggregateInputType
  }

  export type GetTbl_aluno_agendaAggregateType<T extends Tbl_aluno_agendaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_aluno_agenda]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_aluno_agenda[P]>
      : GetScalarType<T[P], AggregateTbl_aluno_agenda[P]>
  }




  export type tbl_aluno_agendaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_aluno_agendaWhereInput
    orderBy?: tbl_aluno_agendaOrderByWithAggregationInput | tbl_aluno_agendaOrderByWithAggregationInput[]
    by: Tbl_aluno_agendaScalarFieldEnum[] | Tbl_aluno_agendaScalarFieldEnum
    having?: tbl_aluno_agendaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_aluno_agendaCountAggregateInputType | true
    _avg?: Tbl_aluno_agendaAvgAggregateInputType
    _sum?: Tbl_aluno_agendaSumAggregateInputType
    _min?: Tbl_aluno_agendaMinAggregateInputType
    _max?: Tbl_aluno_agendaMaxAggregateInputType
  }

  export type Tbl_aluno_agendaGroupByOutputType = {
    id: number
    carga_horaria: number
    semana_id: number
    aluno_id: number
    _count: Tbl_aluno_agendaCountAggregateOutputType | null
    _avg: Tbl_aluno_agendaAvgAggregateOutputType | null
    _sum: Tbl_aluno_agendaSumAggregateOutputType | null
    _min: Tbl_aluno_agendaMinAggregateOutputType | null
    _max: Tbl_aluno_agendaMaxAggregateOutputType | null
  }

  type GetTbl_aluno_agendaGroupByPayload<T extends tbl_aluno_agendaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_aluno_agendaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_aluno_agendaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_aluno_agendaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_aluno_agendaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_aluno_agendaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    carga_horaria?: boolean
    semana_id?: boolean
    aluno_id?: boolean
    tbl_semana?: boolean | tbl_semanaDefaultArgs<ExtArgs>
    tbl_aluno?: boolean | tbl_alunoDefaultArgs<ExtArgs>
    tbl_cronograma?: boolean | tbl_aluno_agenda$tbl_cronogramaArgs<ExtArgs>
    _count?: boolean | Tbl_aluno_agendaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_aluno_agenda"]>


  export type tbl_aluno_agendaSelectScalar = {
    id?: boolean
    carga_horaria?: boolean
    semana_id?: boolean
    aluno_id?: boolean
  }

  export type tbl_aluno_agendaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_semana?: boolean | tbl_semanaDefaultArgs<ExtArgs>
    tbl_aluno?: boolean | tbl_alunoDefaultArgs<ExtArgs>
    tbl_cronograma?: boolean | tbl_aluno_agenda$tbl_cronogramaArgs<ExtArgs>
    _count?: boolean | Tbl_aluno_agendaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_aluno_agendaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_aluno_agenda"
    objects: {
      tbl_semana: Prisma.$tbl_semanaPayload<ExtArgs>
      tbl_aluno: Prisma.$tbl_alunoPayload<ExtArgs>
      tbl_cronograma: Prisma.$tbl_cronogramaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      carga_horaria: number
      semana_id: number
      aluno_id: number
    }, ExtArgs["result"]["tbl_aluno_agenda"]>
    composites: {}
  }

  type tbl_aluno_agendaGetPayload<S extends boolean | null | undefined | tbl_aluno_agendaDefaultArgs> = $Result.GetResult<Prisma.$tbl_aluno_agendaPayload, S>

  type tbl_aluno_agendaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_aluno_agendaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_aluno_agendaCountAggregateInputType | true
    }

  export interface tbl_aluno_agendaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_aluno_agenda'], meta: { name: 'tbl_aluno_agenda' } }
    /**
     * Find zero or one Tbl_aluno_agenda that matches the filter.
     * @param {tbl_aluno_agendaFindUniqueArgs} args - Arguments to find a Tbl_aluno_agenda
     * @example
     * // Get one Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_aluno_agendaFindUniqueArgs>(args: SelectSubset<T, tbl_aluno_agendaFindUniqueArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_aluno_agenda that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_aluno_agendaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_aluno_agenda
     * @example
     * // Get one Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_aluno_agendaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_aluno_agendaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_aluno_agenda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_aluno_agendaFindFirstArgs} args - Arguments to find a Tbl_aluno_agenda
     * @example
     * // Get one Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_aluno_agendaFindFirstArgs>(args?: SelectSubset<T, tbl_aluno_agendaFindFirstArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_aluno_agenda that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_aluno_agendaFindFirstOrThrowArgs} args - Arguments to find a Tbl_aluno_agenda
     * @example
     * // Get one Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_aluno_agendaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_aluno_agendaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_aluno_agenda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_aluno_agendaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.findMany()
     * 
     * // Get first 10 Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_aluno_agendaWithIdOnly = await prisma.tbl_aluno_agenda.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_aluno_agendaFindManyArgs>(args?: SelectSubset<T, tbl_aluno_agendaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_aluno_agenda.
     * @param {tbl_aluno_agendaCreateArgs} args - Arguments to create a Tbl_aluno_agenda.
     * @example
     * // Create one Tbl_aluno_agenda
     * const Tbl_aluno_agenda = await prisma.tbl_aluno_agenda.create({
     *   data: {
     *     // ... data to create a Tbl_aluno_agenda
     *   }
     * })
     * 
     */
    create<T extends tbl_aluno_agendaCreateArgs>(args: SelectSubset<T, tbl_aluno_agendaCreateArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_aluno_agenda.
     * @param {tbl_aluno_agendaCreateManyArgs} args - Arguments to create many Tbl_aluno_agenda.
     * @example
     * // Create many Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_aluno_agendaCreateManyArgs>(args?: SelectSubset<T, tbl_aluno_agendaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_aluno_agenda.
     * @param {tbl_aluno_agendaDeleteArgs} args - Arguments to delete one Tbl_aluno_agenda.
     * @example
     * // Delete one Tbl_aluno_agenda
     * const Tbl_aluno_agenda = await prisma.tbl_aluno_agenda.delete({
     *   where: {
     *     // ... filter to delete one Tbl_aluno_agenda
     *   }
     * })
     * 
     */
    delete<T extends tbl_aluno_agendaDeleteArgs>(args: SelectSubset<T, tbl_aluno_agendaDeleteArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_aluno_agenda.
     * @param {tbl_aluno_agendaUpdateArgs} args - Arguments to update one Tbl_aluno_agenda.
     * @example
     * // Update one Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_aluno_agendaUpdateArgs>(args: SelectSubset<T, tbl_aluno_agendaUpdateArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_aluno_agenda.
     * @param {tbl_aluno_agendaDeleteManyArgs} args - Arguments to filter Tbl_aluno_agenda to delete.
     * @example
     * // Delete a few Tbl_aluno_agenda
     * const { count } = await prisma.tbl_aluno_agenda.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_aluno_agendaDeleteManyArgs>(args?: SelectSubset<T, tbl_aluno_agendaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_aluno_agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_aluno_agendaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_aluno_agendaUpdateManyArgs>(args: SelectSubset<T, tbl_aluno_agendaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_aluno_agenda.
     * @param {tbl_aluno_agendaUpsertArgs} args - Arguments to update or create a Tbl_aluno_agenda.
     * @example
     * // Update or create a Tbl_aluno_agenda
     * const tbl_aluno_agenda = await prisma.tbl_aluno_agenda.upsert({
     *   create: {
     *     // ... data to create a Tbl_aluno_agenda
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_aluno_agenda we want to update
     *   }
     * })
     */
    upsert<T extends tbl_aluno_agendaUpsertArgs>(args: SelectSubset<T, tbl_aluno_agendaUpsertArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_aluno_agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_aluno_agendaCountArgs} args - Arguments to filter Tbl_aluno_agenda to count.
     * @example
     * // Count the number of Tbl_aluno_agenda
     * const count = await prisma.tbl_aluno_agenda.count({
     *   where: {
     *     // ... the filter for the Tbl_aluno_agenda we want to count
     *   }
     * })
    **/
    count<T extends tbl_aluno_agendaCountArgs>(
      args?: Subset<T, tbl_aluno_agendaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_aluno_agendaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_aluno_agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_aluno_agendaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_aluno_agendaAggregateArgs>(args: Subset<T, Tbl_aluno_agendaAggregateArgs>): Prisma.PrismaPromise<GetTbl_aluno_agendaAggregateType<T>>

    /**
     * Group by Tbl_aluno_agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_aluno_agendaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_aluno_agendaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_aluno_agendaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_aluno_agendaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_aluno_agendaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_aluno_agendaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_aluno_agenda model
   */
  readonly fields: tbl_aluno_agendaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_aluno_agenda.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_aluno_agendaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_semana<T extends tbl_semanaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_semanaDefaultArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_aluno<T extends tbl_alunoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_alunoDefaultArgs<ExtArgs>>): Prisma__tbl_alunoClient<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_cronograma<T extends tbl_aluno_agenda$tbl_cronogramaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_aluno_agenda$tbl_cronogramaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_aluno_agenda model
   */ 
  interface tbl_aluno_agendaFieldRefs {
    readonly id: FieldRef<"tbl_aluno_agenda", 'Int'>
    readonly carga_horaria: FieldRef<"tbl_aluno_agenda", 'Int'>
    readonly semana_id: FieldRef<"tbl_aluno_agenda", 'Int'>
    readonly aluno_id: FieldRef<"tbl_aluno_agenda", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_aluno_agenda findUnique
   */
  export type tbl_aluno_agendaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno_agenda to fetch.
     */
    where: tbl_aluno_agendaWhereUniqueInput
  }

  /**
   * tbl_aluno_agenda findUniqueOrThrow
   */
  export type tbl_aluno_agendaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno_agenda to fetch.
     */
    where: tbl_aluno_agendaWhereUniqueInput
  }

  /**
   * tbl_aluno_agenda findFirst
   */
  export type tbl_aluno_agendaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno_agenda to fetch.
     */
    where?: tbl_aluno_agendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_aluno_agenda to fetch.
     */
    orderBy?: tbl_aluno_agendaOrderByWithRelationInput | tbl_aluno_agendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_aluno_agenda.
     */
    cursor?: tbl_aluno_agendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_aluno_agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_aluno_agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_aluno_agenda.
     */
    distinct?: Tbl_aluno_agendaScalarFieldEnum | Tbl_aluno_agendaScalarFieldEnum[]
  }

  /**
   * tbl_aluno_agenda findFirstOrThrow
   */
  export type tbl_aluno_agendaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno_agenda to fetch.
     */
    where?: tbl_aluno_agendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_aluno_agenda to fetch.
     */
    orderBy?: tbl_aluno_agendaOrderByWithRelationInput | tbl_aluno_agendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_aluno_agenda.
     */
    cursor?: tbl_aluno_agendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_aluno_agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_aluno_agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_aluno_agenda.
     */
    distinct?: Tbl_aluno_agendaScalarFieldEnum | Tbl_aluno_agendaScalarFieldEnum[]
  }

  /**
   * tbl_aluno_agenda findMany
   */
  export type tbl_aluno_agendaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_aluno_agenda to fetch.
     */
    where?: tbl_aluno_agendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_aluno_agenda to fetch.
     */
    orderBy?: tbl_aluno_agendaOrderByWithRelationInput | tbl_aluno_agendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_aluno_agenda.
     */
    cursor?: tbl_aluno_agendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_aluno_agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_aluno_agenda.
     */
    skip?: number
    distinct?: Tbl_aluno_agendaScalarFieldEnum | Tbl_aluno_agendaScalarFieldEnum[]
  }

  /**
   * tbl_aluno_agenda create
   */
  export type tbl_aluno_agendaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_aluno_agenda.
     */
    data: XOR<tbl_aluno_agendaCreateInput, tbl_aluno_agendaUncheckedCreateInput>
  }

  /**
   * tbl_aluno_agenda createMany
   */
  export type tbl_aluno_agendaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_aluno_agenda.
     */
    data: tbl_aluno_agendaCreateManyInput | tbl_aluno_agendaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_aluno_agenda update
   */
  export type tbl_aluno_agendaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_aluno_agenda.
     */
    data: XOR<tbl_aluno_agendaUpdateInput, tbl_aluno_agendaUncheckedUpdateInput>
    /**
     * Choose, which tbl_aluno_agenda to update.
     */
    where: tbl_aluno_agendaWhereUniqueInput
  }

  /**
   * tbl_aluno_agenda updateMany
   */
  export type tbl_aluno_agendaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_aluno_agenda.
     */
    data: XOR<tbl_aluno_agendaUpdateManyMutationInput, tbl_aluno_agendaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_aluno_agenda to update
     */
    where?: tbl_aluno_agendaWhereInput
  }

  /**
   * tbl_aluno_agenda upsert
   */
  export type tbl_aluno_agendaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_aluno_agenda to update in case it exists.
     */
    where: tbl_aluno_agendaWhereUniqueInput
    /**
     * In case the tbl_aluno_agenda found by the `where` argument doesn't exist, create a new tbl_aluno_agenda with this data.
     */
    create: XOR<tbl_aluno_agendaCreateInput, tbl_aluno_agendaUncheckedCreateInput>
    /**
     * In case the tbl_aluno_agenda was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_aluno_agendaUpdateInput, tbl_aluno_agendaUncheckedUpdateInput>
  }

  /**
   * tbl_aluno_agenda delete
   */
  export type tbl_aluno_agendaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    /**
     * Filter which tbl_aluno_agenda to delete.
     */
    where: tbl_aluno_agendaWhereUniqueInput
  }

  /**
   * tbl_aluno_agenda deleteMany
   */
  export type tbl_aluno_agendaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_aluno_agenda to delete
     */
    where?: tbl_aluno_agendaWhereInput
  }

  /**
   * tbl_aluno_agenda.tbl_cronograma
   */
  export type tbl_aluno_agenda$tbl_cronogramaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    where?: tbl_cronogramaWhereInput
    orderBy?: tbl_cronogramaOrderByWithRelationInput | tbl_cronogramaOrderByWithRelationInput[]
    cursor?: tbl_cronogramaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_cronogramaScalarFieldEnum | Tbl_cronogramaScalarFieldEnum[]
  }

  /**
   * tbl_aluno_agenda without action
   */
  export type tbl_aluno_agendaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_cronograma
   */

  export type AggregateTbl_cronograma = {
    _count: Tbl_cronogramaCountAggregateOutputType | null
    _avg: Tbl_cronogramaAvgAggregateOutputType | null
    _sum: Tbl_cronogramaSumAggregateOutputType | null
    _min: Tbl_cronogramaMinAggregateOutputType | null
    _max: Tbl_cronogramaMaxAggregateOutputType | null
  }

  export type Tbl_cronogramaAvgAggregateOutputType = {
    id: number | null
    agenda_aluno_id: number | null
    disciplina_id: number | null
  }

  export type Tbl_cronogramaSumAggregateOutputType = {
    id: number | null
    agenda_aluno_id: number | null
    disciplina_id: number | null
  }

  export type Tbl_cronogramaMinAggregateOutputType = {
    id: number | null
    agenda_aluno_id: number | null
    disciplina_id: number | null
  }

  export type Tbl_cronogramaMaxAggregateOutputType = {
    id: number | null
    agenda_aluno_id: number | null
    disciplina_id: number | null
  }

  export type Tbl_cronogramaCountAggregateOutputType = {
    id: number
    agenda_aluno_id: number
    disciplina_id: number
    _all: number
  }


  export type Tbl_cronogramaAvgAggregateInputType = {
    id?: true
    agenda_aluno_id?: true
    disciplina_id?: true
  }

  export type Tbl_cronogramaSumAggregateInputType = {
    id?: true
    agenda_aluno_id?: true
    disciplina_id?: true
  }

  export type Tbl_cronogramaMinAggregateInputType = {
    id?: true
    agenda_aluno_id?: true
    disciplina_id?: true
  }

  export type Tbl_cronogramaMaxAggregateInputType = {
    id?: true
    agenda_aluno_id?: true
    disciplina_id?: true
  }

  export type Tbl_cronogramaCountAggregateInputType = {
    id?: true
    agenda_aluno_id?: true
    disciplina_id?: true
    _all?: true
  }

  export type Tbl_cronogramaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cronograma to aggregate.
     */
    where?: tbl_cronogramaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cronogramas to fetch.
     */
    orderBy?: tbl_cronogramaOrderByWithRelationInput | tbl_cronogramaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_cronogramaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cronogramas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cronogramas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_cronogramas
    **/
    _count?: true | Tbl_cronogramaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_cronogramaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_cronogramaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_cronogramaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_cronogramaMaxAggregateInputType
  }

  export type GetTbl_cronogramaAggregateType<T extends Tbl_cronogramaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_cronograma]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_cronograma[P]>
      : GetScalarType<T[P], AggregateTbl_cronograma[P]>
  }




  export type tbl_cronogramaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cronogramaWhereInput
    orderBy?: tbl_cronogramaOrderByWithAggregationInput | tbl_cronogramaOrderByWithAggregationInput[]
    by: Tbl_cronogramaScalarFieldEnum[] | Tbl_cronogramaScalarFieldEnum
    having?: tbl_cronogramaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_cronogramaCountAggregateInputType | true
    _avg?: Tbl_cronogramaAvgAggregateInputType
    _sum?: Tbl_cronogramaSumAggregateInputType
    _min?: Tbl_cronogramaMinAggregateInputType
    _max?: Tbl_cronogramaMaxAggregateInputType
  }

  export type Tbl_cronogramaGroupByOutputType = {
    id: number
    agenda_aluno_id: number
    disciplina_id: number
    _count: Tbl_cronogramaCountAggregateOutputType | null
    _avg: Tbl_cronogramaAvgAggregateOutputType | null
    _sum: Tbl_cronogramaSumAggregateOutputType | null
    _min: Tbl_cronogramaMinAggregateOutputType | null
    _max: Tbl_cronogramaMaxAggregateOutputType | null
  }

  type GetTbl_cronogramaGroupByPayload<T extends tbl_cronogramaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_cronogramaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_cronogramaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_cronogramaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_cronogramaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_cronogramaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agenda_aluno_id?: boolean
    disciplina_id?: boolean
    tbl_aluno_agenda?: boolean | tbl_aluno_agendaDefaultArgs<ExtArgs>
    tbl_disciplina?: boolean | tbl_disciplinaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_cronograma"]>


  export type tbl_cronogramaSelectScalar = {
    id?: boolean
    agenda_aluno_id?: boolean
    disciplina_id?: boolean
  }

  export type tbl_cronogramaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_aluno_agenda?: boolean | tbl_aluno_agendaDefaultArgs<ExtArgs>
    tbl_disciplina?: boolean | tbl_disciplinaDefaultArgs<ExtArgs>
  }

  export type $tbl_cronogramaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_cronograma"
    objects: {
      tbl_aluno_agenda: Prisma.$tbl_aluno_agendaPayload<ExtArgs>
      tbl_disciplina: Prisma.$tbl_disciplinaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      agenda_aluno_id: number
      disciplina_id: number
    }, ExtArgs["result"]["tbl_cronograma"]>
    composites: {}
  }

  type tbl_cronogramaGetPayload<S extends boolean | null | undefined | tbl_cronogramaDefaultArgs> = $Result.GetResult<Prisma.$tbl_cronogramaPayload, S>

  type tbl_cronogramaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_cronogramaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_cronogramaCountAggregateInputType | true
    }

  export interface tbl_cronogramaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_cronograma'], meta: { name: 'tbl_cronograma' } }
    /**
     * Find zero or one Tbl_cronograma that matches the filter.
     * @param {tbl_cronogramaFindUniqueArgs} args - Arguments to find a Tbl_cronograma
     * @example
     * // Get one Tbl_cronograma
     * const tbl_cronograma = await prisma.tbl_cronograma.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_cronogramaFindUniqueArgs>(args: SelectSubset<T, tbl_cronogramaFindUniqueArgs<ExtArgs>>): Prisma__tbl_cronogramaClient<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_cronograma that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_cronogramaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_cronograma
     * @example
     * // Get one Tbl_cronograma
     * const tbl_cronograma = await prisma.tbl_cronograma.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_cronogramaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_cronogramaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_cronogramaClient<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_cronograma that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cronogramaFindFirstArgs} args - Arguments to find a Tbl_cronograma
     * @example
     * // Get one Tbl_cronograma
     * const tbl_cronograma = await prisma.tbl_cronograma.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_cronogramaFindFirstArgs>(args?: SelectSubset<T, tbl_cronogramaFindFirstArgs<ExtArgs>>): Prisma__tbl_cronogramaClient<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_cronograma that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cronogramaFindFirstOrThrowArgs} args - Arguments to find a Tbl_cronograma
     * @example
     * // Get one Tbl_cronograma
     * const tbl_cronograma = await prisma.tbl_cronograma.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_cronogramaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_cronogramaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_cronogramaClient<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_cronogramas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cronogramaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_cronogramas
     * const tbl_cronogramas = await prisma.tbl_cronograma.findMany()
     * 
     * // Get first 10 Tbl_cronogramas
     * const tbl_cronogramas = await prisma.tbl_cronograma.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_cronogramaWithIdOnly = await prisma.tbl_cronograma.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_cronogramaFindManyArgs>(args?: SelectSubset<T, tbl_cronogramaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_cronograma.
     * @param {tbl_cronogramaCreateArgs} args - Arguments to create a Tbl_cronograma.
     * @example
     * // Create one Tbl_cronograma
     * const Tbl_cronograma = await prisma.tbl_cronograma.create({
     *   data: {
     *     // ... data to create a Tbl_cronograma
     *   }
     * })
     * 
     */
    create<T extends tbl_cronogramaCreateArgs>(args: SelectSubset<T, tbl_cronogramaCreateArgs<ExtArgs>>): Prisma__tbl_cronogramaClient<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_cronogramas.
     * @param {tbl_cronogramaCreateManyArgs} args - Arguments to create many Tbl_cronogramas.
     * @example
     * // Create many Tbl_cronogramas
     * const tbl_cronograma = await prisma.tbl_cronograma.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_cronogramaCreateManyArgs>(args?: SelectSubset<T, tbl_cronogramaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_cronograma.
     * @param {tbl_cronogramaDeleteArgs} args - Arguments to delete one Tbl_cronograma.
     * @example
     * // Delete one Tbl_cronograma
     * const Tbl_cronograma = await prisma.tbl_cronograma.delete({
     *   where: {
     *     // ... filter to delete one Tbl_cronograma
     *   }
     * })
     * 
     */
    delete<T extends tbl_cronogramaDeleteArgs>(args: SelectSubset<T, tbl_cronogramaDeleteArgs<ExtArgs>>): Prisma__tbl_cronogramaClient<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_cronograma.
     * @param {tbl_cronogramaUpdateArgs} args - Arguments to update one Tbl_cronograma.
     * @example
     * // Update one Tbl_cronograma
     * const tbl_cronograma = await prisma.tbl_cronograma.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_cronogramaUpdateArgs>(args: SelectSubset<T, tbl_cronogramaUpdateArgs<ExtArgs>>): Prisma__tbl_cronogramaClient<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_cronogramas.
     * @param {tbl_cronogramaDeleteManyArgs} args - Arguments to filter Tbl_cronogramas to delete.
     * @example
     * // Delete a few Tbl_cronogramas
     * const { count } = await prisma.tbl_cronograma.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_cronogramaDeleteManyArgs>(args?: SelectSubset<T, tbl_cronogramaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_cronogramas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cronogramaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_cronogramas
     * const tbl_cronograma = await prisma.tbl_cronograma.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_cronogramaUpdateManyArgs>(args: SelectSubset<T, tbl_cronogramaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_cronograma.
     * @param {tbl_cronogramaUpsertArgs} args - Arguments to update or create a Tbl_cronograma.
     * @example
     * // Update or create a Tbl_cronograma
     * const tbl_cronograma = await prisma.tbl_cronograma.upsert({
     *   create: {
     *     // ... data to create a Tbl_cronograma
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_cronograma we want to update
     *   }
     * })
     */
    upsert<T extends tbl_cronogramaUpsertArgs>(args: SelectSubset<T, tbl_cronogramaUpsertArgs<ExtArgs>>): Prisma__tbl_cronogramaClient<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_cronogramas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cronogramaCountArgs} args - Arguments to filter Tbl_cronogramas to count.
     * @example
     * // Count the number of Tbl_cronogramas
     * const count = await prisma.tbl_cronograma.count({
     *   where: {
     *     // ... the filter for the Tbl_cronogramas we want to count
     *   }
     * })
    **/
    count<T extends tbl_cronogramaCountArgs>(
      args?: Subset<T, tbl_cronogramaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_cronogramaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_cronograma.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_cronogramaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_cronogramaAggregateArgs>(args: Subset<T, Tbl_cronogramaAggregateArgs>): Prisma.PrismaPromise<GetTbl_cronogramaAggregateType<T>>

    /**
     * Group by Tbl_cronograma.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cronogramaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_cronogramaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_cronogramaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_cronogramaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_cronogramaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_cronogramaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_cronograma model
   */
  readonly fields: tbl_cronogramaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_cronograma.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_cronogramaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_aluno_agenda<T extends tbl_aluno_agendaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_aluno_agendaDefaultArgs<ExtArgs>>): Prisma__tbl_aluno_agendaClient<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_disciplina<T extends tbl_disciplinaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_disciplinaDefaultArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_cronograma model
   */ 
  interface tbl_cronogramaFieldRefs {
    readonly id: FieldRef<"tbl_cronograma", 'Int'>
    readonly agenda_aluno_id: FieldRef<"tbl_cronograma", 'Int'>
    readonly disciplina_id: FieldRef<"tbl_cronograma", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_cronograma findUnique
   */
  export type tbl_cronogramaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cronograma to fetch.
     */
    where: tbl_cronogramaWhereUniqueInput
  }

  /**
   * tbl_cronograma findUniqueOrThrow
   */
  export type tbl_cronogramaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cronograma to fetch.
     */
    where: tbl_cronogramaWhereUniqueInput
  }

  /**
   * tbl_cronograma findFirst
   */
  export type tbl_cronogramaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cronograma to fetch.
     */
    where?: tbl_cronogramaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cronogramas to fetch.
     */
    orderBy?: tbl_cronogramaOrderByWithRelationInput | tbl_cronogramaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cronogramas.
     */
    cursor?: tbl_cronogramaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cronogramas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cronogramas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cronogramas.
     */
    distinct?: Tbl_cronogramaScalarFieldEnum | Tbl_cronogramaScalarFieldEnum[]
  }

  /**
   * tbl_cronograma findFirstOrThrow
   */
  export type tbl_cronogramaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cronograma to fetch.
     */
    where?: tbl_cronogramaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cronogramas to fetch.
     */
    orderBy?: tbl_cronogramaOrderByWithRelationInput | tbl_cronogramaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cronogramas.
     */
    cursor?: tbl_cronogramaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cronogramas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cronogramas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cronogramas.
     */
    distinct?: Tbl_cronogramaScalarFieldEnum | Tbl_cronogramaScalarFieldEnum[]
  }

  /**
   * tbl_cronograma findMany
   */
  export type tbl_cronogramaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cronogramas to fetch.
     */
    where?: tbl_cronogramaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cronogramas to fetch.
     */
    orderBy?: tbl_cronogramaOrderByWithRelationInput | tbl_cronogramaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_cronogramas.
     */
    cursor?: tbl_cronogramaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cronogramas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cronogramas.
     */
    skip?: number
    distinct?: Tbl_cronogramaScalarFieldEnum | Tbl_cronogramaScalarFieldEnum[]
  }

  /**
   * tbl_cronograma create
   */
  export type tbl_cronogramaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_cronograma.
     */
    data: XOR<tbl_cronogramaCreateInput, tbl_cronogramaUncheckedCreateInput>
  }

  /**
   * tbl_cronograma createMany
   */
  export type tbl_cronogramaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_cronogramas.
     */
    data: tbl_cronogramaCreateManyInput | tbl_cronogramaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_cronograma update
   */
  export type tbl_cronogramaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_cronograma.
     */
    data: XOR<tbl_cronogramaUpdateInput, tbl_cronogramaUncheckedUpdateInput>
    /**
     * Choose, which tbl_cronograma to update.
     */
    where: tbl_cronogramaWhereUniqueInput
  }

  /**
   * tbl_cronograma updateMany
   */
  export type tbl_cronogramaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_cronogramas.
     */
    data: XOR<tbl_cronogramaUpdateManyMutationInput, tbl_cronogramaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_cronogramas to update
     */
    where?: tbl_cronogramaWhereInput
  }

  /**
   * tbl_cronograma upsert
   */
  export type tbl_cronogramaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_cronograma to update in case it exists.
     */
    where: tbl_cronogramaWhereUniqueInput
    /**
     * In case the tbl_cronograma found by the `where` argument doesn't exist, create a new tbl_cronograma with this data.
     */
    create: XOR<tbl_cronogramaCreateInput, tbl_cronogramaUncheckedCreateInput>
    /**
     * In case the tbl_cronograma was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_cronogramaUpdateInput, tbl_cronogramaUncheckedUpdateInput>
  }

  /**
   * tbl_cronograma delete
   */
  export type tbl_cronogramaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    /**
     * Filter which tbl_cronograma to delete.
     */
    where: tbl_cronogramaWhereUniqueInput
  }

  /**
   * tbl_cronograma deleteMany
   */
  export type tbl_cronogramaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cronogramas to delete
     */
    where?: tbl_cronogramaWhereInput
  }

  /**
   * tbl_cronograma without action
   */
  export type tbl_cronogramaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_cursos
   */

  export type AggregateTbl_cursos = {
    _count: Tbl_cursosCountAggregateOutputType | null
    _avg: Tbl_cursosAvgAggregateOutputType | null
    _sum: Tbl_cursosSumAggregateOutputType | null
    _min: Tbl_cursosMinAggregateOutputType | null
    _max: Tbl_cursosMaxAggregateOutputType | null
  }

  export type Tbl_cursosAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_cursosSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_cursosMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_cursosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_cursosCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tbl_cursosAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_cursosSumAggregateInputType = {
    id?: true
  }

  export type Tbl_cursosMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_cursosMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_cursosCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tbl_cursosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cursos to aggregate.
     */
    where?: tbl_cursosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cursos to fetch.
     */
    orderBy?: tbl_cursosOrderByWithRelationInput | tbl_cursosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_cursosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_cursos
    **/
    _count?: true | Tbl_cursosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_cursosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_cursosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_cursosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_cursosMaxAggregateInputType
  }

  export type GetTbl_cursosAggregateType<T extends Tbl_cursosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_cursos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_cursos[P]>
      : GetScalarType<T[P], AggregateTbl_cursos[P]>
  }




  export type tbl_cursosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cursosWhereInput
    orderBy?: tbl_cursosOrderByWithAggregationInput | tbl_cursosOrderByWithAggregationInput[]
    by: Tbl_cursosScalarFieldEnum[] | Tbl_cursosScalarFieldEnum
    having?: tbl_cursosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_cursosCountAggregateInputType | true
    _avg?: Tbl_cursosAvgAggregateInputType
    _sum?: Tbl_cursosSumAggregateInputType
    _min?: Tbl_cursosMinAggregateInputType
    _max?: Tbl_cursosMaxAggregateInputType
  }

  export type Tbl_cursosGroupByOutputType = {
    id: number
    nome: string
    _count: Tbl_cursosCountAggregateOutputType | null
    _avg: Tbl_cursosAvgAggregateOutputType | null
    _sum: Tbl_cursosSumAggregateOutputType | null
    _min: Tbl_cursosMinAggregateOutputType | null
    _max: Tbl_cursosMaxAggregateOutputType | null
  }

  type GetTbl_cursosGroupByPayload<T extends tbl_cursosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_cursosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_cursosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_cursosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_cursosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_cursosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tbl_aluno?: boolean | tbl_cursos$tbl_alunoArgs<ExtArgs>
    tbl_cursos_disciplina?: boolean | tbl_cursos$tbl_cursos_disciplinaArgs<ExtArgs>
    _count?: boolean | Tbl_cursosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_cursos"]>


  export type tbl_cursosSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type tbl_cursosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_aluno?: boolean | tbl_cursos$tbl_alunoArgs<ExtArgs>
    tbl_cursos_disciplina?: boolean | tbl_cursos$tbl_cursos_disciplinaArgs<ExtArgs>
    _count?: boolean | Tbl_cursosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_cursosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_cursos"
    objects: {
      tbl_aluno: Prisma.$tbl_alunoPayload<ExtArgs>[]
      tbl_cursos_disciplina: Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["tbl_cursos"]>
    composites: {}
  }

  type tbl_cursosGetPayload<S extends boolean | null | undefined | tbl_cursosDefaultArgs> = $Result.GetResult<Prisma.$tbl_cursosPayload, S>

  type tbl_cursosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_cursosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_cursosCountAggregateInputType | true
    }

  export interface tbl_cursosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_cursos'], meta: { name: 'tbl_cursos' } }
    /**
     * Find zero or one Tbl_cursos that matches the filter.
     * @param {tbl_cursosFindUniqueArgs} args - Arguments to find a Tbl_cursos
     * @example
     * // Get one Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_cursosFindUniqueArgs>(args: SelectSubset<T, tbl_cursosFindUniqueArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_cursos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_cursosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_cursos
     * @example
     * // Get one Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_cursosFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_cursosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_cursos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursosFindFirstArgs} args - Arguments to find a Tbl_cursos
     * @example
     * // Get one Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_cursosFindFirstArgs>(args?: SelectSubset<T, tbl_cursosFindFirstArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_cursos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursosFindFirstOrThrowArgs} args - Arguments to find a Tbl_cursos
     * @example
     * // Get one Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_cursosFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_cursosFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_cursos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.findMany()
     * 
     * // Get first 10 Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_cursosWithIdOnly = await prisma.tbl_cursos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_cursosFindManyArgs>(args?: SelectSubset<T, tbl_cursosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_cursos.
     * @param {tbl_cursosCreateArgs} args - Arguments to create a Tbl_cursos.
     * @example
     * // Create one Tbl_cursos
     * const Tbl_cursos = await prisma.tbl_cursos.create({
     *   data: {
     *     // ... data to create a Tbl_cursos
     *   }
     * })
     * 
     */
    create<T extends tbl_cursosCreateArgs>(args: SelectSubset<T, tbl_cursosCreateArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_cursos.
     * @param {tbl_cursosCreateManyArgs} args - Arguments to create many Tbl_cursos.
     * @example
     * // Create many Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_cursosCreateManyArgs>(args?: SelectSubset<T, tbl_cursosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_cursos.
     * @param {tbl_cursosDeleteArgs} args - Arguments to delete one Tbl_cursos.
     * @example
     * // Delete one Tbl_cursos
     * const Tbl_cursos = await prisma.tbl_cursos.delete({
     *   where: {
     *     // ... filter to delete one Tbl_cursos
     *   }
     * })
     * 
     */
    delete<T extends tbl_cursosDeleteArgs>(args: SelectSubset<T, tbl_cursosDeleteArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_cursos.
     * @param {tbl_cursosUpdateArgs} args - Arguments to update one Tbl_cursos.
     * @example
     * // Update one Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_cursosUpdateArgs>(args: SelectSubset<T, tbl_cursosUpdateArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_cursos.
     * @param {tbl_cursosDeleteManyArgs} args - Arguments to filter Tbl_cursos to delete.
     * @example
     * // Delete a few Tbl_cursos
     * const { count } = await prisma.tbl_cursos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_cursosDeleteManyArgs>(args?: SelectSubset<T, tbl_cursosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_cursosUpdateManyArgs>(args: SelectSubset<T, tbl_cursosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_cursos.
     * @param {tbl_cursosUpsertArgs} args - Arguments to update or create a Tbl_cursos.
     * @example
     * // Update or create a Tbl_cursos
     * const tbl_cursos = await prisma.tbl_cursos.upsert({
     *   create: {
     *     // ... data to create a Tbl_cursos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_cursos we want to update
     *   }
     * })
     */
    upsert<T extends tbl_cursosUpsertArgs>(args: SelectSubset<T, tbl_cursosUpsertArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursosCountArgs} args - Arguments to filter Tbl_cursos to count.
     * @example
     * // Count the number of Tbl_cursos
     * const count = await prisma.tbl_cursos.count({
     *   where: {
     *     // ... the filter for the Tbl_cursos we want to count
     *   }
     * })
    **/
    count<T extends tbl_cursosCountArgs>(
      args?: Subset<T, tbl_cursosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_cursosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_cursosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_cursosAggregateArgs>(args: Subset<T, Tbl_cursosAggregateArgs>): Prisma.PrismaPromise<GetTbl_cursosAggregateType<T>>

    /**
     * Group by Tbl_cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_cursosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_cursosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_cursosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_cursosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_cursosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_cursos model
   */
  readonly fields: tbl_cursosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_cursos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_cursosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_aluno<T extends tbl_cursos$tbl_alunoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cursos$tbl_alunoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_cursos_disciplina<T extends tbl_cursos$tbl_cursos_disciplinaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cursos$tbl_cursos_disciplinaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_cursos model
   */ 
  interface tbl_cursosFieldRefs {
    readonly id: FieldRef<"tbl_cursos", 'Int'>
    readonly nome: FieldRef<"tbl_cursos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_cursos findUnique
   */
  export type tbl_cursosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos to fetch.
     */
    where: tbl_cursosWhereUniqueInput
  }

  /**
   * tbl_cursos findUniqueOrThrow
   */
  export type tbl_cursosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos to fetch.
     */
    where: tbl_cursosWhereUniqueInput
  }

  /**
   * tbl_cursos findFirst
   */
  export type tbl_cursosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos to fetch.
     */
    where?: tbl_cursosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cursos to fetch.
     */
    orderBy?: tbl_cursosOrderByWithRelationInput | tbl_cursosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cursos.
     */
    cursor?: tbl_cursosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cursos.
     */
    distinct?: Tbl_cursosScalarFieldEnum | Tbl_cursosScalarFieldEnum[]
  }

  /**
   * tbl_cursos findFirstOrThrow
   */
  export type tbl_cursosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos to fetch.
     */
    where?: tbl_cursosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cursos to fetch.
     */
    orderBy?: tbl_cursosOrderByWithRelationInput | tbl_cursosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cursos.
     */
    cursor?: tbl_cursosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cursos.
     */
    distinct?: Tbl_cursosScalarFieldEnum | Tbl_cursosScalarFieldEnum[]
  }

  /**
   * tbl_cursos findMany
   */
  export type tbl_cursosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos to fetch.
     */
    where?: tbl_cursosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cursos to fetch.
     */
    orderBy?: tbl_cursosOrderByWithRelationInput | tbl_cursosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_cursos.
     */
    cursor?: tbl_cursosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cursos.
     */
    skip?: number
    distinct?: Tbl_cursosScalarFieldEnum | Tbl_cursosScalarFieldEnum[]
  }

  /**
   * tbl_cursos create
   */
  export type tbl_cursosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_cursos.
     */
    data: XOR<tbl_cursosCreateInput, tbl_cursosUncheckedCreateInput>
  }

  /**
   * tbl_cursos createMany
   */
  export type tbl_cursosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_cursos.
     */
    data: tbl_cursosCreateManyInput | tbl_cursosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_cursos update
   */
  export type tbl_cursosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_cursos.
     */
    data: XOR<tbl_cursosUpdateInput, tbl_cursosUncheckedUpdateInput>
    /**
     * Choose, which tbl_cursos to update.
     */
    where: tbl_cursosWhereUniqueInput
  }

  /**
   * tbl_cursos updateMany
   */
  export type tbl_cursosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_cursos.
     */
    data: XOR<tbl_cursosUpdateManyMutationInput, tbl_cursosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_cursos to update
     */
    where?: tbl_cursosWhereInput
  }

  /**
   * tbl_cursos upsert
   */
  export type tbl_cursosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_cursos to update in case it exists.
     */
    where: tbl_cursosWhereUniqueInput
    /**
     * In case the tbl_cursos found by the `where` argument doesn't exist, create a new tbl_cursos with this data.
     */
    create: XOR<tbl_cursosCreateInput, tbl_cursosUncheckedCreateInput>
    /**
     * In case the tbl_cursos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_cursosUpdateInput, tbl_cursosUncheckedUpdateInput>
  }

  /**
   * tbl_cursos delete
   */
  export type tbl_cursosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
    /**
     * Filter which tbl_cursos to delete.
     */
    where: tbl_cursosWhereUniqueInput
  }

  /**
   * tbl_cursos deleteMany
   */
  export type tbl_cursosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cursos to delete
     */
    where?: tbl_cursosWhereInput
  }

  /**
   * tbl_cursos.tbl_aluno
   */
  export type tbl_cursos$tbl_alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    where?: tbl_alunoWhereInput
    orderBy?: tbl_alunoOrderByWithRelationInput | tbl_alunoOrderByWithRelationInput[]
    cursor?: tbl_alunoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_alunoScalarFieldEnum | Tbl_alunoScalarFieldEnum[]
  }

  /**
   * tbl_cursos.tbl_cursos_disciplina
   */
  export type tbl_cursos$tbl_cursos_disciplinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    where?: tbl_cursos_disciplinaWhereInput
    orderBy?: tbl_cursos_disciplinaOrderByWithRelationInput | tbl_cursos_disciplinaOrderByWithRelationInput[]
    cursor?: tbl_cursos_disciplinaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_cursos_disciplinaScalarFieldEnum | Tbl_cursos_disciplinaScalarFieldEnum[]
  }

  /**
   * tbl_cursos without action
   */
  export type tbl_cursosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos
     */
    select?: tbl_cursosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursosInclude<ExtArgs> | null
  }


  /**
   * Model tbl_cursos_disciplina
   */

  export type AggregateTbl_cursos_disciplina = {
    _count: Tbl_cursos_disciplinaCountAggregateOutputType | null
    _avg: Tbl_cursos_disciplinaAvgAggregateOutputType | null
    _sum: Tbl_cursos_disciplinaSumAggregateOutputType | null
    _min: Tbl_cursos_disciplinaMinAggregateOutputType | null
    _max: Tbl_cursos_disciplinaMaxAggregateOutputType | null
  }

  export type Tbl_cursos_disciplinaAvgAggregateOutputType = {
    id: number | null
    curso_id: number | null
    disciplina_id: number | null
  }

  export type Tbl_cursos_disciplinaSumAggregateOutputType = {
    id: number | null
    curso_id: number | null
    disciplina_id: number | null
  }

  export type Tbl_cursos_disciplinaMinAggregateOutputType = {
    id: number | null
    curso_id: number | null
    disciplina_id: number | null
  }

  export type Tbl_cursos_disciplinaMaxAggregateOutputType = {
    id: number | null
    curso_id: number | null
    disciplina_id: number | null
  }

  export type Tbl_cursos_disciplinaCountAggregateOutputType = {
    id: number
    curso_id: number
    disciplina_id: number
    _all: number
  }


  export type Tbl_cursos_disciplinaAvgAggregateInputType = {
    id?: true
    curso_id?: true
    disciplina_id?: true
  }

  export type Tbl_cursos_disciplinaSumAggregateInputType = {
    id?: true
    curso_id?: true
    disciplina_id?: true
  }

  export type Tbl_cursos_disciplinaMinAggregateInputType = {
    id?: true
    curso_id?: true
    disciplina_id?: true
  }

  export type Tbl_cursos_disciplinaMaxAggregateInputType = {
    id?: true
    curso_id?: true
    disciplina_id?: true
  }

  export type Tbl_cursos_disciplinaCountAggregateInputType = {
    id?: true
    curso_id?: true
    disciplina_id?: true
    _all?: true
  }

  export type Tbl_cursos_disciplinaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cursos_disciplina to aggregate.
     */
    where?: tbl_cursos_disciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cursos_disciplinas to fetch.
     */
    orderBy?: tbl_cursos_disciplinaOrderByWithRelationInput | tbl_cursos_disciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_cursos_disciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cursos_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cursos_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_cursos_disciplinas
    **/
    _count?: true | Tbl_cursos_disciplinaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_cursos_disciplinaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_cursos_disciplinaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_cursos_disciplinaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_cursos_disciplinaMaxAggregateInputType
  }

  export type GetTbl_cursos_disciplinaAggregateType<T extends Tbl_cursos_disciplinaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_cursos_disciplina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_cursos_disciplina[P]>
      : GetScalarType<T[P], AggregateTbl_cursos_disciplina[P]>
  }




  export type tbl_cursos_disciplinaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cursos_disciplinaWhereInput
    orderBy?: tbl_cursos_disciplinaOrderByWithAggregationInput | tbl_cursos_disciplinaOrderByWithAggregationInput[]
    by: Tbl_cursos_disciplinaScalarFieldEnum[] | Tbl_cursos_disciplinaScalarFieldEnum
    having?: tbl_cursos_disciplinaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_cursos_disciplinaCountAggregateInputType | true
    _avg?: Tbl_cursos_disciplinaAvgAggregateInputType
    _sum?: Tbl_cursos_disciplinaSumAggregateInputType
    _min?: Tbl_cursos_disciplinaMinAggregateInputType
    _max?: Tbl_cursos_disciplinaMaxAggregateInputType
  }

  export type Tbl_cursos_disciplinaGroupByOutputType = {
    id: number
    curso_id: number
    disciplina_id: number
    _count: Tbl_cursos_disciplinaCountAggregateOutputType | null
    _avg: Tbl_cursos_disciplinaAvgAggregateOutputType | null
    _sum: Tbl_cursos_disciplinaSumAggregateOutputType | null
    _min: Tbl_cursos_disciplinaMinAggregateOutputType | null
    _max: Tbl_cursos_disciplinaMaxAggregateOutputType | null
  }

  type GetTbl_cursos_disciplinaGroupByPayload<T extends tbl_cursos_disciplinaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_cursos_disciplinaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_cursos_disciplinaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_cursos_disciplinaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_cursos_disciplinaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_cursos_disciplinaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    curso_id?: boolean
    disciplina_id?: boolean
    tbl_cursos?: boolean | tbl_cursosDefaultArgs<ExtArgs>
    tbl_disciplina?: boolean | tbl_disciplinaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_cursos_disciplina"]>


  export type tbl_cursos_disciplinaSelectScalar = {
    id?: boolean
    curso_id?: boolean
    disciplina_id?: boolean
  }

  export type tbl_cursos_disciplinaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_cursos?: boolean | tbl_cursosDefaultArgs<ExtArgs>
    tbl_disciplina?: boolean | tbl_disciplinaDefaultArgs<ExtArgs>
  }

  export type $tbl_cursos_disciplinaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_cursos_disciplina"
    objects: {
      tbl_cursos: Prisma.$tbl_cursosPayload<ExtArgs>
      tbl_disciplina: Prisma.$tbl_disciplinaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      curso_id: number
      disciplina_id: number
    }, ExtArgs["result"]["tbl_cursos_disciplina"]>
    composites: {}
  }

  type tbl_cursos_disciplinaGetPayload<S extends boolean | null | undefined | tbl_cursos_disciplinaDefaultArgs> = $Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload, S>

  type tbl_cursos_disciplinaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_cursos_disciplinaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_cursos_disciplinaCountAggregateInputType | true
    }

  export interface tbl_cursos_disciplinaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_cursos_disciplina'], meta: { name: 'tbl_cursos_disciplina' } }
    /**
     * Find zero or one Tbl_cursos_disciplina that matches the filter.
     * @param {tbl_cursos_disciplinaFindUniqueArgs} args - Arguments to find a Tbl_cursos_disciplina
     * @example
     * // Get one Tbl_cursos_disciplina
     * const tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_cursos_disciplinaFindUniqueArgs>(args: SelectSubset<T, tbl_cursos_disciplinaFindUniqueArgs<ExtArgs>>): Prisma__tbl_cursos_disciplinaClient<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_cursos_disciplina that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_cursos_disciplinaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_cursos_disciplina
     * @example
     * // Get one Tbl_cursos_disciplina
     * const tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_cursos_disciplinaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_cursos_disciplinaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_cursos_disciplinaClient<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_cursos_disciplina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursos_disciplinaFindFirstArgs} args - Arguments to find a Tbl_cursos_disciplina
     * @example
     * // Get one Tbl_cursos_disciplina
     * const tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_cursos_disciplinaFindFirstArgs>(args?: SelectSubset<T, tbl_cursos_disciplinaFindFirstArgs<ExtArgs>>): Prisma__tbl_cursos_disciplinaClient<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_cursos_disciplina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursos_disciplinaFindFirstOrThrowArgs} args - Arguments to find a Tbl_cursos_disciplina
     * @example
     * // Get one Tbl_cursos_disciplina
     * const tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_cursos_disciplinaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_cursos_disciplinaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_cursos_disciplinaClient<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_cursos_disciplinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursos_disciplinaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_cursos_disciplinas
     * const tbl_cursos_disciplinas = await prisma.tbl_cursos_disciplina.findMany()
     * 
     * // Get first 10 Tbl_cursos_disciplinas
     * const tbl_cursos_disciplinas = await prisma.tbl_cursos_disciplina.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_cursos_disciplinaWithIdOnly = await prisma.tbl_cursos_disciplina.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_cursos_disciplinaFindManyArgs>(args?: SelectSubset<T, tbl_cursos_disciplinaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_cursos_disciplina.
     * @param {tbl_cursos_disciplinaCreateArgs} args - Arguments to create a Tbl_cursos_disciplina.
     * @example
     * // Create one Tbl_cursos_disciplina
     * const Tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.create({
     *   data: {
     *     // ... data to create a Tbl_cursos_disciplina
     *   }
     * })
     * 
     */
    create<T extends tbl_cursos_disciplinaCreateArgs>(args: SelectSubset<T, tbl_cursos_disciplinaCreateArgs<ExtArgs>>): Prisma__tbl_cursos_disciplinaClient<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_cursos_disciplinas.
     * @param {tbl_cursos_disciplinaCreateManyArgs} args - Arguments to create many Tbl_cursos_disciplinas.
     * @example
     * // Create many Tbl_cursos_disciplinas
     * const tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_cursos_disciplinaCreateManyArgs>(args?: SelectSubset<T, tbl_cursos_disciplinaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_cursos_disciplina.
     * @param {tbl_cursos_disciplinaDeleteArgs} args - Arguments to delete one Tbl_cursos_disciplina.
     * @example
     * // Delete one Tbl_cursos_disciplina
     * const Tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.delete({
     *   where: {
     *     // ... filter to delete one Tbl_cursos_disciplina
     *   }
     * })
     * 
     */
    delete<T extends tbl_cursos_disciplinaDeleteArgs>(args: SelectSubset<T, tbl_cursos_disciplinaDeleteArgs<ExtArgs>>): Prisma__tbl_cursos_disciplinaClient<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_cursos_disciplina.
     * @param {tbl_cursos_disciplinaUpdateArgs} args - Arguments to update one Tbl_cursos_disciplina.
     * @example
     * // Update one Tbl_cursos_disciplina
     * const tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_cursos_disciplinaUpdateArgs>(args: SelectSubset<T, tbl_cursos_disciplinaUpdateArgs<ExtArgs>>): Prisma__tbl_cursos_disciplinaClient<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_cursos_disciplinas.
     * @param {tbl_cursos_disciplinaDeleteManyArgs} args - Arguments to filter Tbl_cursos_disciplinas to delete.
     * @example
     * // Delete a few Tbl_cursos_disciplinas
     * const { count } = await prisma.tbl_cursos_disciplina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_cursos_disciplinaDeleteManyArgs>(args?: SelectSubset<T, tbl_cursos_disciplinaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_cursos_disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursos_disciplinaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_cursos_disciplinas
     * const tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_cursos_disciplinaUpdateManyArgs>(args: SelectSubset<T, tbl_cursos_disciplinaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_cursos_disciplina.
     * @param {tbl_cursos_disciplinaUpsertArgs} args - Arguments to update or create a Tbl_cursos_disciplina.
     * @example
     * // Update or create a Tbl_cursos_disciplina
     * const tbl_cursos_disciplina = await prisma.tbl_cursos_disciplina.upsert({
     *   create: {
     *     // ... data to create a Tbl_cursos_disciplina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_cursos_disciplina we want to update
     *   }
     * })
     */
    upsert<T extends tbl_cursos_disciplinaUpsertArgs>(args: SelectSubset<T, tbl_cursos_disciplinaUpsertArgs<ExtArgs>>): Prisma__tbl_cursos_disciplinaClient<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_cursos_disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursos_disciplinaCountArgs} args - Arguments to filter Tbl_cursos_disciplinas to count.
     * @example
     * // Count the number of Tbl_cursos_disciplinas
     * const count = await prisma.tbl_cursos_disciplina.count({
     *   where: {
     *     // ... the filter for the Tbl_cursos_disciplinas we want to count
     *   }
     * })
    **/
    count<T extends tbl_cursos_disciplinaCountArgs>(
      args?: Subset<T, tbl_cursos_disciplinaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_cursos_disciplinaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_cursos_disciplina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_cursos_disciplinaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_cursos_disciplinaAggregateArgs>(args: Subset<T, Tbl_cursos_disciplinaAggregateArgs>): Prisma.PrismaPromise<GetTbl_cursos_disciplinaAggregateType<T>>

    /**
     * Group by Tbl_cursos_disciplina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cursos_disciplinaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_cursos_disciplinaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_cursos_disciplinaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_cursos_disciplinaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_cursos_disciplinaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_cursos_disciplinaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_cursos_disciplina model
   */
  readonly fields: tbl_cursos_disciplinaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_cursos_disciplina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_cursos_disciplinaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_cursos<T extends tbl_cursosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cursosDefaultArgs<ExtArgs>>): Prisma__tbl_cursosClient<$Result.GetResult<Prisma.$tbl_cursosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_disciplina<T extends tbl_disciplinaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_disciplinaDefaultArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_cursos_disciplina model
   */ 
  interface tbl_cursos_disciplinaFieldRefs {
    readonly id: FieldRef<"tbl_cursos_disciplina", 'Int'>
    readonly curso_id: FieldRef<"tbl_cursos_disciplina", 'Int'>
    readonly disciplina_id: FieldRef<"tbl_cursos_disciplina", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_cursos_disciplina findUnique
   */
  export type tbl_cursos_disciplinaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos_disciplina to fetch.
     */
    where: tbl_cursos_disciplinaWhereUniqueInput
  }

  /**
   * tbl_cursos_disciplina findUniqueOrThrow
   */
  export type tbl_cursos_disciplinaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos_disciplina to fetch.
     */
    where: tbl_cursos_disciplinaWhereUniqueInput
  }

  /**
   * tbl_cursos_disciplina findFirst
   */
  export type tbl_cursos_disciplinaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos_disciplina to fetch.
     */
    where?: tbl_cursos_disciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cursos_disciplinas to fetch.
     */
    orderBy?: tbl_cursos_disciplinaOrderByWithRelationInput | tbl_cursos_disciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cursos_disciplinas.
     */
    cursor?: tbl_cursos_disciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cursos_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cursos_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cursos_disciplinas.
     */
    distinct?: Tbl_cursos_disciplinaScalarFieldEnum | Tbl_cursos_disciplinaScalarFieldEnum[]
  }

  /**
   * tbl_cursos_disciplina findFirstOrThrow
   */
  export type tbl_cursos_disciplinaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos_disciplina to fetch.
     */
    where?: tbl_cursos_disciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cursos_disciplinas to fetch.
     */
    orderBy?: tbl_cursos_disciplinaOrderByWithRelationInput | tbl_cursos_disciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cursos_disciplinas.
     */
    cursor?: tbl_cursos_disciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cursos_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cursos_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cursos_disciplinas.
     */
    distinct?: Tbl_cursos_disciplinaScalarFieldEnum | Tbl_cursos_disciplinaScalarFieldEnum[]
  }

  /**
   * tbl_cursos_disciplina findMany
   */
  export type tbl_cursos_disciplinaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cursos_disciplinas to fetch.
     */
    where?: tbl_cursos_disciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cursos_disciplinas to fetch.
     */
    orderBy?: tbl_cursos_disciplinaOrderByWithRelationInput | tbl_cursos_disciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_cursos_disciplinas.
     */
    cursor?: tbl_cursos_disciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cursos_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cursos_disciplinas.
     */
    skip?: number
    distinct?: Tbl_cursos_disciplinaScalarFieldEnum | Tbl_cursos_disciplinaScalarFieldEnum[]
  }

  /**
   * tbl_cursos_disciplina create
   */
  export type tbl_cursos_disciplinaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_cursos_disciplina.
     */
    data: XOR<tbl_cursos_disciplinaCreateInput, tbl_cursos_disciplinaUncheckedCreateInput>
  }

  /**
   * tbl_cursos_disciplina createMany
   */
  export type tbl_cursos_disciplinaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_cursos_disciplinas.
     */
    data: tbl_cursos_disciplinaCreateManyInput | tbl_cursos_disciplinaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_cursos_disciplina update
   */
  export type tbl_cursos_disciplinaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_cursos_disciplina.
     */
    data: XOR<tbl_cursos_disciplinaUpdateInput, tbl_cursos_disciplinaUncheckedUpdateInput>
    /**
     * Choose, which tbl_cursos_disciplina to update.
     */
    where: tbl_cursos_disciplinaWhereUniqueInput
  }

  /**
   * tbl_cursos_disciplina updateMany
   */
  export type tbl_cursos_disciplinaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_cursos_disciplinas.
     */
    data: XOR<tbl_cursos_disciplinaUpdateManyMutationInput, tbl_cursos_disciplinaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_cursos_disciplinas to update
     */
    where?: tbl_cursos_disciplinaWhereInput
  }

  /**
   * tbl_cursos_disciplina upsert
   */
  export type tbl_cursos_disciplinaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_cursos_disciplina to update in case it exists.
     */
    where: tbl_cursos_disciplinaWhereUniqueInput
    /**
     * In case the tbl_cursos_disciplina found by the `where` argument doesn't exist, create a new tbl_cursos_disciplina with this data.
     */
    create: XOR<tbl_cursos_disciplinaCreateInput, tbl_cursos_disciplinaUncheckedCreateInput>
    /**
     * In case the tbl_cursos_disciplina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_cursos_disciplinaUpdateInput, tbl_cursos_disciplinaUncheckedUpdateInput>
  }

  /**
   * tbl_cursos_disciplina delete
   */
  export type tbl_cursos_disciplinaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    /**
     * Filter which tbl_cursos_disciplina to delete.
     */
    where: tbl_cursos_disciplinaWhereUniqueInput
  }

  /**
   * tbl_cursos_disciplina deleteMany
   */
  export type tbl_cursos_disciplinaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cursos_disciplinas to delete
     */
    where?: tbl_cursos_disciplinaWhereInput
  }

  /**
   * tbl_cursos_disciplina without action
   */
  export type tbl_cursos_disciplinaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_disciplina
   */

  export type AggregateTbl_disciplina = {
    _count: Tbl_disciplinaCountAggregateOutputType | null
    _avg: Tbl_disciplinaAvgAggregateOutputType | null
    _sum: Tbl_disciplinaSumAggregateOutputType | null
    _min: Tbl_disciplinaMinAggregateOutputType | null
    _max: Tbl_disciplinaMaxAggregateOutputType | null
  }

  export type Tbl_disciplinaAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_disciplinaSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_disciplinaMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_disciplinaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_disciplinaCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tbl_disciplinaAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_disciplinaSumAggregateInputType = {
    id?: true
  }

  export type Tbl_disciplinaMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_disciplinaMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_disciplinaCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tbl_disciplinaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_disciplina to aggregate.
     */
    where?: tbl_disciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_disciplinas to fetch.
     */
    orderBy?: tbl_disciplinaOrderByWithRelationInput | tbl_disciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_disciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_disciplinas
    **/
    _count?: true | Tbl_disciplinaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_disciplinaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_disciplinaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_disciplinaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_disciplinaMaxAggregateInputType
  }

  export type GetTbl_disciplinaAggregateType<T extends Tbl_disciplinaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_disciplina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_disciplina[P]>
      : GetScalarType<T[P], AggregateTbl_disciplina[P]>
  }




  export type tbl_disciplinaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_disciplinaWhereInput
    orderBy?: tbl_disciplinaOrderByWithAggregationInput | tbl_disciplinaOrderByWithAggregationInput[]
    by: Tbl_disciplinaScalarFieldEnum[] | Tbl_disciplinaScalarFieldEnum
    having?: tbl_disciplinaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_disciplinaCountAggregateInputType | true
    _avg?: Tbl_disciplinaAvgAggregateInputType
    _sum?: Tbl_disciplinaSumAggregateInputType
    _min?: Tbl_disciplinaMinAggregateInputType
    _max?: Tbl_disciplinaMaxAggregateInputType
  }

  export type Tbl_disciplinaGroupByOutputType = {
    id: number
    nome: string
    _count: Tbl_disciplinaCountAggregateOutputType | null
    _avg: Tbl_disciplinaAvgAggregateOutputType | null
    _sum: Tbl_disciplinaSumAggregateOutputType | null
    _min: Tbl_disciplinaMinAggregateOutputType | null
    _max: Tbl_disciplinaMaxAggregateOutputType | null
  }

  type GetTbl_disciplinaGroupByPayload<T extends tbl_disciplinaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_disciplinaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_disciplinaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_disciplinaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_disciplinaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_disciplinaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tbl_cronograma?: boolean | tbl_disciplina$tbl_cronogramaArgs<ExtArgs>
    tbl_cursos_disciplina?: boolean | tbl_disciplina$tbl_cursos_disciplinaArgs<ExtArgs>
    tbl_disciplina_topico?: boolean | tbl_disciplina$tbl_disciplina_topicoArgs<ExtArgs>
    tbl_prof_disciplinas?: boolean | tbl_disciplina$tbl_prof_disciplinasArgs<ExtArgs>
    _count?: boolean | Tbl_disciplinaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_disciplina"]>


  export type tbl_disciplinaSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type tbl_disciplinaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_cronograma?: boolean | tbl_disciplina$tbl_cronogramaArgs<ExtArgs>
    tbl_cursos_disciplina?: boolean | tbl_disciplina$tbl_cursos_disciplinaArgs<ExtArgs>
    tbl_disciplina_topico?: boolean | tbl_disciplina$tbl_disciplina_topicoArgs<ExtArgs>
    tbl_prof_disciplinas?: boolean | tbl_disciplina$tbl_prof_disciplinasArgs<ExtArgs>
    _count?: boolean | Tbl_disciplinaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_disciplinaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_disciplina"
    objects: {
      tbl_cronograma: Prisma.$tbl_cronogramaPayload<ExtArgs>[]
      tbl_cursos_disciplina: Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>[]
      tbl_disciplina_topico: Prisma.$tbl_disciplina_topicoPayload<ExtArgs>[]
      tbl_prof_disciplinas: Prisma.$tbl_prof_disciplinasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["tbl_disciplina"]>
    composites: {}
  }

  type tbl_disciplinaGetPayload<S extends boolean | null | undefined | tbl_disciplinaDefaultArgs> = $Result.GetResult<Prisma.$tbl_disciplinaPayload, S>

  type tbl_disciplinaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_disciplinaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_disciplinaCountAggregateInputType | true
    }

  export interface tbl_disciplinaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_disciplina'], meta: { name: 'tbl_disciplina' } }
    /**
     * Find zero or one Tbl_disciplina that matches the filter.
     * @param {tbl_disciplinaFindUniqueArgs} args - Arguments to find a Tbl_disciplina
     * @example
     * // Get one Tbl_disciplina
     * const tbl_disciplina = await prisma.tbl_disciplina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_disciplinaFindUniqueArgs>(args: SelectSubset<T, tbl_disciplinaFindUniqueArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_disciplina that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_disciplinaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_disciplina
     * @example
     * // Get one Tbl_disciplina
     * const tbl_disciplina = await prisma.tbl_disciplina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_disciplinaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_disciplinaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_disciplina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplinaFindFirstArgs} args - Arguments to find a Tbl_disciplina
     * @example
     * // Get one Tbl_disciplina
     * const tbl_disciplina = await prisma.tbl_disciplina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_disciplinaFindFirstArgs>(args?: SelectSubset<T, tbl_disciplinaFindFirstArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_disciplina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplinaFindFirstOrThrowArgs} args - Arguments to find a Tbl_disciplina
     * @example
     * // Get one Tbl_disciplina
     * const tbl_disciplina = await prisma.tbl_disciplina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_disciplinaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_disciplinaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_disciplinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplinaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_disciplinas
     * const tbl_disciplinas = await prisma.tbl_disciplina.findMany()
     * 
     * // Get first 10 Tbl_disciplinas
     * const tbl_disciplinas = await prisma.tbl_disciplina.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_disciplinaWithIdOnly = await prisma.tbl_disciplina.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_disciplinaFindManyArgs>(args?: SelectSubset<T, tbl_disciplinaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_disciplina.
     * @param {tbl_disciplinaCreateArgs} args - Arguments to create a Tbl_disciplina.
     * @example
     * // Create one Tbl_disciplina
     * const Tbl_disciplina = await prisma.tbl_disciplina.create({
     *   data: {
     *     // ... data to create a Tbl_disciplina
     *   }
     * })
     * 
     */
    create<T extends tbl_disciplinaCreateArgs>(args: SelectSubset<T, tbl_disciplinaCreateArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_disciplinas.
     * @param {tbl_disciplinaCreateManyArgs} args - Arguments to create many Tbl_disciplinas.
     * @example
     * // Create many Tbl_disciplinas
     * const tbl_disciplina = await prisma.tbl_disciplina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_disciplinaCreateManyArgs>(args?: SelectSubset<T, tbl_disciplinaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_disciplina.
     * @param {tbl_disciplinaDeleteArgs} args - Arguments to delete one Tbl_disciplina.
     * @example
     * // Delete one Tbl_disciplina
     * const Tbl_disciplina = await prisma.tbl_disciplina.delete({
     *   where: {
     *     // ... filter to delete one Tbl_disciplina
     *   }
     * })
     * 
     */
    delete<T extends tbl_disciplinaDeleteArgs>(args: SelectSubset<T, tbl_disciplinaDeleteArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_disciplina.
     * @param {tbl_disciplinaUpdateArgs} args - Arguments to update one Tbl_disciplina.
     * @example
     * // Update one Tbl_disciplina
     * const tbl_disciplina = await prisma.tbl_disciplina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_disciplinaUpdateArgs>(args: SelectSubset<T, tbl_disciplinaUpdateArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_disciplinas.
     * @param {tbl_disciplinaDeleteManyArgs} args - Arguments to filter Tbl_disciplinas to delete.
     * @example
     * // Delete a few Tbl_disciplinas
     * const { count } = await prisma.tbl_disciplina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_disciplinaDeleteManyArgs>(args?: SelectSubset<T, tbl_disciplinaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplinaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_disciplinas
     * const tbl_disciplina = await prisma.tbl_disciplina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_disciplinaUpdateManyArgs>(args: SelectSubset<T, tbl_disciplinaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_disciplina.
     * @param {tbl_disciplinaUpsertArgs} args - Arguments to update or create a Tbl_disciplina.
     * @example
     * // Update or create a Tbl_disciplina
     * const tbl_disciplina = await prisma.tbl_disciplina.upsert({
     *   create: {
     *     // ... data to create a Tbl_disciplina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_disciplina we want to update
     *   }
     * })
     */
    upsert<T extends tbl_disciplinaUpsertArgs>(args: SelectSubset<T, tbl_disciplinaUpsertArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplinaCountArgs} args - Arguments to filter Tbl_disciplinas to count.
     * @example
     * // Count the number of Tbl_disciplinas
     * const count = await prisma.tbl_disciplina.count({
     *   where: {
     *     // ... the filter for the Tbl_disciplinas we want to count
     *   }
     * })
    **/
    count<T extends tbl_disciplinaCountArgs>(
      args?: Subset<T, tbl_disciplinaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_disciplinaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_disciplina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_disciplinaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_disciplinaAggregateArgs>(args: Subset<T, Tbl_disciplinaAggregateArgs>): Prisma.PrismaPromise<GetTbl_disciplinaAggregateType<T>>

    /**
     * Group by Tbl_disciplina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplinaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_disciplinaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_disciplinaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_disciplinaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_disciplinaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_disciplinaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_disciplina model
   */
  readonly fields: tbl_disciplinaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_disciplina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_disciplinaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_cronograma<T extends tbl_disciplina$tbl_cronogramaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_disciplina$tbl_cronogramaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cronogramaPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_cursos_disciplina<T extends tbl_disciplina$tbl_cursos_disciplinaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_disciplina$tbl_cursos_disciplinaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cursos_disciplinaPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_disciplina_topico<T extends tbl_disciplina$tbl_disciplina_topicoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_disciplina$tbl_disciplina_topicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_prof_disciplinas<T extends tbl_disciplina$tbl_prof_disciplinasArgs<ExtArgs> = {}>(args?: Subset<T, tbl_disciplina$tbl_prof_disciplinasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_disciplina model
   */ 
  interface tbl_disciplinaFieldRefs {
    readonly id: FieldRef<"tbl_disciplina", 'Int'>
    readonly nome: FieldRef<"tbl_disciplina", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_disciplina findUnique
   */
  export type tbl_disciplinaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina to fetch.
     */
    where: tbl_disciplinaWhereUniqueInput
  }

  /**
   * tbl_disciplina findUniqueOrThrow
   */
  export type tbl_disciplinaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina to fetch.
     */
    where: tbl_disciplinaWhereUniqueInput
  }

  /**
   * tbl_disciplina findFirst
   */
  export type tbl_disciplinaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina to fetch.
     */
    where?: tbl_disciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_disciplinas to fetch.
     */
    orderBy?: tbl_disciplinaOrderByWithRelationInput | tbl_disciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_disciplinas.
     */
    cursor?: tbl_disciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_disciplinas.
     */
    distinct?: Tbl_disciplinaScalarFieldEnum | Tbl_disciplinaScalarFieldEnum[]
  }

  /**
   * tbl_disciplina findFirstOrThrow
   */
  export type tbl_disciplinaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina to fetch.
     */
    where?: tbl_disciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_disciplinas to fetch.
     */
    orderBy?: tbl_disciplinaOrderByWithRelationInput | tbl_disciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_disciplinas.
     */
    cursor?: tbl_disciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_disciplinas.
     */
    distinct?: Tbl_disciplinaScalarFieldEnum | Tbl_disciplinaScalarFieldEnum[]
  }

  /**
   * tbl_disciplina findMany
   */
  export type tbl_disciplinaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplinas to fetch.
     */
    where?: tbl_disciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_disciplinas to fetch.
     */
    orderBy?: tbl_disciplinaOrderByWithRelationInput | tbl_disciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_disciplinas.
     */
    cursor?: tbl_disciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_disciplinas.
     */
    skip?: number
    distinct?: Tbl_disciplinaScalarFieldEnum | Tbl_disciplinaScalarFieldEnum[]
  }

  /**
   * tbl_disciplina create
   */
  export type tbl_disciplinaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_disciplina.
     */
    data: XOR<tbl_disciplinaCreateInput, tbl_disciplinaUncheckedCreateInput>
  }

  /**
   * tbl_disciplina createMany
   */
  export type tbl_disciplinaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_disciplinas.
     */
    data: tbl_disciplinaCreateManyInput | tbl_disciplinaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_disciplina update
   */
  export type tbl_disciplinaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_disciplina.
     */
    data: XOR<tbl_disciplinaUpdateInput, tbl_disciplinaUncheckedUpdateInput>
    /**
     * Choose, which tbl_disciplina to update.
     */
    where: tbl_disciplinaWhereUniqueInput
  }

  /**
   * tbl_disciplina updateMany
   */
  export type tbl_disciplinaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_disciplinas.
     */
    data: XOR<tbl_disciplinaUpdateManyMutationInput, tbl_disciplinaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_disciplinas to update
     */
    where?: tbl_disciplinaWhereInput
  }

  /**
   * tbl_disciplina upsert
   */
  export type tbl_disciplinaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_disciplina to update in case it exists.
     */
    where: tbl_disciplinaWhereUniqueInput
    /**
     * In case the tbl_disciplina found by the `where` argument doesn't exist, create a new tbl_disciplina with this data.
     */
    create: XOR<tbl_disciplinaCreateInput, tbl_disciplinaUncheckedCreateInput>
    /**
     * In case the tbl_disciplina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_disciplinaUpdateInput, tbl_disciplinaUncheckedUpdateInput>
  }

  /**
   * tbl_disciplina delete
   */
  export type tbl_disciplinaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
    /**
     * Filter which tbl_disciplina to delete.
     */
    where: tbl_disciplinaWhereUniqueInput
  }

  /**
   * tbl_disciplina deleteMany
   */
  export type tbl_disciplinaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_disciplinas to delete
     */
    where?: tbl_disciplinaWhereInput
  }

  /**
   * tbl_disciplina.tbl_cronograma
   */
  export type tbl_disciplina$tbl_cronogramaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cronograma
     */
    select?: tbl_cronogramaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cronogramaInclude<ExtArgs> | null
    where?: tbl_cronogramaWhereInput
    orderBy?: tbl_cronogramaOrderByWithRelationInput | tbl_cronogramaOrderByWithRelationInput[]
    cursor?: tbl_cronogramaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_cronogramaScalarFieldEnum | Tbl_cronogramaScalarFieldEnum[]
  }

  /**
   * tbl_disciplina.tbl_cursos_disciplina
   */
  export type tbl_disciplina$tbl_cursos_disciplinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cursos_disciplina
     */
    select?: tbl_cursos_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cursos_disciplinaInclude<ExtArgs> | null
    where?: tbl_cursos_disciplinaWhereInput
    orderBy?: tbl_cursos_disciplinaOrderByWithRelationInput | tbl_cursos_disciplinaOrderByWithRelationInput[]
    cursor?: tbl_cursos_disciplinaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_cursos_disciplinaScalarFieldEnum | Tbl_cursos_disciplinaScalarFieldEnum[]
  }

  /**
   * tbl_disciplina.tbl_disciplina_topico
   */
  export type tbl_disciplina$tbl_disciplina_topicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    where?: tbl_disciplina_topicoWhereInput
    orderBy?: tbl_disciplina_topicoOrderByWithRelationInput | tbl_disciplina_topicoOrderByWithRelationInput[]
    cursor?: tbl_disciplina_topicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_disciplina_topicoScalarFieldEnum | Tbl_disciplina_topicoScalarFieldEnum[]
  }

  /**
   * tbl_disciplina.tbl_prof_disciplinas
   */
  export type tbl_disciplina$tbl_prof_disciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    where?: tbl_prof_disciplinasWhereInput
    orderBy?: tbl_prof_disciplinasOrderByWithRelationInput | tbl_prof_disciplinasOrderByWithRelationInput[]
    cursor?: tbl_prof_disciplinasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_prof_disciplinasScalarFieldEnum | Tbl_prof_disciplinasScalarFieldEnum[]
  }

  /**
   * tbl_disciplina without action
   */
  export type tbl_disciplinaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina
     */
    select?: tbl_disciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplinaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_disciplina_topico
   */

  export type AggregateTbl_disciplina_topico = {
    _count: Tbl_disciplina_topicoCountAggregateOutputType | null
    _avg: Tbl_disciplina_topicoAvgAggregateOutputType | null
    _sum: Tbl_disciplina_topicoSumAggregateOutputType | null
    _min: Tbl_disciplina_topicoMinAggregateOutputType | null
    _max: Tbl_disciplina_topicoMaxAggregateOutputType | null
  }

  export type Tbl_disciplina_topicoAvgAggregateOutputType = {
    id: number | null
    disciplina_id: number | null
    topico_id: number | null
  }

  export type Tbl_disciplina_topicoSumAggregateOutputType = {
    id: number | null
    disciplina_id: number | null
    topico_id: number | null
  }

  export type Tbl_disciplina_topicoMinAggregateOutputType = {
    id: number | null
    disciplina_id: number | null
    topico_id: number | null
  }

  export type Tbl_disciplina_topicoMaxAggregateOutputType = {
    id: number | null
    disciplina_id: number | null
    topico_id: number | null
  }

  export type Tbl_disciplina_topicoCountAggregateOutputType = {
    id: number
    disciplina_id: number
    topico_id: number
    _all: number
  }


  export type Tbl_disciplina_topicoAvgAggregateInputType = {
    id?: true
    disciplina_id?: true
    topico_id?: true
  }

  export type Tbl_disciplina_topicoSumAggregateInputType = {
    id?: true
    disciplina_id?: true
    topico_id?: true
  }

  export type Tbl_disciplina_topicoMinAggregateInputType = {
    id?: true
    disciplina_id?: true
    topico_id?: true
  }

  export type Tbl_disciplina_topicoMaxAggregateInputType = {
    id?: true
    disciplina_id?: true
    topico_id?: true
  }

  export type Tbl_disciplina_topicoCountAggregateInputType = {
    id?: true
    disciplina_id?: true
    topico_id?: true
    _all?: true
  }

  export type Tbl_disciplina_topicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_disciplina_topico to aggregate.
     */
    where?: tbl_disciplina_topicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_disciplina_topicos to fetch.
     */
    orderBy?: tbl_disciplina_topicoOrderByWithRelationInput | tbl_disciplina_topicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_disciplina_topicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_disciplina_topicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_disciplina_topicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_disciplina_topicos
    **/
    _count?: true | Tbl_disciplina_topicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_disciplina_topicoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_disciplina_topicoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_disciplina_topicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_disciplina_topicoMaxAggregateInputType
  }

  export type GetTbl_disciplina_topicoAggregateType<T extends Tbl_disciplina_topicoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_disciplina_topico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_disciplina_topico[P]>
      : GetScalarType<T[P], AggregateTbl_disciplina_topico[P]>
  }




  export type tbl_disciplina_topicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_disciplina_topicoWhereInput
    orderBy?: tbl_disciplina_topicoOrderByWithAggregationInput | tbl_disciplina_topicoOrderByWithAggregationInput[]
    by: Tbl_disciplina_topicoScalarFieldEnum[] | Tbl_disciplina_topicoScalarFieldEnum
    having?: tbl_disciplina_topicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_disciplina_topicoCountAggregateInputType | true
    _avg?: Tbl_disciplina_topicoAvgAggregateInputType
    _sum?: Tbl_disciplina_topicoSumAggregateInputType
    _min?: Tbl_disciplina_topicoMinAggregateInputType
    _max?: Tbl_disciplina_topicoMaxAggregateInputType
  }

  export type Tbl_disciplina_topicoGroupByOutputType = {
    id: number
    disciplina_id: number
    topico_id: number
    _count: Tbl_disciplina_topicoCountAggregateOutputType | null
    _avg: Tbl_disciplina_topicoAvgAggregateOutputType | null
    _sum: Tbl_disciplina_topicoSumAggregateOutputType | null
    _min: Tbl_disciplina_topicoMinAggregateOutputType | null
    _max: Tbl_disciplina_topicoMaxAggregateOutputType | null
  }

  type GetTbl_disciplina_topicoGroupByPayload<T extends tbl_disciplina_topicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_disciplina_topicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_disciplina_topicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_disciplina_topicoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_disciplina_topicoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_disciplina_topicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    disciplina_id?: boolean
    topico_id?: boolean
    tbl_disciplina?: boolean | tbl_disciplinaDefaultArgs<ExtArgs>
    tbl_topicos?: boolean | tbl_topicosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_disciplina_topico"]>


  export type tbl_disciplina_topicoSelectScalar = {
    id?: boolean
    disciplina_id?: boolean
    topico_id?: boolean
  }

  export type tbl_disciplina_topicoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_disciplina?: boolean | tbl_disciplinaDefaultArgs<ExtArgs>
    tbl_topicos?: boolean | tbl_topicosDefaultArgs<ExtArgs>
  }

  export type $tbl_disciplina_topicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_disciplina_topico"
    objects: {
      tbl_disciplina: Prisma.$tbl_disciplinaPayload<ExtArgs>
      tbl_topicos: Prisma.$tbl_topicosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      disciplina_id: number
      topico_id: number
    }, ExtArgs["result"]["tbl_disciplina_topico"]>
    composites: {}
  }

  type tbl_disciplina_topicoGetPayload<S extends boolean | null | undefined | tbl_disciplina_topicoDefaultArgs> = $Result.GetResult<Prisma.$tbl_disciplina_topicoPayload, S>

  type tbl_disciplina_topicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_disciplina_topicoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_disciplina_topicoCountAggregateInputType | true
    }

  export interface tbl_disciplina_topicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_disciplina_topico'], meta: { name: 'tbl_disciplina_topico' } }
    /**
     * Find zero or one Tbl_disciplina_topico that matches the filter.
     * @param {tbl_disciplina_topicoFindUniqueArgs} args - Arguments to find a Tbl_disciplina_topico
     * @example
     * // Get one Tbl_disciplina_topico
     * const tbl_disciplina_topico = await prisma.tbl_disciplina_topico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_disciplina_topicoFindUniqueArgs>(args: SelectSubset<T, tbl_disciplina_topicoFindUniqueArgs<ExtArgs>>): Prisma__tbl_disciplina_topicoClient<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_disciplina_topico that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_disciplina_topicoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_disciplina_topico
     * @example
     * // Get one Tbl_disciplina_topico
     * const tbl_disciplina_topico = await prisma.tbl_disciplina_topico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_disciplina_topicoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_disciplina_topicoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_disciplina_topicoClient<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_disciplina_topico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplina_topicoFindFirstArgs} args - Arguments to find a Tbl_disciplina_topico
     * @example
     * // Get one Tbl_disciplina_topico
     * const tbl_disciplina_topico = await prisma.tbl_disciplina_topico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_disciplina_topicoFindFirstArgs>(args?: SelectSubset<T, tbl_disciplina_topicoFindFirstArgs<ExtArgs>>): Prisma__tbl_disciplina_topicoClient<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_disciplina_topico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplina_topicoFindFirstOrThrowArgs} args - Arguments to find a Tbl_disciplina_topico
     * @example
     * // Get one Tbl_disciplina_topico
     * const tbl_disciplina_topico = await prisma.tbl_disciplina_topico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_disciplina_topicoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_disciplina_topicoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_disciplina_topicoClient<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_disciplina_topicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplina_topicoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_disciplina_topicos
     * const tbl_disciplina_topicos = await prisma.tbl_disciplina_topico.findMany()
     * 
     * // Get first 10 Tbl_disciplina_topicos
     * const tbl_disciplina_topicos = await prisma.tbl_disciplina_topico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_disciplina_topicoWithIdOnly = await prisma.tbl_disciplina_topico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_disciplina_topicoFindManyArgs>(args?: SelectSubset<T, tbl_disciplina_topicoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_disciplina_topico.
     * @param {tbl_disciplina_topicoCreateArgs} args - Arguments to create a Tbl_disciplina_topico.
     * @example
     * // Create one Tbl_disciplina_topico
     * const Tbl_disciplina_topico = await prisma.tbl_disciplina_topico.create({
     *   data: {
     *     // ... data to create a Tbl_disciplina_topico
     *   }
     * })
     * 
     */
    create<T extends tbl_disciplina_topicoCreateArgs>(args: SelectSubset<T, tbl_disciplina_topicoCreateArgs<ExtArgs>>): Prisma__tbl_disciplina_topicoClient<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_disciplina_topicos.
     * @param {tbl_disciplina_topicoCreateManyArgs} args - Arguments to create many Tbl_disciplina_topicos.
     * @example
     * // Create many Tbl_disciplina_topicos
     * const tbl_disciplina_topico = await prisma.tbl_disciplina_topico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_disciplina_topicoCreateManyArgs>(args?: SelectSubset<T, tbl_disciplina_topicoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_disciplina_topico.
     * @param {tbl_disciplina_topicoDeleteArgs} args - Arguments to delete one Tbl_disciplina_topico.
     * @example
     * // Delete one Tbl_disciplina_topico
     * const Tbl_disciplina_topico = await prisma.tbl_disciplina_topico.delete({
     *   where: {
     *     // ... filter to delete one Tbl_disciplina_topico
     *   }
     * })
     * 
     */
    delete<T extends tbl_disciplina_topicoDeleteArgs>(args: SelectSubset<T, tbl_disciplina_topicoDeleteArgs<ExtArgs>>): Prisma__tbl_disciplina_topicoClient<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_disciplina_topico.
     * @param {tbl_disciplina_topicoUpdateArgs} args - Arguments to update one Tbl_disciplina_topico.
     * @example
     * // Update one Tbl_disciplina_topico
     * const tbl_disciplina_topico = await prisma.tbl_disciplina_topico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_disciplina_topicoUpdateArgs>(args: SelectSubset<T, tbl_disciplina_topicoUpdateArgs<ExtArgs>>): Prisma__tbl_disciplina_topicoClient<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_disciplina_topicos.
     * @param {tbl_disciplina_topicoDeleteManyArgs} args - Arguments to filter Tbl_disciplina_topicos to delete.
     * @example
     * // Delete a few Tbl_disciplina_topicos
     * const { count } = await prisma.tbl_disciplina_topico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_disciplina_topicoDeleteManyArgs>(args?: SelectSubset<T, tbl_disciplina_topicoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_disciplina_topicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplina_topicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_disciplina_topicos
     * const tbl_disciplina_topico = await prisma.tbl_disciplina_topico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_disciplina_topicoUpdateManyArgs>(args: SelectSubset<T, tbl_disciplina_topicoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_disciplina_topico.
     * @param {tbl_disciplina_topicoUpsertArgs} args - Arguments to update or create a Tbl_disciplina_topico.
     * @example
     * // Update or create a Tbl_disciplina_topico
     * const tbl_disciplina_topico = await prisma.tbl_disciplina_topico.upsert({
     *   create: {
     *     // ... data to create a Tbl_disciplina_topico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_disciplina_topico we want to update
     *   }
     * })
     */
    upsert<T extends tbl_disciplina_topicoUpsertArgs>(args: SelectSubset<T, tbl_disciplina_topicoUpsertArgs<ExtArgs>>): Prisma__tbl_disciplina_topicoClient<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_disciplina_topicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplina_topicoCountArgs} args - Arguments to filter Tbl_disciplina_topicos to count.
     * @example
     * // Count the number of Tbl_disciplina_topicos
     * const count = await prisma.tbl_disciplina_topico.count({
     *   where: {
     *     // ... the filter for the Tbl_disciplina_topicos we want to count
     *   }
     * })
    **/
    count<T extends tbl_disciplina_topicoCountArgs>(
      args?: Subset<T, tbl_disciplina_topicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_disciplina_topicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_disciplina_topico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_disciplina_topicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_disciplina_topicoAggregateArgs>(args: Subset<T, Tbl_disciplina_topicoAggregateArgs>): Prisma.PrismaPromise<GetTbl_disciplina_topicoAggregateType<T>>

    /**
     * Group by Tbl_disciplina_topico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_disciplina_topicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_disciplina_topicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_disciplina_topicoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_disciplina_topicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_disciplina_topicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_disciplina_topicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_disciplina_topico model
   */
  readonly fields: tbl_disciplina_topicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_disciplina_topico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_disciplina_topicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_disciplina<T extends tbl_disciplinaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_disciplinaDefaultArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_topicos<T extends tbl_topicosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_topicosDefaultArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_disciplina_topico model
   */ 
  interface tbl_disciplina_topicoFieldRefs {
    readonly id: FieldRef<"tbl_disciplina_topico", 'Int'>
    readonly disciplina_id: FieldRef<"tbl_disciplina_topico", 'Int'>
    readonly topico_id: FieldRef<"tbl_disciplina_topico", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_disciplina_topico findUnique
   */
  export type tbl_disciplina_topicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina_topico to fetch.
     */
    where: tbl_disciplina_topicoWhereUniqueInput
  }

  /**
   * tbl_disciplina_topico findUniqueOrThrow
   */
  export type tbl_disciplina_topicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina_topico to fetch.
     */
    where: tbl_disciplina_topicoWhereUniqueInput
  }

  /**
   * tbl_disciplina_topico findFirst
   */
  export type tbl_disciplina_topicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina_topico to fetch.
     */
    where?: tbl_disciplina_topicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_disciplina_topicos to fetch.
     */
    orderBy?: tbl_disciplina_topicoOrderByWithRelationInput | tbl_disciplina_topicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_disciplina_topicos.
     */
    cursor?: tbl_disciplina_topicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_disciplina_topicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_disciplina_topicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_disciplina_topicos.
     */
    distinct?: Tbl_disciplina_topicoScalarFieldEnum | Tbl_disciplina_topicoScalarFieldEnum[]
  }

  /**
   * tbl_disciplina_topico findFirstOrThrow
   */
  export type tbl_disciplina_topicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina_topico to fetch.
     */
    where?: tbl_disciplina_topicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_disciplina_topicos to fetch.
     */
    orderBy?: tbl_disciplina_topicoOrderByWithRelationInput | tbl_disciplina_topicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_disciplina_topicos.
     */
    cursor?: tbl_disciplina_topicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_disciplina_topicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_disciplina_topicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_disciplina_topicos.
     */
    distinct?: Tbl_disciplina_topicoScalarFieldEnum | Tbl_disciplina_topicoScalarFieldEnum[]
  }

  /**
   * tbl_disciplina_topico findMany
   */
  export type tbl_disciplina_topicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_disciplina_topicos to fetch.
     */
    where?: tbl_disciplina_topicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_disciplina_topicos to fetch.
     */
    orderBy?: tbl_disciplina_topicoOrderByWithRelationInput | tbl_disciplina_topicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_disciplina_topicos.
     */
    cursor?: tbl_disciplina_topicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_disciplina_topicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_disciplina_topicos.
     */
    skip?: number
    distinct?: Tbl_disciplina_topicoScalarFieldEnum | Tbl_disciplina_topicoScalarFieldEnum[]
  }

  /**
   * tbl_disciplina_topico create
   */
  export type tbl_disciplina_topicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_disciplina_topico.
     */
    data: XOR<tbl_disciplina_topicoCreateInput, tbl_disciplina_topicoUncheckedCreateInput>
  }

  /**
   * tbl_disciplina_topico createMany
   */
  export type tbl_disciplina_topicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_disciplina_topicos.
     */
    data: tbl_disciplina_topicoCreateManyInput | tbl_disciplina_topicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_disciplina_topico update
   */
  export type tbl_disciplina_topicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_disciplina_topico.
     */
    data: XOR<tbl_disciplina_topicoUpdateInput, tbl_disciplina_topicoUncheckedUpdateInput>
    /**
     * Choose, which tbl_disciplina_topico to update.
     */
    where: tbl_disciplina_topicoWhereUniqueInput
  }

  /**
   * tbl_disciplina_topico updateMany
   */
  export type tbl_disciplina_topicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_disciplina_topicos.
     */
    data: XOR<tbl_disciplina_topicoUpdateManyMutationInput, tbl_disciplina_topicoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_disciplina_topicos to update
     */
    where?: tbl_disciplina_topicoWhereInput
  }

  /**
   * tbl_disciplina_topico upsert
   */
  export type tbl_disciplina_topicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_disciplina_topico to update in case it exists.
     */
    where: tbl_disciplina_topicoWhereUniqueInput
    /**
     * In case the tbl_disciplina_topico found by the `where` argument doesn't exist, create a new tbl_disciplina_topico with this data.
     */
    create: XOR<tbl_disciplina_topicoCreateInput, tbl_disciplina_topicoUncheckedCreateInput>
    /**
     * In case the tbl_disciplina_topico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_disciplina_topicoUpdateInput, tbl_disciplina_topicoUncheckedUpdateInput>
  }

  /**
   * tbl_disciplina_topico delete
   */
  export type tbl_disciplina_topicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    /**
     * Filter which tbl_disciplina_topico to delete.
     */
    where: tbl_disciplina_topicoWhereUniqueInput
  }

  /**
   * tbl_disciplina_topico deleteMany
   */
  export type tbl_disciplina_topicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_disciplina_topicos to delete
     */
    where?: tbl_disciplina_topicoWhereInput
  }

  /**
   * tbl_disciplina_topico without action
   */
  export type tbl_disciplina_topicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_exercicio
   */

  export type AggregateTbl_exercicio = {
    _count: Tbl_exercicioCountAggregateOutputType | null
    _avg: Tbl_exercicioAvgAggregateOutputType | null
    _sum: Tbl_exercicioSumAggregateOutputType | null
    _min: Tbl_exercicioMinAggregateOutputType | null
    _max: Tbl_exercicioMaxAggregateOutputType | null
  }

  export type Tbl_exercicioAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_exercicioSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_exercicioMinAggregateOutputType = {
    id: number | null
    questao: string | null
    status: boolean | null
  }

  export type Tbl_exercicioMaxAggregateOutputType = {
    id: number | null
    questao: string | null
    status: boolean | null
  }

  export type Tbl_exercicioCountAggregateOutputType = {
    id: number
    questao: number
    status: number
    _all: number
  }


  export type Tbl_exercicioAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_exercicioSumAggregateInputType = {
    id?: true
  }

  export type Tbl_exercicioMinAggregateInputType = {
    id?: true
    questao?: true
    status?: true
  }

  export type Tbl_exercicioMaxAggregateInputType = {
    id?: true
    questao?: true
    status?: true
  }

  export type Tbl_exercicioCountAggregateInputType = {
    id?: true
    questao?: true
    status?: true
    _all?: true
  }

  export type Tbl_exercicioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_exercicio to aggregate.
     */
    where?: tbl_exercicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_exercicios to fetch.
     */
    orderBy?: tbl_exercicioOrderByWithRelationInput | tbl_exercicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_exercicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_exercicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_exercicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_exercicios
    **/
    _count?: true | Tbl_exercicioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_exercicioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_exercicioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_exercicioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_exercicioMaxAggregateInputType
  }

  export type GetTbl_exercicioAggregateType<T extends Tbl_exercicioAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_exercicio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_exercicio[P]>
      : GetScalarType<T[P], AggregateTbl_exercicio[P]>
  }




  export type tbl_exercicioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_exercicioWhereInput
    orderBy?: tbl_exercicioOrderByWithAggregationInput | tbl_exercicioOrderByWithAggregationInput[]
    by: Tbl_exercicioScalarFieldEnum[] | Tbl_exercicioScalarFieldEnum
    having?: tbl_exercicioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_exercicioCountAggregateInputType | true
    _avg?: Tbl_exercicioAvgAggregateInputType
    _sum?: Tbl_exercicioSumAggregateInputType
    _min?: Tbl_exercicioMinAggregateInputType
    _max?: Tbl_exercicioMaxAggregateInputType
  }

  export type Tbl_exercicioGroupByOutputType = {
    id: number
    questao: string | null
    status: boolean | null
    _count: Tbl_exercicioCountAggregateOutputType | null
    _avg: Tbl_exercicioAvgAggregateOutputType | null
    _sum: Tbl_exercicioSumAggregateOutputType | null
    _min: Tbl_exercicioMinAggregateOutputType | null
    _max: Tbl_exercicioMaxAggregateOutputType | null
  }

  type GetTbl_exercicioGroupByPayload<T extends tbl_exercicioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_exercicioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_exercicioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_exercicioGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_exercicioGroupByOutputType[P]>
        }
      >
    >


  export type tbl_exercicioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    questao?: boolean
    status?: boolean
    tbl_alternativas?: boolean | tbl_exercicio$tbl_alternativasArgs<ExtArgs>
    _count?: boolean | Tbl_exercicioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_exercicio"]>


  export type tbl_exercicioSelectScalar = {
    id?: boolean
    questao?: boolean
    status?: boolean
  }

  export type tbl_exercicioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_alternativas?: boolean | tbl_exercicio$tbl_alternativasArgs<ExtArgs>
    _count?: boolean | Tbl_exercicioCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_exercicioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_exercicio"
    objects: {
      tbl_alternativas: Prisma.$tbl_alternativasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      questao: string | null
      status: boolean | null
    }, ExtArgs["result"]["tbl_exercicio"]>
    composites: {}
  }

  type tbl_exercicioGetPayload<S extends boolean | null | undefined | tbl_exercicioDefaultArgs> = $Result.GetResult<Prisma.$tbl_exercicioPayload, S>

  type tbl_exercicioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_exercicioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_exercicioCountAggregateInputType | true
    }

  export interface tbl_exercicioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_exercicio'], meta: { name: 'tbl_exercicio' } }
    /**
     * Find zero or one Tbl_exercicio that matches the filter.
     * @param {tbl_exercicioFindUniqueArgs} args - Arguments to find a Tbl_exercicio
     * @example
     * // Get one Tbl_exercicio
     * const tbl_exercicio = await prisma.tbl_exercicio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_exercicioFindUniqueArgs>(args: SelectSubset<T, tbl_exercicioFindUniqueArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_exercicio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_exercicioFindUniqueOrThrowArgs} args - Arguments to find a Tbl_exercicio
     * @example
     * // Get one Tbl_exercicio
     * const tbl_exercicio = await prisma.tbl_exercicio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_exercicioFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_exercicioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_exercicio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_exercicioFindFirstArgs} args - Arguments to find a Tbl_exercicio
     * @example
     * // Get one Tbl_exercicio
     * const tbl_exercicio = await prisma.tbl_exercicio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_exercicioFindFirstArgs>(args?: SelectSubset<T, tbl_exercicioFindFirstArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_exercicio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_exercicioFindFirstOrThrowArgs} args - Arguments to find a Tbl_exercicio
     * @example
     * // Get one Tbl_exercicio
     * const tbl_exercicio = await prisma.tbl_exercicio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_exercicioFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_exercicioFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_exercicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_exercicioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_exercicios
     * const tbl_exercicios = await prisma.tbl_exercicio.findMany()
     * 
     * // Get first 10 Tbl_exercicios
     * const tbl_exercicios = await prisma.tbl_exercicio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_exercicioWithIdOnly = await prisma.tbl_exercicio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_exercicioFindManyArgs>(args?: SelectSubset<T, tbl_exercicioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_exercicio.
     * @param {tbl_exercicioCreateArgs} args - Arguments to create a Tbl_exercicio.
     * @example
     * // Create one Tbl_exercicio
     * const Tbl_exercicio = await prisma.tbl_exercicio.create({
     *   data: {
     *     // ... data to create a Tbl_exercicio
     *   }
     * })
     * 
     */
    create<T extends tbl_exercicioCreateArgs>(args: SelectSubset<T, tbl_exercicioCreateArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_exercicios.
     * @param {tbl_exercicioCreateManyArgs} args - Arguments to create many Tbl_exercicios.
     * @example
     * // Create many Tbl_exercicios
     * const tbl_exercicio = await prisma.tbl_exercicio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_exercicioCreateManyArgs>(args?: SelectSubset<T, tbl_exercicioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_exercicio.
     * @param {tbl_exercicioDeleteArgs} args - Arguments to delete one Tbl_exercicio.
     * @example
     * // Delete one Tbl_exercicio
     * const Tbl_exercicio = await prisma.tbl_exercicio.delete({
     *   where: {
     *     // ... filter to delete one Tbl_exercicio
     *   }
     * })
     * 
     */
    delete<T extends tbl_exercicioDeleteArgs>(args: SelectSubset<T, tbl_exercicioDeleteArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_exercicio.
     * @param {tbl_exercicioUpdateArgs} args - Arguments to update one Tbl_exercicio.
     * @example
     * // Update one Tbl_exercicio
     * const tbl_exercicio = await prisma.tbl_exercicio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_exercicioUpdateArgs>(args: SelectSubset<T, tbl_exercicioUpdateArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_exercicios.
     * @param {tbl_exercicioDeleteManyArgs} args - Arguments to filter Tbl_exercicios to delete.
     * @example
     * // Delete a few Tbl_exercicios
     * const { count } = await prisma.tbl_exercicio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_exercicioDeleteManyArgs>(args?: SelectSubset<T, tbl_exercicioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_exercicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_exercicioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_exercicios
     * const tbl_exercicio = await prisma.tbl_exercicio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_exercicioUpdateManyArgs>(args: SelectSubset<T, tbl_exercicioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_exercicio.
     * @param {tbl_exercicioUpsertArgs} args - Arguments to update or create a Tbl_exercicio.
     * @example
     * // Update or create a Tbl_exercicio
     * const tbl_exercicio = await prisma.tbl_exercicio.upsert({
     *   create: {
     *     // ... data to create a Tbl_exercicio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_exercicio we want to update
     *   }
     * })
     */
    upsert<T extends tbl_exercicioUpsertArgs>(args: SelectSubset<T, tbl_exercicioUpsertArgs<ExtArgs>>): Prisma__tbl_exercicioClient<$Result.GetResult<Prisma.$tbl_exercicioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_exercicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_exercicioCountArgs} args - Arguments to filter Tbl_exercicios to count.
     * @example
     * // Count the number of Tbl_exercicios
     * const count = await prisma.tbl_exercicio.count({
     *   where: {
     *     // ... the filter for the Tbl_exercicios we want to count
     *   }
     * })
    **/
    count<T extends tbl_exercicioCountArgs>(
      args?: Subset<T, tbl_exercicioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_exercicioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_exercicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_exercicioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_exercicioAggregateArgs>(args: Subset<T, Tbl_exercicioAggregateArgs>): Prisma.PrismaPromise<GetTbl_exercicioAggregateType<T>>

    /**
     * Group by Tbl_exercicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_exercicioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_exercicioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_exercicioGroupByArgs['orderBy'] }
        : { orderBy?: tbl_exercicioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_exercicioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_exercicioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_exercicio model
   */
  readonly fields: tbl_exercicioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_exercicio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_exercicioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_alternativas<T extends tbl_exercicio$tbl_alternativasArgs<ExtArgs> = {}>(args?: Subset<T, tbl_exercicio$tbl_alternativasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_alternativasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_exercicio model
   */ 
  interface tbl_exercicioFieldRefs {
    readonly id: FieldRef<"tbl_exercicio", 'Int'>
    readonly questao: FieldRef<"tbl_exercicio", 'String'>
    readonly status: FieldRef<"tbl_exercicio", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_exercicio findUnique
   */
  export type tbl_exercicioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_exercicio to fetch.
     */
    where: tbl_exercicioWhereUniqueInput
  }

  /**
   * tbl_exercicio findUniqueOrThrow
   */
  export type tbl_exercicioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_exercicio to fetch.
     */
    where: tbl_exercicioWhereUniqueInput
  }

  /**
   * tbl_exercicio findFirst
   */
  export type tbl_exercicioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_exercicio to fetch.
     */
    where?: tbl_exercicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_exercicios to fetch.
     */
    orderBy?: tbl_exercicioOrderByWithRelationInput | tbl_exercicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_exercicios.
     */
    cursor?: tbl_exercicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_exercicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_exercicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_exercicios.
     */
    distinct?: Tbl_exercicioScalarFieldEnum | Tbl_exercicioScalarFieldEnum[]
  }

  /**
   * tbl_exercicio findFirstOrThrow
   */
  export type tbl_exercicioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_exercicio to fetch.
     */
    where?: tbl_exercicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_exercicios to fetch.
     */
    orderBy?: tbl_exercicioOrderByWithRelationInput | tbl_exercicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_exercicios.
     */
    cursor?: tbl_exercicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_exercicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_exercicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_exercicios.
     */
    distinct?: Tbl_exercicioScalarFieldEnum | Tbl_exercicioScalarFieldEnum[]
  }

  /**
   * tbl_exercicio findMany
   */
  export type tbl_exercicioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_exercicios to fetch.
     */
    where?: tbl_exercicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_exercicios to fetch.
     */
    orderBy?: tbl_exercicioOrderByWithRelationInput | tbl_exercicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_exercicios.
     */
    cursor?: tbl_exercicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_exercicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_exercicios.
     */
    skip?: number
    distinct?: Tbl_exercicioScalarFieldEnum | Tbl_exercicioScalarFieldEnum[]
  }

  /**
   * tbl_exercicio create
   */
  export type tbl_exercicioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_exercicio.
     */
    data?: XOR<tbl_exercicioCreateInput, tbl_exercicioUncheckedCreateInput>
  }

  /**
   * tbl_exercicio createMany
   */
  export type tbl_exercicioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_exercicios.
     */
    data: tbl_exercicioCreateManyInput | tbl_exercicioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_exercicio update
   */
  export type tbl_exercicioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_exercicio.
     */
    data: XOR<tbl_exercicioUpdateInput, tbl_exercicioUncheckedUpdateInput>
    /**
     * Choose, which tbl_exercicio to update.
     */
    where: tbl_exercicioWhereUniqueInput
  }

  /**
   * tbl_exercicio updateMany
   */
  export type tbl_exercicioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_exercicios.
     */
    data: XOR<tbl_exercicioUpdateManyMutationInput, tbl_exercicioUncheckedUpdateManyInput>
    /**
     * Filter which tbl_exercicios to update
     */
    where?: tbl_exercicioWhereInput
  }

  /**
   * tbl_exercicio upsert
   */
  export type tbl_exercicioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_exercicio to update in case it exists.
     */
    where: tbl_exercicioWhereUniqueInput
    /**
     * In case the tbl_exercicio found by the `where` argument doesn't exist, create a new tbl_exercicio with this data.
     */
    create: XOR<tbl_exercicioCreateInput, tbl_exercicioUncheckedCreateInput>
    /**
     * In case the tbl_exercicio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_exercicioUpdateInput, tbl_exercicioUncheckedUpdateInput>
  }

  /**
   * tbl_exercicio delete
   */
  export type tbl_exercicioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
    /**
     * Filter which tbl_exercicio to delete.
     */
    where: tbl_exercicioWhereUniqueInput
  }

  /**
   * tbl_exercicio deleteMany
   */
  export type tbl_exercicioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_exercicios to delete
     */
    where?: tbl_exercicioWhereInput
  }

  /**
   * tbl_exercicio.tbl_alternativas
   */
  export type tbl_exercicio$tbl_alternativasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_alternativas
     */
    select?: tbl_alternativasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alternativasInclude<ExtArgs> | null
    where?: tbl_alternativasWhereInput
    orderBy?: tbl_alternativasOrderByWithRelationInput | tbl_alternativasOrderByWithRelationInput[]
    cursor?: tbl_alternativasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_alternativasScalarFieldEnum | Tbl_alternativasScalarFieldEnum[]
  }

  /**
   * tbl_exercicio without action
   */
  export type tbl_exercicioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_exercicio
     */
    select?: tbl_exercicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_exercicioInclude<ExtArgs> | null
  }


  /**
   * Model tbl_fases
   */

  export type AggregateTbl_fases = {
    _count: Tbl_fasesCountAggregateOutputType | null
    _avg: Tbl_fasesAvgAggregateOutputType | null
    _sum: Tbl_fasesSumAggregateOutputType | null
    _min: Tbl_fasesMinAggregateOutputType | null
    _max: Tbl_fasesMaxAggregateOutputType | null
  }

  export type Tbl_fasesAvgAggregateOutputType = {
    id: number | null
    fase: number | null
  }

  export type Tbl_fasesSumAggregateOutputType = {
    id: number | null
    fase: number | null
  }

  export type Tbl_fasesMinAggregateOutputType = {
    id: number | null
    fase: number | null
  }

  export type Tbl_fasesMaxAggregateOutputType = {
    id: number | null
    fase: number | null
  }

  export type Tbl_fasesCountAggregateOutputType = {
    id: number
    fase: number
    _all: number
  }


  export type Tbl_fasesAvgAggregateInputType = {
    id?: true
    fase?: true
  }

  export type Tbl_fasesSumAggregateInputType = {
    id?: true
    fase?: true
  }

  export type Tbl_fasesMinAggregateInputType = {
    id?: true
    fase?: true
  }

  export type Tbl_fasesMaxAggregateInputType = {
    id?: true
    fase?: true
  }

  export type Tbl_fasesCountAggregateInputType = {
    id?: true
    fase?: true
    _all?: true
  }

  export type Tbl_fasesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_fases to aggregate.
     */
    where?: tbl_fasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_fases to fetch.
     */
    orderBy?: tbl_fasesOrderByWithRelationInput | tbl_fasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_fasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_fases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_fases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_fases
    **/
    _count?: true | Tbl_fasesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_fasesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_fasesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_fasesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_fasesMaxAggregateInputType
  }

  export type GetTbl_fasesAggregateType<T extends Tbl_fasesAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_fases]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_fases[P]>
      : GetScalarType<T[P], AggregateTbl_fases[P]>
  }




  export type tbl_fasesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_fasesWhereInput
    orderBy?: tbl_fasesOrderByWithAggregationInput | tbl_fasesOrderByWithAggregationInput[]
    by: Tbl_fasesScalarFieldEnum[] | Tbl_fasesScalarFieldEnum
    having?: tbl_fasesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_fasesCountAggregateInputType | true
    _avg?: Tbl_fasesAvgAggregateInputType
    _sum?: Tbl_fasesSumAggregateInputType
    _min?: Tbl_fasesMinAggregateInputType
    _max?: Tbl_fasesMaxAggregateInputType
  }

  export type Tbl_fasesGroupByOutputType = {
    id: number
    fase: number | null
    _count: Tbl_fasesCountAggregateOutputType | null
    _avg: Tbl_fasesAvgAggregateOutputType | null
    _sum: Tbl_fasesSumAggregateOutputType | null
    _min: Tbl_fasesMinAggregateOutputType | null
    _max: Tbl_fasesMaxAggregateOutputType | null
  }

  type GetTbl_fasesGroupByPayload<T extends tbl_fasesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_fasesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_fasesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_fasesGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_fasesGroupByOutputType[P]>
        }
      >
    >


  export type tbl_fasesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fase?: boolean
    tbl_vest_fases?: boolean | tbl_fases$tbl_vest_fasesArgs<ExtArgs>
    _count?: boolean | Tbl_fasesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_fases"]>


  export type tbl_fasesSelectScalar = {
    id?: boolean
    fase?: boolean
  }

  export type tbl_fasesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_vest_fases?: boolean | tbl_fases$tbl_vest_fasesArgs<ExtArgs>
    _count?: boolean | Tbl_fasesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_fasesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_fases"
    objects: {
      tbl_vest_fases: Prisma.$tbl_vest_fasesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fase: number | null
    }, ExtArgs["result"]["tbl_fases"]>
    composites: {}
  }

  type tbl_fasesGetPayload<S extends boolean | null | undefined | tbl_fasesDefaultArgs> = $Result.GetResult<Prisma.$tbl_fasesPayload, S>

  type tbl_fasesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_fasesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_fasesCountAggregateInputType | true
    }

  export interface tbl_fasesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_fases'], meta: { name: 'tbl_fases' } }
    /**
     * Find zero or one Tbl_fases that matches the filter.
     * @param {tbl_fasesFindUniqueArgs} args - Arguments to find a Tbl_fases
     * @example
     * // Get one Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_fasesFindUniqueArgs>(args: SelectSubset<T, tbl_fasesFindUniqueArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_fases that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_fasesFindUniqueOrThrowArgs} args - Arguments to find a Tbl_fases
     * @example
     * // Get one Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_fasesFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_fasesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_fases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_fasesFindFirstArgs} args - Arguments to find a Tbl_fases
     * @example
     * // Get one Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_fasesFindFirstArgs>(args?: SelectSubset<T, tbl_fasesFindFirstArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_fases that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_fasesFindFirstOrThrowArgs} args - Arguments to find a Tbl_fases
     * @example
     * // Get one Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_fasesFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_fasesFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_fases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_fasesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.findMany()
     * 
     * // Get first 10 Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_fasesWithIdOnly = await prisma.tbl_fases.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_fasesFindManyArgs>(args?: SelectSubset<T, tbl_fasesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_fases.
     * @param {tbl_fasesCreateArgs} args - Arguments to create a Tbl_fases.
     * @example
     * // Create one Tbl_fases
     * const Tbl_fases = await prisma.tbl_fases.create({
     *   data: {
     *     // ... data to create a Tbl_fases
     *   }
     * })
     * 
     */
    create<T extends tbl_fasesCreateArgs>(args: SelectSubset<T, tbl_fasesCreateArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_fases.
     * @param {tbl_fasesCreateManyArgs} args - Arguments to create many Tbl_fases.
     * @example
     * // Create many Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_fasesCreateManyArgs>(args?: SelectSubset<T, tbl_fasesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_fases.
     * @param {tbl_fasesDeleteArgs} args - Arguments to delete one Tbl_fases.
     * @example
     * // Delete one Tbl_fases
     * const Tbl_fases = await prisma.tbl_fases.delete({
     *   where: {
     *     // ... filter to delete one Tbl_fases
     *   }
     * })
     * 
     */
    delete<T extends tbl_fasesDeleteArgs>(args: SelectSubset<T, tbl_fasesDeleteArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_fases.
     * @param {tbl_fasesUpdateArgs} args - Arguments to update one Tbl_fases.
     * @example
     * // Update one Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_fasesUpdateArgs>(args: SelectSubset<T, tbl_fasesUpdateArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_fases.
     * @param {tbl_fasesDeleteManyArgs} args - Arguments to filter Tbl_fases to delete.
     * @example
     * // Delete a few Tbl_fases
     * const { count } = await prisma.tbl_fases.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_fasesDeleteManyArgs>(args?: SelectSubset<T, tbl_fasesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_fases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_fasesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_fasesUpdateManyArgs>(args: SelectSubset<T, tbl_fasesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_fases.
     * @param {tbl_fasesUpsertArgs} args - Arguments to update or create a Tbl_fases.
     * @example
     * // Update or create a Tbl_fases
     * const tbl_fases = await prisma.tbl_fases.upsert({
     *   create: {
     *     // ... data to create a Tbl_fases
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_fases we want to update
     *   }
     * })
     */
    upsert<T extends tbl_fasesUpsertArgs>(args: SelectSubset<T, tbl_fasesUpsertArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_fases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_fasesCountArgs} args - Arguments to filter Tbl_fases to count.
     * @example
     * // Count the number of Tbl_fases
     * const count = await prisma.tbl_fases.count({
     *   where: {
     *     // ... the filter for the Tbl_fases we want to count
     *   }
     * })
    **/
    count<T extends tbl_fasesCountArgs>(
      args?: Subset<T, tbl_fasesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_fasesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_fases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_fasesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_fasesAggregateArgs>(args: Subset<T, Tbl_fasesAggregateArgs>): Prisma.PrismaPromise<GetTbl_fasesAggregateType<T>>

    /**
     * Group by Tbl_fases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_fasesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_fasesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_fasesGroupByArgs['orderBy'] }
        : { orderBy?: tbl_fasesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_fasesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_fasesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_fases model
   */
  readonly fields: tbl_fasesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_fases.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_fasesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_vest_fases<T extends tbl_fases$tbl_vest_fasesArgs<ExtArgs> = {}>(args?: Subset<T, tbl_fases$tbl_vest_fasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_fases model
   */ 
  interface tbl_fasesFieldRefs {
    readonly id: FieldRef<"tbl_fases", 'Int'>
    readonly fase: FieldRef<"tbl_fases", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_fases findUnique
   */
  export type tbl_fasesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_fases to fetch.
     */
    where: tbl_fasesWhereUniqueInput
  }

  /**
   * tbl_fases findUniqueOrThrow
   */
  export type tbl_fasesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_fases to fetch.
     */
    where: tbl_fasesWhereUniqueInput
  }

  /**
   * tbl_fases findFirst
   */
  export type tbl_fasesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_fases to fetch.
     */
    where?: tbl_fasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_fases to fetch.
     */
    orderBy?: tbl_fasesOrderByWithRelationInput | tbl_fasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_fases.
     */
    cursor?: tbl_fasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_fases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_fases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_fases.
     */
    distinct?: Tbl_fasesScalarFieldEnum | Tbl_fasesScalarFieldEnum[]
  }

  /**
   * tbl_fases findFirstOrThrow
   */
  export type tbl_fasesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_fases to fetch.
     */
    where?: tbl_fasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_fases to fetch.
     */
    orderBy?: tbl_fasesOrderByWithRelationInput | tbl_fasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_fases.
     */
    cursor?: tbl_fasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_fases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_fases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_fases.
     */
    distinct?: Tbl_fasesScalarFieldEnum | Tbl_fasesScalarFieldEnum[]
  }

  /**
   * tbl_fases findMany
   */
  export type tbl_fasesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_fases to fetch.
     */
    where?: tbl_fasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_fases to fetch.
     */
    orderBy?: tbl_fasesOrderByWithRelationInput | tbl_fasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_fases.
     */
    cursor?: tbl_fasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_fases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_fases.
     */
    skip?: number
    distinct?: Tbl_fasesScalarFieldEnum | Tbl_fasesScalarFieldEnum[]
  }

  /**
   * tbl_fases create
   */
  export type tbl_fasesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_fases.
     */
    data?: XOR<tbl_fasesCreateInput, tbl_fasesUncheckedCreateInput>
  }

  /**
   * tbl_fases createMany
   */
  export type tbl_fasesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_fases.
     */
    data: tbl_fasesCreateManyInput | tbl_fasesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_fases update
   */
  export type tbl_fasesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_fases.
     */
    data: XOR<tbl_fasesUpdateInput, tbl_fasesUncheckedUpdateInput>
    /**
     * Choose, which tbl_fases to update.
     */
    where: tbl_fasesWhereUniqueInput
  }

  /**
   * tbl_fases updateMany
   */
  export type tbl_fasesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_fases.
     */
    data: XOR<tbl_fasesUpdateManyMutationInput, tbl_fasesUncheckedUpdateManyInput>
    /**
     * Filter which tbl_fases to update
     */
    where?: tbl_fasesWhereInput
  }

  /**
   * tbl_fases upsert
   */
  export type tbl_fasesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_fases to update in case it exists.
     */
    where: tbl_fasesWhereUniqueInput
    /**
     * In case the tbl_fases found by the `where` argument doesn't exist, create a new tbl_fases with this data.
     */
    create: XOR<tbl_fasesCreateInput, tbl_fasesUncheckedCreateInput>
    /**
     * In case the tbl_fases was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_fasesUpdateInput, tbl_fasesUncheckedUpdateInput>
  }

  /**
   * tbl_fases delete
   */
  export type tbl_fasesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
    /**
     * Filter which tbl_fases to delete.
     */
    where: tbl_fasesWhereUniqueInput
  }

  /**
   * tbl_fases deleteMany
   */
  export type tbl_fasesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_fases to delete
     */
    where?: tbl_fasesWhereInput
  }

  /**
   * tbl_fases.tbl_vest_fases
   */
  export type tbl_fases$tbl_vest_fasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    where?: tbl_vest_fasesWhereInput
    orderBy?: tbl_vest_fasesOrderByWithRelationInput | tbl_vest_fasesOrderByWithRelationInput[]
    cursor?: tbl_vest_fasesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_vest_fasesScalarFieldEnum | Tbl_vest_fasesScalarFieldEnum[]
  }

  /**
   * tbl_fases without action
   */
  export type tbl_fasesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_fases
     */
    select?: tbl_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_fasesInclude<ExtArgs> | null
  }


  /**
   * Model tbl_horarios
   */

  export type AggregateTbl_horarios = {
    _count: Tbl_horariosCountAggregateOutputType | null
    _avg: Tbl_horariosAvgAggregateOutputType | null
    _sum: Tbl_horariosSumAggregateOutputType | null
    _min: Tbl_horariosMinAggregateOutputType | null
    _max: Tbl_horariosMaxAggregateOutputType | null
  }

  export type Tbl_horariosAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_horariosSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_horariosMinAggregateOutputType = {
    id: number | null
    horas: Date | null
  }

  export type Tbl_horariosMaxAggregateOutputType = {
    id: number | null
    horas: Date | null
  }

  export type Tbl_horariosCountAggregateOutputType = {
    id: number
    horas: number
    _all: number
  }


  export type Tbl_horariosAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_horariosSumAggregateInputType = {
    id?: true
  }

  export type Tbl_horariosMinAggregateInputType = {
    id?: true
    horas?: true
  }

  export type Tbl_horariosMaxAggregateInputType = {
    id?: true
    horas?: true
  }

  export type Tbl_horariosCountAggregateInputType = {
    id?: true
    horas?: true
    _all?: true
  }

  export type Tbl_horariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_horarios to aggregate.
     */
    where?: tbl_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_horarios to fetch.
     */
    orderBy?: tbl_horariosOrderByWithRelationInput | tbl_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_horarios
    **/
    _count?: true | Tbl_horariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_horariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_horariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_horariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_horariosMaxAggregateInputType
  }

  export type GetTbl_horariosAggregateType<T extends Tbl_horariosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_horarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_horarios[P]>
      : GetScalarType<T[P], AggregateTbl_horarios[P]>
  }




  export type tbl_horariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_horariosWhereInput
    orderBy?: tbl_horariosOrderByWithAggregationInput | tbl_horariosOrderByWithAggregationInput[]
    by: Tbl_horariosScalarFieldEnum[] | Tbl_horariosScalarFieldEnum
    having?: tbl_horariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_horariosCountAggregateInputType | true
    _avg?: Tbl_horariosAvgAggregateInputType
    _sum?: Tbl_horariosSumAggregateInputType
    _min?: Tbl_horariosMinAggregateInputType
    _max?: Tbl_horariosMaxAggregateInputType
  }

  export type Tbl_horariosGroupByOutputType = {
    id: number
    horas: Date
    _count: Tbl_horariosCountAggregateOutputType | null
    _avg: Tbl_horariosAvgAggregateOutputType | null
    _sum: Tbl_horariosSumAggregateOutputType | null
    _min: Tbl_horariosMinAggregateOutputType | null
    _max: Tbl_horariosMaxAggregateOutputType | null
  }

  type GetTbl_horariosGroupByPayload<T extends tbl_horariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_horariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_horariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_horariosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_horariosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_horariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horas?: boolean
  }, ExtArgs["result"]["tbl_horarios"]>


  export type tbl_horariosSelectScalar = {
    id?: boolean
    horas?: boolean
  }


  export type $tbl_horariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_horarios"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      horas: Date
    }, ExtArgs["result"]["tbl_horarios"]>
    composites: {}
  }

  type tbl_horariosGetPayload<S extends boolean | null | undefined | tbl_horariosDefaultArgs> = $Result.GetResult<Prisma.$tbl_horariosPayload, S>

  type tbl_horariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_horariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_horariosCountAggregateInputType | true
    }

  export interface tbl_horariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_horarios'], meta: { name: 'tbl_horarios' } }
    /**
     * Find zero or one Tbl_horarios that matches the filter.
     * @param {tbl_horariosFindUniqueArgs} args - Arguments to find a Tbl_horarios
     * @example
     * // Get one Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_horariosFindUniqueArgs>(args: SelectSubset<T, tbl_horariosFindUniqueArgs<ExtArgs>>): Prisma__tbl_horariosClient<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_horarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_horariosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_horarios
     * @example
     * // Get one Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_horariosFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_horariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_horariosClient<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_horariosFindFirstArgs} args - Arguments to find a Tbl_horarios
     * @example
     * // Get one Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_horariosFindFirstArgs>(args?: SelectSubset<T, tbl_horariosFindFirstArgs<ExtArgs>>): Prisma__tbl_horariosClient<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_horarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_horariosFindFirstOrThrowArgs} args - Arguments to find a Tbl_horarios
     * @example
     * // Get one Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_horariosFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_horariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_horariosClient<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_horariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.findMany()
     * 
     * // Get first 10 Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_horariosWithIdOnly = await prisma.tbl_horarios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_horariosFindManyArgs>(args?: SelectSubset<T, tbl_horariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_horarios.
     * @param {tbl_horariosCreateArgs} args - Arguments to create a Tbl_horarios.
     * @example
     * // Create one Tbl_horarios
     * const Tbl_horarios = await prisma.tbl_horarios.create({
     *   data: {
     *     // ... data to create a Tbl_horarios
     *   }
     * })
     * 
     */
    create<T extends tbl_horariosCreateArgs>(args: SelectSubset<T, tbl_horariosCreateArgs<ExtArgs>>): Prisma__tbl_horariosClient<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_horarios.
     * @param {tbl_horariosCreateManyArgs} args - Arguments to create many Tbl_horarios.
     * @example
     * // Create many Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_horariosCreateManyArgs>(args?: SelectSubset<T, tbl_horariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_horarios.
     * @param {tbl_horariosDeleteArgs} args - Arguments to delete one Tbl_horarios.
     * @example
     * // Delete one Tbl_horarios
     * const Tbl_horarios = await prisma.tbl_horarios.delete({
     *   where: {
     *     // ... filter to delete one Tbl_horarios
     *   }
     * })
     * 
     */
    delete<T extends tbl_horariosDeleteArgs>(args: SelectSubset<T, tbl_horariosDeleteArgs<ExtArgs>>): Prisma__tbl_horariosClient<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_horarios.
     * @param {tbl_horariosUpdateArgs} args - Arguments to update one Tbl_horarios.
     * @example
     * // Update one Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_horariosUpdateArgs>(args: SelectSubset<T, tbl_horariosUpdateArgs<ExtArgs>>): Prisma__tbl_horariosClient<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_horarios.
     * @param {tbl_horariosDeleteManyArgs} args - Arguments to filter Tbl_horarios to delete.
     * @example
     * // Delete a few Tbl_horarios
     * const { count } = await prisma.tbl_horarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_horariosDeleteManyArgs>(args?: SelectSubset<T, tbl_horariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_horariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_horariosUpdateManyArgs>(args: SelectSubset<T, tbl_horariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_horarios.
     * @param {tbl_horariosUpsertArgs} args - Arguments to update or create a Tbl_horarios.
     * @example
     * // Update or create a Tbl_horarios
     * const tbl_horarios = await prisma.tbl_horarios.upsert({
     *   create: {
     *     // ... data to create a Tbl_horarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_horarios we want to update
     *   }
     * })
     */
    upsert<T extends tbl_horariosUpsertArgs>(args: SelectSubset<T, tbl_horariosUpsertArgs<ExtArgs>>): Prisma__tbl_horariosClient<$Result.GetResult<Prisma.$tbl_horariosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_horariosCountArgs} args - Arguments to filter Tbl_horarios to count.
     * @example
     * // Count the number of Tbl_horarios
     * const count = await prisma.tbl_horarios.count({
     *   where: {
     *     // ... the filter for the Tbl_horarios we want to count
     *   }
     * })
    **/
    count<T extends tbl_horariosCountArgs>(
      args?: Subset<T, tbl_horariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_horariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_horariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_horariosAggregateArgs>(args: Subset<T, Tbl_horariosAggregateArgs>): Prisma.PrismaPromise<GetTbl_horariosAggregateType<T>>

    /**
     * Group by Tbl_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_horariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_horariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_horariosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_horariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_horariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_horariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_horarios model
   */
  readonly fields: tbl_horariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_horarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_horariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_horarios model
   */ 
  interface tbl_horariosFieldRefs {
    readonly id: FieldRef<"tbl_horarios", 'Int'>
    readonly horas: FieldRef<"tbl_horarios", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tbl_horarios findUnique
   */
  export type tbl_horariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * Filter, which tbl_horarios to fetch.
     */
    where: tbl_horariosWhereUniqueInput
  }

  /**
   * tbl_horarios findUniqueOrThrow
   */
  export type tbl_horariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * Filter, which tbl_horarios to fetch.
     */
    where: tbl_horariosWhereUniqueInput
  }

  /**
   * tbl_horarios findFirst
   */
  export type tbl_horariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * Filter, which tbl_horarios to fetch.
     */
    where?: tbl_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_horarios to fetch.
     */
    orderBy?: tbl_horariosOrderByWithRelationInput | tbl_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_horarios.
     */
    cursor?: tbl_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_horarios.
     */
    distinct?: Tbl_horariosScalarFieldEnum | Tbl_horariosScalarFieldEnum[]
  }

  /**
   * tbl_horarios findFirstOrThrow
   */
  export type tbl_horariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * Filter, which tbl_horarios to fetch.
     */
    where?: tbl_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_horarios to fetch.
     */
    orderBy?: tbl_horariosOrderByWithRelationInput | tbl_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_horarios.
     */
    cursor?: tbl_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_horarios.
     */
    distinct?: Tbl_horariosScalarFieldEnum | Tbl_horariosScalarFieldEnum[]
  }

  /**
   * tbl_horarios findMany
   */
  export type tbl_horariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * Filter, which tbl_horarios to fetch.
     */
    where?: tbl_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_horarios to fetch.
     */
    orderBy?: tbl_horariosOrderByWithRelationInput | tbl_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_horarios.
     */
    cursor?: tbl_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_horarios.
     */
    skip?: number
    distinct?: Tbl_horariosScalarFieldEnum | Tbl_horariosScalarFieldEnum[]
  }

  /**
   * tbl_horarios create
   */
  export type tbl_horariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * The data needed to create a tbl_horarios.
     */
    data: XOR<tbl_horariosCreateInput, tbl_horariosUncheckedCreateInput>
  }

  /**
   * tbl_horarios createMany
   */
  export type tbl_horariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_horarios.
     */
    data: tbl_horariosCreateManyInput | tbl_horariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_horarios update
   */
  export type tbl_horariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * The data needed to update a tbl_horarios.
     */
    data: XOR<tbl_horariosUpdateInput, tbl_horariosUncheckedUpdateInput>
    /**
     * Choose, which tbl_horarios to update.
     */
    where: tbl_horariosWhereUniqueInput
  }

  /**
   * tbl_horarios updateMany
   */
  export type tbl_horariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_horarios.
     */
    data: XOR<tbl_horariosUpdateManyMutationInput, tbl_horariosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_horarios to update
     */
    where?: tbl_horariosWhereInput
  }

  /**
   * tbl_horarios upsert
   */
  export type tbl_horariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * The filter to search for the tbl_horarios to update in case it exists.
     */
    where: tbl_horariosWhereUniqueInput
    /**
     * In case the tbl_horarios found by the `where` argument doesn't exist, create a new tbl_horarios with this data.
     */
    create: XOR<tbl_horariosCreateInput, tbl_horariosUncheckedCreateInput>
    /**
     * In case the tbl_horarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_horariosUpdateInput, tbl_horariosUncheckedUpdateInput>
  }

  /**
   * tbl_horarios delete
   */
  export type tbl_horariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
    /**
     * Filter which tbl_horarios to delete.
     */
    where: tbl_horariosWhereUniqueInput
  }

  /**
   * tbl_horarios deleteMany
   */
  export type tbl_horariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_horarios to delete
     */
    where?: tbl_horariosWhereInput
  }

  /**
   * tbl_horarios without action
   */
  export type tbl_horariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_horarios
     */
    select?: tbl_horariosSelect<ExtArgs> | null
  }


  /**
   * Model tbl_icones
   */

  export type AggregateTbl_icones = {
    _count: Tbl_iconesCountAggregateOutputType | null
    _avg: Tbl_iconesAvgAggregateOutputType | null
    _sum: Tbl_iconesSumAggregateOutputType | null
    _min: Tbl_iconesMinAggregateOutputType | null
    _max: Tbl_iconesMaxAggregateOutputType | null
  }

  export type Tbl_iconesAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_iconesSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_iconesMinAggregateOutputType = {
    id: number | null
    url: string | null
    status: boolean | null
  }

  export type Tbl_iconesMaxAggregateOutputType = {
    id: number | null
    url: string | null
    status: boolean | null
  }

  export type Tbl_iconesCountAggregateOutputType = {
    id: number
    url: number
    status: number
    _all: number
  }


  export type Tbl_iconesAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_iconesSumAggregateInputType = {
    id?: true
  }

  export type Tbl_iconesMinAggregateInputType = {
    id?: true
    url?: true
    status?: true
  }

  export type Tbl_iconesMaxAggregateInputType = {
    id?: true
    url?: true
    status?: true
  }

  export type Tbl_iconesCountAggregateInputType = {
    id?: true
    url?: true
    status?: true
    _all?: true
  }

  export type Tbl_iconesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_icones to aggregate.
     */
    where?: tbl_iconesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_icones to fetch.
     */
    orderBy?: tbl_iconesOrderByWithRelationInput | tbl_iconesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_iconesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_icones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_icones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_icones
    **/
    _count?: true | Tbl_iconesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_iconesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_iconesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_iconesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_iconesMaxAggregateInputType
  }

  export type GetTbl_iconesAggregateType<T extends Tbl_iconesAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_icones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_icones[P]>
      : GetScalarType<T[P], AggregateTbl_icones[P]>
  }




  export type tbl_iconesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_iconesWhereInput
    orderBy?: tbl_iconesOrderByWithAggregationInput | tbl_iconesOrderByWithAggregationInput[]
    by: Tbl_iconesScalarFieldEnum[] | Tbl_iconesScalarFieldEnum
    having?: tbl_iconesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_iconesCountAggregateInputType | true
    _avg?: Tbl_iconesAvgAggregateInputType
    _sum?: Tbl_iconesSumAggregateInputType
    _min?: Tbl_iconesMinAggregateInputType
    _max?: Tbl_iconesMaxAggregateInputType
  }

  export type Tbl_iconesGroupByOutputType = {
    id: number
    url: string
    status: boolean | null
    _count: Tbl_iconesCountAggregateOutputType | null
    _avg: Tbl_iconesAvgAggregateOutputType | null
    _sum: Tbl_iconesSumAggregateOutputType | null
    _min: Tbl_iconesMinAggregateOutputType | null
    _max: Tbl_iconesMaxAggregateOutputType | null
  }

  type GetTbl_iconesGroupByPayload<T extends tbl_iconesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_iconesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_iconesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_iconesGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_iconesGroupByOutputType[P]>
        }
      >
    >


  export type tbl_iconesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    status?: boolean
    tbl_aluno?: boolean | tbl_icones$tbl_alunoArgs<ExtArgs>
    tbl_professor?: boolean | tbl_icones$tbl_professorArgs<ExtArgs>
    _count?: boolean | Tbl_iconesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_icones"]>


  export type tbl_iconesSelectScalar = {
    id?: boolean
    url?: boolean
    status?: boolean
  }

  export type tbl_iconesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_aluno?: boolean | tbl_icones$tbl_alunoArgs<ExtArgs>
    tbl_professor?: boolean | tbl_icones$tbl_professorArgs<ExtArgs>
    _count?: boolean | Tbl_iconesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_iconesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_icones"
    objects: {
      tbl_aluno: Prisma.$tbl_alunoPayload<ExtArgs>[]
      tbl_professor: Prisma.$tbl_professorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      url: string
      status: boolean | null
    }, ExtArgs["result"]["tbl_icones"]>
    composites: {}
  }

  type tbl_iconesGetPayload<S extends boolean | null | undefined | tbl_iconesDefaultArgs> = $Result.GetResult<Prisma.$tbl_iconesPayload, S>

  type tbl_iconesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_iconesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_iconesCountAggregateInputType | true
    }

  export interface tbl_iconesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_icones'], meta: { name: 'tbl_icones' } }
    /**
     * Find zero or one Tbl_icones that matches the filter.
     * @param {tbl_iconesFindUniqueArgs} args - Arguments to find a Tbl_icones
     * @example
     * // Get one Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_iconesFindUniqueArgs>(args: SelectSubset<T, tbl_iconesFindUniqueArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_icones that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_iconesFindUniqueOrThrowArgs} args - Arguments to find a Tbl_icones
     * @example
     * // Get one Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_iconesFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_iconesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_icones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_iconesFindFirstArgs} args - Arguments to find a Tbl_icones
     * @example
     * // Get one Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_iconesFindFirstArgs>(args?: SelectSubset<T, tbl_iconesFindFirstArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_icones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_iconesFindFirstOrThrowArgs} args - Arguments to find a Tbl_icones
     * @example
     * // Get one Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_iconesFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_iconesFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_icones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_iconesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.findMany()
     * 
     * // Get first 10 Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_iconesWithIdOnly = await prisma.tbl_icones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_iconesFindManyArgs>(args?: SelectSubset<T, tbl_iconesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_icones.
     * @param {tbl_iconesCreateArgs} args - Arguments to create a Tbl_icones.
     * @example
     * // Create one Tbl_icones
     * const Tbl_icones = await prisma.tbl_icones.create({
     *   data: {
     *     // ... data to create a Tbl_icones
     *   }
     * })
     * 
     */
    create<T extends tbl_iconesCreateArgs>(args: SelectSubset<T, tbl_iconesCreateArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_icones.
     * @param {tbl_iconesCreateManyArgs} args - Arguments to create many Tbl_icones.
     * @example
     * // Create many Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_iconesCreateManyArgs>(args?: SelectSubset<T, tbl_iconesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_icones.
     * @param {tbl_iconesDeleteArgs} args - Arguments to delete one Tbl_icones.
     * @example
     * // Delete one Tbl_icones
     * const Tbl_icones = await prisma.tbl_icones.delete({
     *   where: {
     *     // ... filter to delete one Tbl_icones
     *   }
     * })
     * 
     */
    delete<T extends tbl_iconesDeleteArgs>(args: SelectSubset<T, tbl_iconesDeleteArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_icones.
     * @param {tbl_iconesUpdateArgs} args - Arguments to update one Tbl_icones.
     * @example
     * // Update one Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_iconesUpdateArgs>(args: SelectSubset<T, tbl_iconesUpdateArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_icones.
     * @param {tbl_iconesDeleteManyArgs} args - Arguments to filter Tbl_icones to delete.
     * @example
     * // Delete a few Tbl_icones
     * const { count } = await prisma.tbl_icones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_iconesDeleteManyArgs>(args?: SelectSubset<T, tbl_iconesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_icones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_iconesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_iconesUpdateManyArgs>(args: SelectSubset<T, tbl_iconesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_icones.
     * @param {tbl_iconesUpsertArgs} args - Arguments to update or create a Tbl_icones.
     * @example
     * // Update or create a Tbl_icones
     * const tbl_icones = await prisma.tbl_icones.upsert({
     *   create: {
     *     // ... data to create a Tbl_icones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_icones we want to update
     *   }
     * })
     */
    upsert<T extends tbl_iconesUpsertArgs>(args: SelectSubset<T, tbl_iconesUpsertArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_icones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_iconesCountArgs} args - Arguments to filter Tbl_icones to count.
     * @example
     * // Count the number of Tbl_icones
     * const count = await prisma.tbl_icones.count({
     *   where: {
     *     // ... the filter for the Tbl_icones we want to count
     *   }
     * })
    **/
    count<T extends tbl_iconesCountArgs>(
      args?: Subset<T, tbl_iconesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_iconesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_icones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_iconesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_iconesAggregateArgs>(args: Subset<T, Tbl_iconesAggregateArgs>): Prisma.PrismaPromise<GetTbl_iconesAggregateType<T>>

    /**
     * Group by Tbl_icones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_iconesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_iconesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_iconesGroupByArgs['orderBy'] }
        : { orderBy?: tbl_iconesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_iconesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_iconesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_icones model
   */
  readonly fields: tbl_iconesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_icones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_iconesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_aluno<T extends tbl_icones$tbl_alunoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_icones$tbl_alunoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_alunoPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_professor<T extends tbl_icones$tbl_professorArgs<ExtArgs> = {}>(args?: Subset<T, tbl_icones$tbl_professorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_icones model
   */ 
  interface tbl_iconesFieldRefs {
    readonly id: FieldRef<"tbl_icones", 'Int'>
    readonly url: FieldRef<"tbl_icones", 'String'>
    readonly status: FieldRef<"tbl_icones", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_icones findUnique
   */
  export type tbl_iconesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_icones to fetch.
     */
    where: tbl_iconesWhereUniqueInput
  }

  /**
   * tbl_icones findUniqueOrThrow
   */
  export type tbl_iconesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_icones to fetch.
     */
    where: tbl_iconesWhereUniqueInput
  }

  /**
   * tbl_icones findFirst
   */
  export type tbl_iconesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_icones to fetch.
     */
    where?: tbl_iconesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_icones to fetch.
     */
    orderBy?: tbl_iconesOrderByWithRelationInput | tbl_iconesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_icones.
     */
    cursor?: tbl_iconesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_icones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_icones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_icones.
     */
    distinct?: Tbl_iconesScalarFieldEnum | Tbl_iconesScalarFieldEnum[]
  }

  /**
   * tbl_icones findFirstOrThrow
   */
  export type tbl_iconesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_icones to fetch.
     */
    where?: tbl_iconesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_icones to fetch.
     */
    orderBy?: tbl_iconesOrderByWithRelationInput | tbl_iconesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_icones.
     */
    cursor?: tbl_iconesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_icones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_icones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_icones.
     */
    distinct?: Tbl_iconesScalarFieldEnum | Tbl_iconesScalarFieldEnum[]
  }

  /**
   * tbl_icones findMany
   */
  export type tbl_iconesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_icones to fetch.
     */
    where?: tbl_iconesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_icones to fetch.
     */
    orderBy?: tbl_iconesOrderByWithRelationInput | tbl_iconesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_icones.
     */
    cursor?: tbl_iconesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_icones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_icones.
     */
    skip?: number
    distinct?: Tbl_iconesScalarFieldEnum | Tbl_iconesScalarFieldEnum[]
  }

  /**
   * tbl_icones create
   */
  export type tbl_iconesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_icones.
     */
    data: XOR<tbl_iconesCreateInput, tbl_iconesUncheckedCreateInput>
  }

  /**
   * tbl_icones createMany
   */
  export type tbl_iconesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_icones.
     */
    data: tbl_iconesCreateManyInput | tbl_iconesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_icones update
   */
  export type tbl_iconesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_icones.
     */
    data: XOR<tbl_iconesUpdateInput, tbl_iconesUncheckedUpdateInput>
    /**
     * Choose, which tbl_icones to update.
     */
    where: tbl_iconesWhereUniqueInput
  }

  /**
   * tbl_icones updateMany
   */
  export type tbl_iconesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_icones.
     */
    data: XOR<tbl_iconesUpdateManyMutationInput, tbl_iconesUncheckedUpdateManyInput>
    /**
     * Filter which tbl_icones to update
     */
    where?: tbl_iconesWhereInput
  }

  /**
   * tbl_icones upsert
   */
  export type tbl_iconesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_icones to update in case it exists.
     */
    where: tbl_iconesWhereUniqueInput
    /**
     * In case the tbl_icones found by the `where` argument doesn't exist, create a new tbl_icones with this data.
     */
    create: XOR<tbl_iconesCreateInput, tbl_iconesUncheckedCreateInput>
    /**
     * In case the tbl_icones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_iconesUpdateInput, tbl_iconesUncheckedUpdateInput>
  }

  /**
   * tbl_icones delete
   */
  export type tbl_iconesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
    /**
     * Filter which tbl_icones to delete.
     */
    where: tbl_iconesWhereUniqueInput
  }

  /**
   * tbl_icones deleteMany
   */
  export type tbl_iconesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_icones to delete
     */
    where?: tbl_iconesWhereInput
  }

  /**
   * tbl_icones.tbl_aluno
   */
  export type tbl_icones$tbl_alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno
     */
    select?: tbl_alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_alunoInclude<ExtArgs> | null
    where?: tbl_alunoWhereInput
    orderBy?: tbl_alunoOrderByWithRelationInput | tbl_alunoOrderByWithRelationInput[]
    cursor?: tbl_alunoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_alunoScalarFieldEnum | Tbl_alunoScalarFieldEnum[]
  }

  /**
   * tbl_icones.tbl_professor
   */
  export type tbl_icones$tbl_professorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    where?: tbl_professorWhereInput
    orderBy?: tbl_professorOrderByWithRelationInput | tbl_professorOrderByWithRelationInput[]
    cursor?: tbl_professorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_professorScalarFieldEnum | Tbl_professorScalarFieldEnum[]
  }

  /**
   * tbl_icones without action
   */
  export type tbl_iconesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_icones
     */
    select?: tbl_iconesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_iconesInclude<ExtArgs> | null
  }


  /**
   * Model tbl_intituicoes
   */

  export type AggregateTbl_intituicoes = {
    _count: Tbl_intituicoesCountAggregateOutputType | null
    _avg: Tbl_intituicoesAvgAggregateOutputType | null
    _sum: Tbl_intituicoesSumAggregateOutputType | null
    _min: Tbl_intituicoesMinAggregateOutputType | null
    _max: Tbl_intituicoesMaxAggregateOutputType | null
  }

  export type Tbl_intituicoesAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_intituicoesSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_intituicoesMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_intituicoesMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_intituicoesCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tbl_intituicoesAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_intituicoesSumAggregateInputType = {
    id?: true
  }

  export type Tbl_intituicoesMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_intituicoesMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_intituicoesCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tbl_intituicoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_intituicoes to aggregate.
     */
    where?: tbl_intituicoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_intituicoes to fetch.
     */
    orderBy?: tbl_intituicoesOrderByWithRelationInput | tbl_intituicoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_intituicoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_intituicoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_intituicoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_intituicoes
    **/
    _count?: true | Tbl_intituicoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_intituicoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_intituicoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_intituicoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_intituicoesMaxAggregateInputType
  }

  export type GetTbl_intituicoesAggregateType<T extends Tbl_intituicoesAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_intituicoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_intituicoes[P]>
      : GetScalarType<T[P], AggregateTbl_intituicoes[P]>
  }




  export type tbl_intituicoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_intituicoesWhereInput
    orderBy?: tbl_intituicoesOrderByWithAggregationInput | tbl_intituicoesOrderByWithAggregationInput[]
    by: Tbl_intituicoesScalarFieldEnum[] | Tbl_intituicoesScalarFieldEnum
    having?: tbl_intituicoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_intituicoesCountAggregateInputType | true
    _avg?: Tbl_intituicoesAvgAggregateInputType
    _sum?: Tbl_intituicoesSumAggregateInputType
    _min?: Tbl_intituicoesMinAggregateInputType
    _max?: Tbl_intituicoesMaxAggregateInputType
  }

  export type Tbl_intituicoesGroupByOutputType = {
    id: number
    nome: string
    _count: Tbl_intituicoesCountAggregateOutputType | null
    _avg: Tbl_intituicoesAvgAggregateOutputType | null
    _sum: Tbl_intituicoesSumAggregateOutputType | null
    _min: Tbl_intituicoesMinAggregateOutputType | null
    _max: Tbl_intituicoesMaxAggregateOutputType | null
  }

  type GetTbl_intituicoesGroupByPayload<T extends tbl_intituicoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_intituicoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_intituicoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_intituicoesGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_intituicoesGroupByOutputType[P]>
        }
      >
    >


  export type tbl_intituicoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tbl_vestibulares?: boolean | tbl_intituicoes$tbl_vestibularesArgs<ExtArgs>
    _count?: boolean | Tbl_intituicoesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_intituicoes"]>


  export type tbl_intituicoesSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type tbl_intituicoesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_vestibulares?: boolean | tbl_intituicoes$tbl_vestibularesArgs<ExtArgs>
    _count?: boolean | Tbl_intituicoesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_intituicoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_intituicoes"
    objects: {
      tbl_vestibulares: Prisma.$tbl_vestibularesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["tbl_intituicoes"]>
    composites: {}
  }

  type tbl_intituicoesGetPayload<S extends boolean | null | undefined | tbl_intituicoesDefaultArgs> = $Result.GetResult<Prisma.$tbl_intituicoesPayload, S>

  type tbl_intituicoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_intituicoesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_intituicoesCountAggregateInputType | true
    }

  export interface tbl_intituicoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_intituicoes'], meta: { name: 'tbl_intituicoes' } }
    /**
     * Find zero or one Tbl_intituicoes that matches the filter.
     * @param {tbl_intituicoesFindUniqueArgs} args - Arguments to find a Tbl_intituicoes
     * @example
     * // Get one Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_intituicoesFindUniqueArgs>(args: SelectSubset<T, tbl_intituicoesFindUniqueArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_intituicoes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_intituicoesFindUniqueOrThrowArgs} args - Arguments to find a Tbl_intituicoes
     * @example
     * // Get one Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_intituicoesFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_intituicoesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_intituicoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_intituicoesFindFirstArgs} args - Arguments to find a Tbl_intituicoes
     * @example
     * // Get one Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_intituicoesFindFirstArgs>(args?: SelectSubset<T, tbl_intituicoesFindFirstArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_intituicoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_intituicoesFindFirstOrThrowArgs} args - Arguments to find a Tbl_intituicoes
     * @example
     * // Get one Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_intituicoesFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_intituicoesFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_intituicoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_intituicoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.findMany()
     * 
     * // Get first 10 Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_intituicoesWithIdOnly = await prisma.tbl_intituicoes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_intituicoesFindManyArgs>(args?: SelectSubset<T, tbl_intituicoesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_intituicoes.
     * @param {tbl_intituicoesCreateArgs} args - Arguments to create a Tbl_intituicoes.
     * @example
     * // Create one Tbl_intituicoes
     * const Tbl_intituicoes = await prisma.tbl_intituicoes.create({
     *   data: {
     *     // ... data to create a Tbl_intituicoes
     *   }
     * })
     * 
     */
    create<T extends tbl_intituicoesCreateArgs>(args: SelectSubset<T, tbl_intituicoesCreateArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_intituicoes.
     * @param {tbl_intituicoesCreateManyArgs} args - Arguments to create many Tbl_intituicoes.
     * @example
     * // Create many Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_intituicoesCreateManyArgs>(args?: SelectSubset<T, tbl_intituicoesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_intituicoes.
     * @param {tbl_intituicoesDeleteArgs} args - Arguments to delete one Tbl_intituicoes.
     * @example
     * // Delete one Tbl_intituicoes
     * const Tbl_intituicoes = await prisma.tbl_intituicoes.delete({
     *   where: {
     *     // ... filter to delete one Tbl_intituicoes
     *   }
     * })
     * 
     */
    delete<T extends tbl_intituicoesDeleteArgs>(args: SelectSubset<T, tbl_intituicoesDeleteArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_intituicoes.
     * @param {tbl_intituicoesUpdateArgs} args - Arguments to update one Tbl_intituicoes.
     * @example
     * // Update one Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_intituicoesUpdateArgs>(args: SelectSubset<T, tbl_intituicoesUpdateArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_intituicoes.
     * @param {tbl_intituicoesDeleteManyArgs} args - Arguments to filter Tbl_intituicoes to delete.
     * @example
     * // Delete a few Tbl_intituicoes
     * const { count } = await prisma.tbl_intituicoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_intituicoesDeleteManyArgs>(args?: SelectSubset<T, tbl_intituicoesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_intituicoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_intituicoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_intituicoesUpdateManyArgs>(args: SelectSubset<T, tbl_intituicoesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_intituicoes.
     * @param {tbl_intituicoesUpsertArgs} args - Arguments to update or create a Tbl_intituicoes.
     * @example
     * // Update or create a Tbl_intituicoes
     * const tbl_intituicoes = await prisma.tbl_intituicoes.upsert({
     *   create: {
     *     // ... data to create a Tbl_intituicoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_intituicoes we want to update
     *   }
     * })
     */
    upsert<T extends tbl_intituicoesUpsertArgs>(args: SelectSubset<T, tbl_intituicoesUpsertArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_intituicoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_intituicoesCountArgs} args - Arguments to filter Tbl_intituicoes to count.
     * @example
     * // Count the number of Tbl_intituicoes
     * const count = await prisma.tbl_intituicoes.count({
     *   where: {
     *     // ... the filter for the Tbl_intituicoes we want to count
     *   }
     * })
    **/
    count<T extends tbl_intituicoesCountArgs>(
      args?: Subset<T, tbl_intituicoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_intituicoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_intituicoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_intituicoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_intituicoesAggregateArgs>(args: Subset<T, Tbl_intituicoesAggregateArgs>): Prisma.PrismaPromise<GetTbl_intituicoesAggregateType<T>>

    /**
     * Group by Tbl_intituicoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_intituicoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_intituicoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_intituicoesGroupByArgs['orderBy'] }
        : { orderBy?: tbl_intituicoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_intituicoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_intituicoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_intituicoes model
   */
  readonly fields: tbl_intituicoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_intituicoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_intituicoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_vestibulares<T extends tbl_intituicoes$tbl_vestibularesArgs<ExtArgs> = {}>(args?: Subset<T, tbl_intituicoes$tbl_vestibularesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_intituicoes model
   */ 
  interface tbl_intituicoesFieldRefs {
    readonly id: FieldRef<"tbl_intituicoes", 'Int'>
    readonly nome: FieldRef<"tbl_intituicoes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_intituicoes findUnique
   */
  export type tbl_intituicoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_intituicoes to fetch.
     */
    where: tbl_intituicoesWhereUniqueInput
  }

  /**
   * tbl_intituicoes findUniqueOrThrow
   */
  export type tbl_intituicoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_intituicoes to fetch.
     */
    where: tbl_intituicoesWhereUniqueInput
  }

  /**
   * tbl_intituicoes findFirst
   */
  export type tbl_intituicoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_intituicoes to fetch.
     */
    where?: tbl_intituicoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_intituicoes to fetch.
     */
    orderBy?: tbl_intituicoesOrderByWithRelationInput | tbl_intituicoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_intituicoes.
     */
    cursor?: tbl_intituicoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_intituicoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_intituicoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_intituicoes.
     */
    distinct?: Tbl_intituicoesScalarFieldEnum | Tbl_intituicoesScalarFieldEnum[]
  }

  /**
   * tbl_intituicoes findFirstOrThrow
   */
  export type tbl_intituicoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_intituicoes to fetch.
     */
    where?: tbl_intituicoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_intituicoes to fetch.
     */
    orderBy?: tbl_intituicoesOrderByWithRelationInput | tbl_intituicoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_intituicoes.
     */
    cursor?: tbl_intituicoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_intituicoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_intituicoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_intituicoes.
     */
    distinct?: Tbl_intituicoesScalarFieldEnum | Tbl_intituicoesScalarFieldEnum[]
  }

  /**
   * tbl_intituicoes findMany
   */
  export type tbl_intituicoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_intituicoes to fetch.
     */
    where?: tbl_intituicoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_intituicoes to fetch.
     */
    orderBy?: tbl_intituicoesOrderByWithRelationInput | tbl_intituicoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_intituicoes.
     */
    cursor?: tbl_intituicoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_intituicoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_intituicoes.
     */
    skip?: number
    distinct?: Tbl_intituicoesScalarFieldEnum | Tbl_intituicoesScalarFieldEnum[]
  }

  /**
   * tbl_intituicoes create
   */
  export type tbl_intituicoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_intituicoes.
     */
    data: XOR<tbl_intituicoesCreateInput, tbl_intituicoesUncheckedCreateInput>
  }

  /**
   * tbl_intituicoes createMany
   */
  export type tbl_intituicoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_intituicoes.
     */
    data: tbl_intituicoesCreateManyInput | tbl_intituicoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_intituicoes update
   */
  export type tbl_intituicoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_intituicoes.
     */
    data: XOR<tbl_intituicoesUpdateInput, tbl_intituicoesUncheckedUpdateInput>
    /**
     * Choose, which tbl_intituicoes to update.
     */
    where: tbl_intituicoesWhereUniqueInput
  }

  /**
   * tbl_intituicoes updateMany
   */
  export type tbl_intituicoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_intituicoes.
     */
    data: XOR<tbl_intituicoesUpdateManyMutationInput, tbl_intituicoesUncheckedUpdateManyInput>
    /**
     * Filter which tbl_intituicoes to update
     */
    where?: tbl_intituicoesWhereInput
  }

  /**
   * tbl_intituicoes upsert
   */
  export type tbl_intituicoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_intituicoes to update in case it exists.
     */
    where: tbl_intituicoesWhereUniqueInput
    /**
     * In case the tbl_intituicoes found by the `where` argument doesn't exist, create a new tbl_intituicoes with this data.
     */
    create: XOR<tbl_intituicoesCreateInput, tbl_intituicoesUncheckedCreateInput>
    /**
     * In case the tbl_intituicoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_intituicoesUpdateInput, tbl_intituicoesUncheckedUpdateInput>
  }

  /**
   * tbl_intituicoes delete
   */
  export type tbl_intituicoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
    /**
     * Filter which tbl_intituicoes to delete.
     */
    where: tbl_intituicoesWhereUniqueInput
  }

  /**
   * tbl_intituicoes deleteMany
   */
  export type tbl_intituicoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_intituicoes to delete
     */
    where?: tbl_intituicoesWhereInput
  }

  /**
   * tbl_intituicoes.tbl_vestibulares
   */
  export type tbl_intituicoes$tbl_vestibularesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    where?: tbl_vestibularesWhereInput
    orderBy?: tbl_vestibularesOrderByWithRelationInput | tbl_vestibularesOrderByWithRelationInput[]
    cursor?: tbl_vestibularesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_vestibularesScalarFieldEnum | Tbl_vestibularesScalarFieldEnum[]
  }

  /**
   * tbl_intituicoes without action
   */
  export type tbl_intituicoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_intituicoes
     */
    select?: tbl_intituicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_intituicoesInclude<ExtArgs> | null
  }


  /**
   * Model tbl_prof_agenda
   */

  export type AggregateTbl_prof_agenda = {
    _count: Tbl_prof_agendaCountAggregateOutputType | null
    _avg: Tbl_prof_agendaAvgAggregateOutputType | null
    _sum: Tbl_prof_agendaSumAggregateOutputType | null
    _min: Tbl_prof_agendaMinAggregateOutputType | null
    _max: Tbl_prof_agendaMaxAggregateOutputType | null
  }

  export type Tbl_prof_agendaAvgAggregateOutputType = {
    id: number | null
    carga_horaria: number | null
    semana_id: number | null
    professor_id: number | null
  }

  export type Tbl_prof_agendaSumAggregateOutputType = {
    id: number | null
    carga_horaria: number | null
    semana_id: number | null
    professor_id: number | null
  }

  export type Tbl_prof_agendaMinAggregateOutputType = {
    id: number | null
    carga_horaria: number | null
    semana_id: number | null
    professor_id: number | null
  }

  export type Tbl_prof_agendaMaxAggregateOutputType = {
    id: number | null
    carga_horaria: number | null
    semana_id: number | null
    professor_id: number | null
  }

  export type Tbl_prof_agendaCountAggregateOutputType = {
    id: number
    carga_horaria: number
    semana_id: number
    professor_id: number
    _all: number
  }


  export type Tbl_prof_agendaAvgAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    professor_id?: true
  }

  export type Tbl_prof_agendaSumAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    professor_id?: true
  }

  export type Tbl_prof_agendaMinAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    professor_id?: true
  }

  export type Tbl_prof_agendaMaxAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    professor_id?: true
  }

  export type Tbl_prof_agendaCountAggregateInputType = {
    id?: true
    carga_horaria?: true
    semana_id?: true
    professor_id?: true
    _all?: true
  }

  export type Tbl_prof_agendaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_prof_agenda to aggregate.
     */
    where?: tbl_prof_agendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_prof_agenda to fetch.
     */
    orderBy?: tbl_prof_agendaOrderByWithRelationInput | tbl_prof_agendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_prof_agendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_prof_agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_prof_agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_prof_agenda
    **/
    _count?: true | Tbl_prof_agendaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_prof_agendaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_prof_agendaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_prof_agendaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_prof_agendaMaxAggregateInputType
  }

  export type GetTbl_prof_agendaAggregateType<T extends Tbl_prof_agendaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_prof_agenda]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_prof_agenda[P]>
      : GetScalarType<T[P], AggregateTbl_prof_agenda[P]>
  }




  export type tbl_prof_agendaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_prof_agendaWhereInput
    orderBy?: tbl_prof_agendaOrderByWithAggregationInput | tbl_prof_agendaOrderByWithAggregationInput[]
    by: Tbl_prof_agendaScalarFieldEnum[] | Tbl_prof_agendaScalarFieldEnum
    having?: tbl_prof_agendaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_prof_agendaCountAggregateInputType | true
    _avg?: Tbl_prof_agendaAvgAggregateInputType
    _sum?: Tbl_prof_agendaSumAggregateInputType
    _min?: Tbl_prof_agendaMinAggregateInputType
    _max?: Tbl_prof_agendaMaxAggregateInputType
  }

  export type Tbl_prof_agendaGroupByOutputType = {
    id: number
    carga_horaria: number
    semana_id: number
    professor_id: number
    _count: Tbl_prof_agendaCountAggregateOutputType | null
    _avg: Tbl_prof_agendaAvgAggregateOutputType | null
    _sum: Tbl_prof_agendaSumAggregateOutputType | null
    _min: Tbl_prof_agendaMinAggregateOutputType | null
    _max: Tbl_prof_agendaMaxAggregateOutputType | null
  }

  type GetTbl_prof_agendaGroupByPayload<T extends tbl_prof_agendaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_prof_agendaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_prof_agendaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_prof_agendaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_prof_agendaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_prof_agendaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    carga_horaria?: boolean
    semana_id?: boolean
    professor_id?: boolean
    tbl_semana?: boolean | tbl_semanaDefaultArgs<ExtArgs>
    tbl_professor?: boolean | tbl_professorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_prof_agenda"]>


  export type tbl_prof_agendaSelectScalar = {
    id?: boolean
    carga_horaria?: boolean
    semana_id?: boolean
    professor_id?: boolean
  }

  export type tbl_prof_agendaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_semana?: boolean | tbl_semanaDefaultArgs<ExtArgs>
    tbl_professor?: boolean | tbl_professorDefaultArgs<ExtArgs>
  }

  export type $tbl_prof_agendaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_prof_agenda"
    objects: {
      tbl_semana: Prisma.$tbl_semanaPayload<ExtArgs>
      tbl_professor: Prisma.$tbl_professorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      carga_horaria: number
      semana_id: number
      professor_id: number
    }, ExtArgs["result"]["tbl_prof_agenda"]>
    composites: {}
  }

  type tbl_prof_agendaGetPayload<S extends boolean | null | undefined | tbl_prof_agendaDefaultArgs> = $Result.GetResult<Prisma.$tbl_prof_agendaPayload, S>

  type tbl_prof_agendaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_prof_agendaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_prof_agendaCountAggregateInputType | true
    }

  export interface tbl_prof_agendaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_prof_agenda'], meta: { name: 'tbl_prof_agenda' } }
    /**
     * Find zero or one Tbl_prof_agenda that matches the filter.
     * @param {tbl_prof_agendaFindUniqueArgs} args - Arguments to find a Tbl_prof_agenda
     * @example
     * // Get one Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_prof_agendaFindUniqueArgs>(args: SelectSubset<T, tbl_prof_agendaFindUniqueArgs<ExtArgs>>): Prisma__tbl_prof_agendaClient<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_prof_agenda that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_prof_agendaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_prof_agenda
     * @example
     * // Get one Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_prof_agendaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_prof_agendaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_prof_agendaClient<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_prof_agenda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_agendaFindFirstArgs} args - Arguments to find a Tbl_prof_agenda
     * @example
     * // Get one Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_prof_agendaFindFirstArgs>(args?: SelectSubset<T, tbl_prof_agendaFindFirstArgs<ExtArgs>>): Prisma__tbl_prof_agendaClient<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_prof_agenda that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_agendaFindFirstOrThrowArgs} args - Arguments to find a Tbl_prof_agenda
     * @example
     * // Get one Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_prof_agendaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_prof_agendaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_prof_agendaClient<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_prof_agenda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_agendaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.findMany()
     * 
     * // Get first 10 Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_prof_agendaWithIdOnly = await prisma.tbl_prof_agenda.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_prof_agendaFindManyArgs>(args?: SelectSubset<T, tbl_prof_agendaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_prof_agenda.
     * @param {tbl_prof_agendaCreateArgs} args - Arguments to create a Tbl_prof_agenda.
     * @example
     * // Create one Tbl_prof_agenda
     * const Tbl_prof_agenda = await prisma.tbl_prof_agenda.create({
     *   data: {
     *     // ... data to create a Tbl_prof_agenda
     *   }
     * })
     * 
     */
    create<T extends tbl_prof_agendaCreateArgs>(args: SelectSubset<T, tbl_prof_agendaCreateArgs<ExtArgs>>): Prisma__tbl_prof_agendaClient<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_prof_agenda.
     * @param {tbl_prof_agendaCreateManyArgs} args - Arguments to create many Tbl_prof_agenda.
     * @example
     * // Create many Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_prof_agendaCreateManyArgs>(args?: SelectSubset<T, tbl_prof_agendaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_prof_agenda.
     * @param {tbl_prof_agendaDeleteArgs} args - Arguments to delete one Tbl_prof_agenda.
     * @example
     * // Delete one Tbl_prof_agenda
     * const Tbl_prof_agenda = await prisma.tbl_prof_agenda.delete({
     *   where: {
     *     // ... filter to delete one Tbl_prof_agenda
     *   }
     * })
     * 
     */
    delete<T extends tbl_prof_agendaDeleteArgs>(args: SelectSubset<T, tbl_prof_agendaDeleteArgs<ExtArgs>>): Prisma__tbl_prof_agendaClient<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_prof_agenda.
     * @param {tbl_prof_agendaUpdateArgs} args - Arguments to update one Tbl_prof_agenda.
     * @example
     * // Update one Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_prof_agendaUpdateArgs>(args: SelectSubset<T, tbl_prof_agendaUpdateArgs<ExtArgs>>): Prisma__tbl_prof_agendaClient<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_prof_agenda.
     * @param {tbl_prof_agendaDeleteManyArgs} args - Arguments to filter Tbl_prof_agenda to delete.
     * @example
     * // Delete a few Tbl_prof_agenda
     * const { count } = await prisma.tbl_prof_agenda.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_prof_agendaDeleteManyArgs>(args?: SelectSubset<T, tbl_prof_agendaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_prof_agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_agendaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_prof_agendaUpdateManyArgs>(args: SelectSubset<T, tbl_prof_agendaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_prof_agenda.
     * @param {tbl_prof_agendaUpsertArgs} args - Arguments to update or create a Tbl_prof_agenda.
     * @example
     * // Update or create a Tbl_prof_agenda
     * const tbl_prof_agenda = await prisma.tbl_prof_agenda.upsert({
     *   create: {
     *     // ... data to create a Tbl_prof_agenda
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_prof_agenda we want to update
     *   }
     * })
     */
    upsert<T extends tbl_prof_agendaUpsertArgs>(args: SelectSubset<T, tbl_prof_agendaUpsertArgs<ExtArgs>>): Prisma__tbl_prof_agendaClient<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_prof_agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_agendaCountArgs} args - Arguments to filter Tbl_prof_agenda to count.
     * @example
     * // Count the number of Tbl_prof_agenda
     * const count = await prisma.tbl_prof_agenda.count({
     *   where: {
     *     // ... the filter for the Tbl_prof_agenda we want to count
     *   }
     * })
    **/
    count<T extends tbl_prof_agendaCountArgs>(
      args?: Subset<T, tbl_prof_agendaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_prof_agendaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_prof_agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_prof_agendaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_prof_agendaAggregateArgs>(args: Subset<T, Tbl_prof_agendaAggregateArgs>): Prisma.PrismaPromise<GetTbl_prof_agendaAggregateType<T>>

    /**
     * Group by Tbl_prof_agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_agendaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_prof_agendaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_prof_agendaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_prof_agendaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_prof_agendaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_prof_agendaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_prof_agenda model
   */
  readonly fields: tbl_prof_agendaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_prof_agenda.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_prof_agendaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_semana<T extends tbl_semanaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_semanaDefaultArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_professor<T extends tbl_professorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_professorDefaultArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_prof_agenda model
   */ 
  interface tbl_prof_agendaFieldRefs {
    readonly id: FieldRef<"tbl_prof_agenda", 'Int'>
    readonly carga_horaria: FieldRef<"tbl_prof_agenda", 'Int'>
    readonly semana_id: FieldRef<"tbl_prof_agenda", 'Int'>
    readonly professor_id: FieldRef<"tbl_prof_agenda", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_prof_agenda findUnique
   */
  export type tbl_prof_agendaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_agenda to fetch.
     */
    where: tbl_prof_agendaWhereUniqueInput
  }

  /**
   * tbl_prof_agenda findUniqueOrThrow
   */
  export type tbl_prof_agendaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_agenda to fetch.
     */
    where: tbl_prof_agendaWhereUniqueInput
  }

  /**
   * tbl_prof_agenda findFirst
   */
  export type tbl_prof_agendaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_agenda to fetch.
     */
    where?: tbl_prof_agendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_prof_agenda to fetch.
     */
    orderBy?: tbl_prof_agendaOrderByWithRelationInput | tbl_prof_agendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_prof_agenda.
     */
    cursor?: tbl_prof_agendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_prof_agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_prof_agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_prof_agenda.
     */
    distinct?: Tbl_prof_agendaScalarFieldEnum | Tbl_prof_agendaScalarFieldEnum[]
  }

  /**
   * tbl_prof_agenda findFirstOrThrow
   */
  export type tbl_prof_agendaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_agenda to fetch.
     */
    where?: tbl_prof_agendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_prof_agenda to fetch.
     */
    orderBy?: tbl_prof_agendaOrderByWithRelationInput | tbl_prof_agendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_prof_agenda.
     */
    cursor?: tbl_prof_agendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_prof_agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_prof_agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_prof_agenda.
     */
    distinct?: Tbl_prof_agendaScalarFieldEnum | Tbl_prof_agendaScalarFieldEnum[]
  }

  /**
   * tbl_prof_agenda findMany
   */
  export type tbl_prof_agendaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_agenda to fetch.
     */
    where?: tbl_prof_agendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_prof_agenda to fetch.
     */
    orderBy?: tbl_prof_agendaOrderByWithRelationInput | tbl_prof_agendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_prof_agenda.
     */
    cursor?: tbl_prof_agendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_prof_agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_prof_agenda.
     */
    skip?: number
    distinct?: Tbl_prof_agendaScalarFieldEnum | Tbl_prof_agendaScalarFieldEnum[]
  }

  /**
   * tbl_prof_agenda create
   */
  export type tbl_prof_agendaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_prof_agenda.
     */
    data: XOR<tbl_prof_agendaCreateInput, tbl_prof_agendaUncheckedCreateInput>
  }

  /**
   * tbl_prof_agenda createMany
   */
  export type tbl_prof_agendaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_prof_agenda.
     */
    data: tbl_prof_agendaCreateManyInput | tbl_prof_agendaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_prof_agenda update
   */
  export type tbl_prof_agendaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_prof_agenda.
     */
    data: XOR<tbl_prof_agendaUpdateInput, tbl_prof_agendaUncheckedUpdateInput>
    /**
     * Choose, which tbl_prof_agenda to update.
     */
    where: tbl_prof_agendaWhereUniqueInput
  }

  /**
   * tbl_prof_agenda updateMany
   */
  export type tbl_prof_agendaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_prof_agenda.
     */
    data: XOR<tbl_prof_agendaUpdateManyMutationInput, tbl_prof_agendaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_prof_agenda to update
     */
    where?: tbl_prof_agendaWhereInput
  }

  /**
   * tbl_prof_agenda upsert
   */
  export type tbl_prof_agendaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_prof_agenda to update in case it exists.
     */
    where: tbl_prof_agendaWhereUniqueInput
    /**
     * In case the tbl_prof_agenda found by the `where` argument doesn't exist, create a new tbl_prof_agenda with this data.
     */
    create: XOR<tbl_prof_agendaCreateInput, tbl_prof_agendaUncheckedCreateInput>
    /**
     * In case the tbl_prof_agenda was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_prof_agendaUpdateInput, tbl_prof_agendaUncheckedUpdateInput>
  }

  /**
   * tbl_prof_agenda delete
   */
  export type tbl_prof_agendaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    /**
     * Filter which tbl_prof_agenda to delete.
     */
    where: tbl_prof_agendaWhereUniqueInput
  }

  /**
   * tbl_prof_agenda deleteMany
   */
  export type tbl_prof_agendaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_prof_agenda to delete
     */
    where?: tbl_prof_agendaWhereInput
  }

  /**
   * tbl_prof_agenda without action
   */
  export type tbl_prof_agendaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_prof_disciplinas
   */

  export type AggregateTbl_prof_disciplinas = {
    _count: Tbl_prof_disciplinasCountAggregateOutputType | null
    _avg: Tbl_prof_disciplinasAvgAggregateOutputType | null
    _sum: Tbl_prof_disciplinasSumAggregateOutputType | null
    _min: Tbl_prof_disciplinasMinAggregateOutputType | null
    _max: Tbl_prof_disciplinasMaxAggregateOutputType | null
  }

  export type Tbl_prof_disciplinasAvgAggregateOutputType = {
    id: number | null
    disciplina_id: number | null
    professor_id: number | null
  }

  export type Tbl_prof_disciplinasSumAggregateOutputType = {
    id: number | null
    disciplina_id: number | null
    professor_id: number | null
  }

  export type Tbl_prof_disciplinasMinAggregateOutputType = {
    id: number | null
    disciplina_id: number | null
    professor_id: number | null
  }

  export type Tbl_prof_disciplinasMaxAggregateOutputType = {
    id: number | null
    disciplina_id: number | null
    professor_id: number | null
  }

  export type Tbl_prof_disciplinasCountAggregateOutputType = {
    id: number
    disciplina_id: number
    professor_id: number
    _all: number
  }


  export type Tbl_prof_disciplinasAvgAggregateInputType = {
    id?: true
    disciplina_id?: true
    professor_id?: true
  }

  export type Tbl_prof_disciplinasSumAggregateInputType = {
    id?: true
    disciplina_id?: true
    professor_id?: true
  }

  export type Tbl_prof_disciplinasMinAggregateInputType = {
    id?: true
    disciplina_id?: true
    professor_id?: true
  }

  export type Tbl_prof_disciplinasMaxAggregateInputType = {
    id?: true
    disciplina_id?: true
    professor_id?: true
  }

  export type Tbl_prof_disciplinasCountAggregateInputType = {
    id?: true
    disciplina_id?: true
    professor_id?: true
    _all?: true
  }

  export type Tbl_prof_disciplinasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_prof_disciplinas to aggregate.
     */
    where?: tbl_prof_disciplinasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_prof_disciplinas to fetch.
     */
    orderBy?: tbl_prof_disciplinasOrderByWithRelationInput | tbl_prof_disciplinasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_prof_disciplinasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_prof_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_prof_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_prof_disciplinas
    **/
    _count?: true | Tbl_prof_disciplinasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_prof_disciplinasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_prof_disciplinasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_prof_disciplinasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_prof_disciplinasMaxAggregateInputType
  }

  export type GetTbl_prof_disciplinasAggregateType<T extends Tbl_prof_disciplinasAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_prof_disciplinas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_prof_disciplinas[P]>
      : GetScalarType<T[P], AggregateTbl_prof_disciplinas[P]>
  }




  export type tbl_prof_disciplinasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_prof_disciplinasWhereInput
    orderBy?: tbl_prof_disciplinasOrderByWithAggregationInput | tbl_prof_disciplinasOrderByWithAggregationInput[]
    by: Tbl_prof_disciplinasScalarFieldEnum[] | Tbl_prof_disciplinasScalarFieldEnum
    having?: tbl_prof_disciplinasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_prof_disciplinasCountAggregateInputType | true
    _avg?: Tbl_prof_disciplinasAvgAggregateInputType
    _sum?: Tbl_prof_disciplinasSumAggregateInputType
    _min?: Tbl_prof_disciplinasMinAggregateInputType
    _max?: Tbl_prof_disciplinasMaxAggregateInputType
  }

  export type Tbl_prof_disciplinasGroupByOutputType = {
    id: number
    disciplina_id: number
    professor_id: number
    _count: Tbl_prof_disciplinasCountAggregateOutputType | null
    _avg: Tbl_prof_disciplinasAvgAggregateOutputType | null
    _sum: Tbl_prof_disciplinasSumAggregateOutputType | null
    _min: Tbl_prof_disciplinasMinAggregateOutputType | null
    _max: Tbl_prof_disciplinasMaxAggregateOutputType | null
  }

  type GetTbl_prof_disciplinasGroupByPayload<T extends tbl_prof_disciplinasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_prof_disciplinasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_prof_disciplinasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_prof_disciplinasGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_prof_disciplinasGroupByOutputType[P]>
        }
      >
    >


  export type tbl_prof_disciplinasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    disciplina_id?: boolean
    professor_id?: boolean
    tbl_disciplina?: boolean | tbl_disciplinaDefaultArgs<ExtArgs>
    tbl_professor?: boolean | tbl_professorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_prof_disciplinas"]>


  export type tbl_prof_disciplinasSelectScalar = {
    id?: boolean
    disciplina_id?: boolean
    professor_id?: boolean
  }

  export type tbl_prof_disciplinasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_disciplina?: boolean | tbl_disciplinaDefaultArgs<ExtArgs>
    tbl_professor?: boolean | tbl_professorDefaultArgs<ExtArgs>
  }

  export type $tbl_prof_disciplinasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_prof_disciplinas"
    objects: {
      tbl_disciplina: Prisma.$tbl_disciplinaPayload<ExtArgs>
      tbl_professor: Prisma.$tbl_professorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      disciplina_id: number
      professor_id: number
    }, ExtArgs["result"]["tbl_prof_disciplinas"]>
    composites: {}
  }

  type tbl_prof_disciplinasGetPayload<S extends boolean | null | undefined | tbl_prof_disciplinasDefaultArgs> = $Result.GetResult<Prisma.$tbl_prof_disciplinasPayload, S>

  type tbl_prof_disciplinasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_prof_disciplinasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_prof_disciplinasCountAggregateInputType | true
    }

  export interface tbl_prof_disciplinasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_prof_disciplinas'], meta: { name: 'tbl_prof_disciplinas' } }
    /**
     * Find zero or one Tbl_prof_disciplinas that matches the filter.
     * @param {tbl_prof_disciplinasFindUniqueArgs} args - Arguments to find a Tbl_prof_disciplinas
     * @example
     * // Get one Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_prof_disciplinasFindUniqueArgs>(args: SelectSubset<T, tbl_prof_disciplinasFindUniqueArgs<ExtArgs>>): Prisma__tbl_prof_disciplinasClient<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_prof_disciplinas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_prof_disciplinasFindUniqueOrThrowArgs} args - Arguments to find a Tbl_prof_disciplinas
     * @example
     * // Get one Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_prof_disciplinasFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_prof_disciplinasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_prof_disciplinasClient<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_prof_disciplinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_disciplinasFindFirstArgs} args - Arguments to find a Tbl_prof_disciplinas
     * @example
     * // Get one Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_prof_disciplinasFindFirstArgs>(args?: SelectSubset<T, tbl_prof_disciplinasFindFirstArgs<ExtArgs>>): Prisma__tbl_prof_disciplinasClient<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_prof_disciplinas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_disciplinasFindFirstOrThrowArgs} args - Arguments to find a Tbl_prof_disciplinas
     * @example
     * // Get one Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_prof_disciplinasFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_prof_disciplinasFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_prof_disciplinasClient<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_prof_disciplinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_disciplinasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.findMany()
     * 
     * // Get first 10 Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_prof_disciplinasWithIdOnly = await prisma.tbl_prof_disciplinas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_prof_disciplinasFindManyArgs>(args?: SelectSubset<T, tbl_prof_disciplinasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_prof_disciplinas.
     * @param {tbl_prof_disciplinasCreateArgs} args - Arguments to create a Tbl_prof_disciplinas.
     * @example
     * // Create one Tbl_prof_disciplinas
     * const Tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.create({
     *   data: {
     *     // ... data to create a Tbl_prof_disciplinas
     *   }
     * })
     * 
     */
    create<T extends tbl_prof_disciplinasCreateArgs>(args: SelectSubset<T, tbl_prof_disciplinasCreateArgs<ExtArgs>>): Prisma__tbl_prof_disciplinasClient<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_prof_disciplinas.
     * @param {tbl_prof_disciplinasCreateManyArgs} args - Arguments to create many Tbl_prof_disciplinas.
     * @example
     * // Create many Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_prof_disciplinasCreateManyArgs>(args?: SelectSubset<T, tbl_prof_disciplinasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_prof_disciplinas.
     * @param {tbl_prof_disciplinasDeleteArgs} args - Arguments to delete one Tbl_prof_disciplinas.
     * @example
     * // Delete one Tbl_prof_disciplinas
     * const Tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.delete({
     *   where: {
     *     // ... filter to delete one Tbl_prof_disciplinas
     *   }
     * })
     * 
     */
    delete<T extends tbl_prof_disciplinasDeleteArgs>(args: SelectSubset<T, tbl_prof_disciplinasDeleteArgs<ExtArgs>>): Prisma__tbl_prof_disciplinasClient<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_prof_disciplinas.
     * @param {tbl_prof_disciplinasUpdateArgs} args - Arguments to update one Tbl_prof_disciplinas.
     * @example
     * // Update one Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_prof_disciplinasUpdateArgs>(args: SelectSubset<T, tbl_prof_disciplinasUpdateArgs<ExtArgs>>): Prisma__tbl_prof_disciplinasClient<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_prof_disciplinas.
     * @param {tbl_prof_disciplinasDeleteManyArgs} args - Arguments to filter Tbl_prof_disciplinas to delete.
     * @example
     * // Delete a few Tbl_prof_disciplinas
     * const { count } = await prisma.tbl_prof_disciplinas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_prof_disciplinasDeleteManyArgs>(args?: SelectSubset<T, tbl_prof_disciplinasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_prof_disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_disciplinasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_prof_disciplinasUpdateManyArgs>(args: SelectSubset<T, tbl_prof_disciplinasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_prof_disciplinas.
     * @param {tbl_prof_disciplinasUpsertArgs} args - Arguments to update or create a Tbl_prof_disciplinas.
     * @example
     * // Update or create a Tbl_prof_disciplinas
     * const tbl_prof_disciplinas = await prisma.tbl_prof_disciplinas.upsert({
     *   create: {
     *     // ... data to create a Tbl_prof_disciplinas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_prof_disciplinas we want to update
     *   }
     * })
     */
    upsert<T extends tbl_prof_disciplinasUpsertArgs>(args: SelectSubset<T, tbl_prof_disciplinasUpsertArgs<ExtArgs>>): Prisma__tbl_prof_disciplinasClient<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_prof_disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_disciplinasCountArgs} args - Arguments to filter Tbl_prof_disciplinas to count.
     * @example
     * // Count the number of Tbl_prof_disciplinas
     * const count = await prisma.tbl_prof_disciplinas.count({
     *   where: {
     *     // ... the filter for the Tbl_prof_disciplinas we want to count
     *   }
     * })
    **/
    count<T extends tbl_prof_disciplinasCountArgs>(
      args?: Subset<T, tbl_prof_disciplinasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_prof_disciplinasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_prof_disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_prof_disciplinasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_prof_disciplinasAggregateArgs>(args: Subset<T, Tbl_prof_disciplinasAggregateArgs>): Prisma.PrismaPromise<GetTbl_prof_disciplinasAggregateType<T>>

    /**
     * Group by Tbl_prof_disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_prof_disciplinasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_prof_disciplinasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_prof_disciplinasGroupByArgs['orderBy'] }
        : { orderBy?: tbl_prof_disciplinasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_prof_disciplinasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_prof_disciplinasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_prof_disciplinas model
   */
  readonly fields: tbl_prof_disciplinasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_prof_disciplinas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_prof_disciplinasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_disciplina<T extends tbl_disciplinaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_disciplinaDefaultArgs<ExtArgs>>): Prisma__tbl_disciplinaClient<$Result.GetResult<Prisma.$tbl_disciplinaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_professor<T extends tbl_professorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_professorDefaultArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_prof_disciplinas model
   */ 
  interface tbl_prof_disciplinasFieldRefs {
    readonly id: FieldRef<"tbl_prof_disciplinas", 'Int'>
    readonly disciplina_id: FieldRef<"tbl_prof_disciplinas", 'Int'>
    readonly professor_id: FieldRef<"tbl_prof_disciplinas", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_prof_disciplinas findUnique
   */
  export type tbl_prof_disciplinasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_disciplinas to fetch.
     */
    where: tbl_prof_disciplinasWhereUniqueInput
  }

  /**
   * tbl_prof_disciplinas findUniqueOrThrow
   */
  export type tbl_prof_disciplinasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_disciplinas to fetch.
     */
    where: tbl_prof_disciplinasWhereUniqueInput
  }

  /**
   * tbl_prof_disciplinas findFirst
   */
  export type tbl_prof_disciplinasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_disciplinas to fetch.
     */
    where?: tbl_prof_disciplinasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_prof_disciplinas to fetch.
     */
    orderBy?: tbl_prof_disciplinasOrderByWithRelationInput | tbl_prof_disciplinasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_prof_disciplinas.
     */
    cursor?: tbl_prof_disciplinasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_prof_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_prof_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_prof_disciplinas.
     */
    distinct?: Tbl_prof_disciplinasScalarFieldEnum | Tbl_prof_disciplinasScalarFieldEnum[]
  }

  /**
   * tbl_prof_disciplinas findFirstOrThrow
   */
  export type tbl_prof_disciplinasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_disciplinas to fetch.
     */
    where?: tbl_prof_disciplinasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_prof_disciplinas to fetch.
     */
    orderBy?: tbl_prof_disciplinasOrderByWithRelationInput | tbl_prof_disciplinasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_prof_disciplinas.
     */
    cursor?: tbl_prof_disciplinasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_prof_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_prof_disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_prof_disciplinas.
     */
    distinct?: Tbl_prof_disciplinasScalarFieldEnum | Tbl_prof_disciplinasScalarFieldEnum[]
  }

  /**
   * tbl_prof_disciplinas findMany
   */
  export type tbl_prof_disciplinasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_prof_disciplinas to fetch.
     */
    where?: tbl_prof_disciplinasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_prof_disciplinas to fetch.
     */
    orderBy?: tbl_prof_disciplinasOrderByWithRelationInput | tbl_prof_disciplinasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_prof_disciplinas.
     */
    cursor?: tbl_prof_disciplinasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_prof_disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_prof_disciplinas.
     */
    skip?: number
    distinct?: Tbl_prof_disciplinasScalarFieldEnum | Tbl_prof_disciplinasScalarFieldEnum[]
  }

  /**
   * tbl_prof_disciplinas create
   */
  export type tbl_prof_disciplinasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_prof_disciplinas.
     */
    data: XOR<tbl_prof_disciplinasCreateInput, tbl_prof_disciplinasUncheckedCreateInput>
  }

  /**
   * tbl_prof_disciplinas createMany
   */
  export type tbl_prof_disciplinasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_prof_disciplinas.
     */
    data: tbl_prof_disciplinasCreateManyInput | tbl_prof_disciplinasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_prof_disciplinas update
   */
  export type tbl_prof_disciplinasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_prof_disciplinas.
     */
    data: XOR<tbl_prof_disciplinasUpdateInput, tbl_prof_disciplinasUncheckedUpdateInput>
    /**
     * Choose, which tbl_prof_disciplinas to update.
     */
    where: tbl_prof_disciplinasWhereUniqueInput
  }

  /**
   * tbl_prof_disciplinas updateMany
   */
  export type tbl_prof_disciplinasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_prof_disciplinas.
     */
    data: XOR<tbl_prof_disciplinasUpdateManyMutationInput, tbl_prof_disciplinasUncheckedUpdateManyInput>
    /**
     * Filter which tbl_prof_disciplinas to update
     */
    where?: tbl_prof_disciplinasWhereInput
  }

  /**
   * tbl_prof_disciplinas upsert
   */
  export type tbl_prof_disciplinasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_prof_disciplinas to update in case it exists.
     */
    where: tbl_prof_disciplinasWhereUniqueInput
    /**
     * In case the tbl_prof_disciplinas found by the `where` argument doesn't exist, create a new tbl_prof_disciplinas with this data.
     */
    create: XOR<tbl_prof_disciplinasCreateInput, tbl_prof_disciplinasUncheckedCreateInput>
    /**
     * In case the tbl_prof_disciplinas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_prof_disciplinasUpdateInput, tbl_prof_disciplinasUncheckedUpdateInput>
  }

  /**
   * tbl_prof_disciplinas delete
   */
  export type tbl_prof_disciplinasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    /**
     * Filter which tbl_prof_disciplinas to delete.
     */
    where: tbl_prof_disciplinasWhereUniqueInput
  }

  /**
   * tbl_prof_disciplinas deleteMany
   */
  export type tbl_prof_disciplinasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_prof_disciplinas to delete
     */
    where?: tbl_prof_disciplinasWhereInput
  }

  /**
   * tbl_prof_disciplinas without action
   */
  export type tbl_prof_disciplinasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
  }


  /**
   * Model tbl_professor
   */

  export type AggregateTbl_professor = {
    _count: Tbl_professorCountAggregateOutputType | null
    _avg: Tbl_professorAvgAggregateOutputType | null
    _sum: Tbl_professorSumAggregateOutputType | null
    _min: Tbl_professorMinAggregateOutputType | null
    _max: Tbl_professorMaxAggregateOutputType | null
  }

  export type Tbl_professorAvgAggregateOutputType = {
    id: number | null
    icone_id: number | null
  }

  export type Tbl_professorSumAggregateOutputType = {
    id: number | null
    icone_id: number | null
  }

  export type Tbl_professorMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    icone_id: number | null
    status: boolean | null
  }

  export type Tbl_professorMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    icone_id: number | null
    status: boolean | null
  }

  export type Tbl_professorCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    senha: number
    icone_id: number
    status: number
    _all: number
  }


  export type Tbl_professorAvgAggregateInputType = {
    id?: true
    icone_id?: true
  }

  export type Tbl_professorSumAggregateInputType = {
    id?: true
    icone_id?: true
  }

  export type Tbl_professorMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    icone_id?: true
    status?: true
  }

  export type Tbl_professorMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    icone_id?: true
    status?: true
  }

  export type Tbl_professorCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    icone_id?: true
    status?: true
    _all?: true
  }

  export type Tbl_professorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_professor to aggregate.
     */
    where?: tbl_professorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_professors to fetch.
     */
    orderBy?: tbl_professorOrderByWithRelationInput | tbl_professorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_professorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_professors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_professors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_professors
    **/
    _count?: true | Tbl_professorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_professorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_professorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_professorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_professorMaxAggregateInputType
  }

  export type GetTbl_professorAggregateType<T extends Tbl_professorAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_professor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_professor[P]>
      : GetScalarType<T[P], AggregateTbl_professor[P]>
  }




  export type tbl_professorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_professorWhereInput
    orderBy?: tbl_professorOrderByWithAggregationInput | tbl_professorOrderByWithAggregationInput[]
    by: Tbl_professorScalarFieldEnum[] | Tbl_professorScalarFieldEnum
    having?: tbl_professorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_professorCountAggregateInputType | true
    _avg?: Tbl_professorAvgAggregateInputType
    _sum?: Tbl_professorSumAggregateInputType
    _min?: Tbl_professorMinAggregateInputType
    _max?: Tbl_professorMaxAggregateInputType
  }

  export type Tbl_professorGroupByOutputType = {
    id: number
    nome: string
    email: string
    senha: string | null
    icone_id: number
    status: boolean | null
    _count: Tbl_professorCountAggregateOutputType | null
    _avg: Tbl_professorAvgAggregateOutputType | null
    _sum: Tbl_professorSumAggregateOutputType | null
    _min: Tbl_professorMinAggregateOutputType | null
    _max: Tbl_professorMaxAggregateOutputType | null
  }

  type GetTbl_professorGroupByPayload<T extends tbl_professorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_professorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_professorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_professorGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_professorGroupByOutputType[P]>
        }
      >
    >


  export type tbl_professorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    icone_id?: boolean
    status?: boolean
    tbl_prof_agenda?: boolean | tbl_professor$tbl_prof_agendaArgs<ExtArgs>
    tbl_prof_disciplinas?: boolean | tbl_professor$tbl_prof_disciplinasArgs<ExtArgs>
    tbl_icones?: boolean | tbl_iconesDefaultArgs<ExtArgs>
    _count?: boolean | Tbl_professorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_professor"]>


  export type tbl_professorSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    icone_id?: boolean
    status?: boolean
  }

  export type tbl_professorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_prof_agenda?: boolean | tbl_professor$tbl_prof_agendaArgs<ExtArgs>
    tbl_prof_disciplinas?: boolean | tbl_professor$tbl_prof_disciplinasArgs<ExtArgs>
    tbl_icones?: boolean | tbl_iconesDefaultArgs<ExtArgs>
    _count?: boolean | Tbl_professorCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_professorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_professor"
    objects: {
      tbl_prof_agenda: Prisma.$tbl_prof_agendaPayload<ExtArgs>[]
      tbl_prof_disciplinas: Prisma.$tbl_prof_disciplinasPayload<ExtArgs>[]
      tbl_icones: Prisma.$tbl_iconesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      senha: string | null
      icone_id: number
      status: boolean | null
    }, ExtArgs["result"]["tbl_professor"]>
    composites: {}
  }

  type tbl_professorGetPayload<S extends boolean | null | undefined | tbl_professorDefaultArgs> = $Result.GetResult<Prisma.$tbl_professorPayload, S>

  type tbl_professorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_professorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_professorCountAggregateInputType | true
    }

  export interface tbl_professorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_professor'], meta: { name: 'tbl_professor' } }
    /**
     * Find zero or one Tbl_professor that matches the filter.
     * @param {tbl_professorFindUniqueArgs} args - Arguments to find a Tbl_professor
     * @example
     * // Get one Tbl_professor
     * const tbl_professor = await prisma.tbl_professor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_professorFindUniqueArgs>(args: SelectSubset<T, tbl_professorFindUniqueArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_professor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_professorFindUniqueOrThrowArgs} args - Arguments to find a Tbl_professor
     * @example
     * // Get one Tbl_professor
     * const tbl_professor = await prisma.tbl_professor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_professorFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_professorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_professor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_professorFindFirstArgs} args - Arguments to find a Tbl_professor
     * @example
     * // Get one Tbl_professor
     * const tbl_professor = await prisma.tbl_professor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_professorFindFirstArgs>(args?: SelectSubset<T, tbl_professorFindFirstArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_professor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_professorFindFirstOrThrowArgs} args - Arguments to find a Tbl_professor
     * @example
     * // Get one Tbl_professor
     * const tbl_professor = await prisma.tbl_professor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_professorFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_professorFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_professors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_professorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_professors
     * const tbl_professors = await prisma.tbl_professor.findMany()
     * 
     * // Get first 10 Tbl_professors
     * const tbl_professors = await prisma.tbl_professor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_professorWithIdOnly = await prisma.tbl_professor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_professorFindManyArgs>(args?: SelectSubset<T, tbl_professorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_professor.
     * @param {tbl_professorCreateArgs} args - Arguments to create a Tbl_professor.
     * @example
     * // Create one Tbl_professor
     * const Tbl_professor = await prisma.tbl_professor.create({
     *   data: {
     *     // ... data to create a Tbl_professor
     *   }
     * })
     * 
     */
    create<T extends tbl_professorCreateArgs>(args: SelectSubset<T, tbl_professorCreateArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_professors.
     * @param {tbl_professorCreateManyArgs} args - Arguments to create many Tbl_professors.
     * @example
     * // Create many Tbl_professors
     * const tbl_professor = await prisma.tbl_professor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_professorCreateManyArgs>(args?: SelectSubset<T, tbl_professorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_professor.
     * @param {tbl_professorDeleteArgs} args - Arguments to delete one Tbl_professor.
     * @example
     * // Delete one Tbl_professor
     * const Tbl_professor = await prisma.tbl_professor.delete({
     *   where: {
     *     // ... filter to delete one Tbl_professor
     *   }
     * })
     * 
     */
    delete<T extends tbl_professorDeleteArgs>(args: SelectSubset<T, tbl_professorDeleteArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_professor.
     * @param {tbl_professorUpdateArgs} args - Arguments to update one Tbl_professor.
     * @example
     * // Update one Tbl_professor
     * const tbl_professor = await prisma.tbl_professor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_professorUpdateArgs>(args: SelectSubset<T, tbl_professorUpdateArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_professors.
     * @param {tbl_professorDeleteManyArgs} args - Arguments to filter Tbl_professors to delete.
     * @example
     * // Delete a few Tbl_professors
     * const { count } = await prisma.tbl_professor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_professorDeleteManyArgs>(args?: SelectSubset<T, tbl_professorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_professors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_professorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_professors
     * const tbl_professor = await prisma.tbl_professor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_professorUpdateManyArgs>(args: SelectSubset<T, tbl_professorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_professor.
     * @param {tbl_professorUpsertArgs} args - Arguments to update or create a Tbl_professor.
     * @example
     * // Update or create a Tbl_professor
     * const tbl_professor = await prisma.tbl_professor.upsert({
     *   create: {
     *     // ... data to create a Tbl_professor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_professor we want to update
     *   }
     * })
     */
    upsert<T extends tbl_professorUpsertArgs>(args: SelectSubset<T, tbl_professorUpsertArgs<ExtArgs>>): Prisma__tbl_professorClient<$Result.GetResult<Prisma.$tbl_professorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_professors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_professorCountArgs} args - Arguments to filter Tbl_professors to count.
     * @example
     * // Count the number of Tbl_professors
     * const count = await prisma.tbl_professor.count({
     *   where: {
     *     // ... the filter for the Tbl_professors we want to count
     *   }
     * })
    **/
    count<T extends tbl_professorCountArgs>(
      args?: Subset<T, tbl_professorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_professorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_professor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_professorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_professorAggregateArgs>(args: Subset<T, Tbl_professorAggregateArgs>): Prisma.PrismaPromise<GetTbl_professorAggregateType<T>>

    /**
     * Group by Tbl_professor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_professorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_professorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_professorGroupByArgs['orderBy'] }
        : { orderBy?: tbl_professorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_professorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_professorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_professor model
   */
  readonly fields: tbl_professorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_professor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_professorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_prof_agenda<T extends tbl_professor$tbl_prof_agendaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_professor$tbl_prof_agendaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_prof_disciplinas<T extends tbl_professor$tbl_prof_disciplinasArgs<ExtArgs> = {}>(args?: Subset<T, tbl_professor$tbl_prof_disciplinasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_prof_disciplinasPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_icones<T extends tbl_iconesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_iconesDefaultArgs<ExtArgs>>): Prisma__tbl_iconesClient<$Result.GetResult<Prisma.$tbl_iconesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_professor model
   */ 
  interface tbl_professorFieldRefs {
    readonly id: FieldRef<"tbl_professor", 'Int'>
    readonly nome: FieldRef<"tbl_professor", 'String'>
    readonly email: FieldRef<"tbl_professor", 'String'>
    readonly senha: FieldRef<"tbl_professor", 'String'>
    readonly icone_id: FieldRef<"tbl_professor", 'Int'>
    readonly status: FieldRef<"tbl_professor", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_professor findUnique
   */
  export type tbl_professorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_professor to fetch.
     */
    where: tbl_professorWhereUniqueInput
  }

  /**
   * tbl_professor findUniqueOrThrow
   */
  export type tbl_professorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_professor to fetch.
     */
    where: tbl_professorWhereUniqueInput
  }

  /**
   * tbl_professor findFirst
   */
  export type tbl_professorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_professor to fetch.
     */
    where?: tbl_professorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_professors to fetch.
     */
    orderBy?: tbl_professorOrderByWithRelationInput | tbl_professorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_professors.
     */
    cursor?: tbl_professorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_professors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_professors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_professors.
     */
    distinct?: Tbl_professorScalarFieldEnum | Tbl_professorScalarFieldEnum[]
  }

  /**
   * tbl_professor findFirstOrThrow
   */
  export type tbl_professorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_professor to fetch.
     */
    where?: tbl_professorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_professors to fetch.
     */
    orderBy?: tbl_professorOrderByWithRelationInput | tbl_professorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_professors.
     */
    cursor?: tbl_professorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_professors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_professors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_professors.
     */
    distinct?: Tbl_professorScalarFieldEnum | Tbl_professorScalarFieldEnum[]
  }

  /**
   * tbl_professor findMany
   */
  export type tbl_professorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * Filter, which tbl_professors to fetch.
     */
    where?: tbl_professorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_professors to fetch.
     */
    orderBy?: tbl_professorOrderByWithRelationInput | tbl_professorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_professors.
     */
    cursor?: tbl_professorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_professors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_professors.
     */
    skip?: number
    distinct?: Tbl_professorScalarFieldEnum | Tbl_professorScalarFieldEnum[]
  }

  /**
   * tbl_professor create
   */
  export type tbl_professorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_professor.
     */
    data: XOR<tbl_professorCreateInput, tbl_professorUncheckedCreateInput>
  }

  /**
   * tbl_professor createMany
   */
  export type tbl_professorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_professors.
     */
    data: tbl_professorCreateManyInput | tbl_professorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_professor update
   */
  export type tbl_professorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_professor.
     */
    data: XOR<tbl_professorUpdateInput, tbl_professorUncheckedUpdateInput>
    /**
     * Choose, which tbl_professor to update.
     */
    where: tbl_professorWhereUniqueInput
  }

  /**
   * tbl_professor updateMany
   */
  export type tbl_professorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_professors.
     */
    data: XOR<tbl_professorUpdateManyMutationInput, tbl_professorUncheckedUpdateManyInput>
    /**
     * Filter which tbl_professors to update
     */
    where?: tbl_professorWhereInput
  }

  /**
   * tbl_professor upsert
   */
  export type tbl_professorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_professor to update in case it exists.
     */
    where: tbl_professorWhereUniqueInput
    /**
     * In case the tbl_professor found by the `where` argument doesn't exist, create a new tbl_professor with this data.
     */
    create: XOR<tbl_professorCreateInput, tbl_professorUncheckedCreateInput>
    /**
     * In case the tbl_professor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_professorUpdateInput, tbl_professorUncheckedUpdateInput>
  }

  /**
   * tbl_professor delete
   */
  export type tbl_professorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
    /**
     * Filter which tbl_professor to delete.
     */
    where: tbl_professorWhereUniqueInput
  }

  /**
   * tbl_professor deleteMany
   */
  export type tbl_professorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_professors to delete
     */
    where?: tbl_professorWhereInput
  }

  /**
   * tbl_professor.tbl_prof_agenda
   */
  export type tbl_professor$tbl_prof_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    where?: tbl_prof_agendaWhereInput
    orderBy?: tbl_prof_agendaOrderByWithRelationInput | tbl_prof_agendaOrderByWithRelationInput[]
    cursor?: tbl_prof_agendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_prof_agendaScalarFieldEnum | Tbl_prof_agendaScalarFieldEnum[]
  }

  /**
   * tbl_professor.tbl_prof_disciplinas
   */
  export type tbl_professor$tbl_prof_disciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_disciplinas
     */
    select?: tbl_prof_disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_disciplinasInclude<ExtArgs> | null
    where?: tbl_prof_disciplinasWhereInput
    orderBy?: tbl_prof_disciplinasOrderByWithRelationInput | tbl_prof_disciplinasOrderByWithRelationInput[]
    cursor?: tbl_prof_disciplinasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_prof_disciplinasScalarFieldEnum | Tbl_prof_disciplinasScalarFieldEnum[]
  }

  /**
   * tbl_professor without action
   */
  export type tbl_professorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_professor
     */
    select?: tbl_professorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_professorInclude<ExtArgs> | null
  }


  /**
   * Model tbl_redacao
   */

  export type AggregateTbl_redacao = {
    _count: Tbl_redacaoCountAggregateOutputType | null
    _avg: Tbl_redacaoAvgAggregateOutputType | null
    _sum: Tbl_redacaoSumAggregateOutputType | null
    _min: Tbl_redacaoMinAggregateOutputType | null
    _max: Tbl_redacaoMaxAggregateOutputType | null
  }

  export type Tbl_redacaoAvgAggregateOutputType = {
    id: number | null
    tema_id: number | null
  }

  export type Tbl_redacaoSumAggregateOutputType = {
    id: number | null
    tema_id: number | null
  }

  export type Tbl_redacaoMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    texto: string | null
    tema_id: number | null
    status: boolean | null
  }

  export type Tbl_redacaoMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    texto: string | null
    tema_id: number | null
    status: boolean | null
  }

  export type Tbl_redacaoCountAggregateOutputType = {
    id: number
    titulo: number
    texto: number
    tema_id: number
    status: number
    _all: number
  }


  export type Tbl_redacaoAvgAggregateInputType = {
    id?: true
    tema_id?: true
  }

  export type Tbl_redacaoSumAggregateInputType = {
    id?: true
    tema_id?: true
  }

  export type Tbl_redacaoMinAggregateInputType = {
    id?: true
    titulo?: true
    texto?: true
    tema_id?: true
    status?: true
  }

  export type Tbl_redacaoMaxAggregateInputType = {
    id?: true
    titulo?: true
    texto?: true
    tema_id?: true
    status?: true
  }

  export type Tbl_redacaoCountAggregateInputType = {
    id?: true
    titulo?: true
    texto?: true
    tema_id?: true
    status?: true
    _all?: true
  }

  export type Tbl_redacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_redacao to aggregate.
     */
    where?: tbl_redacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_redacaos to fetch.
     */
    orderBy?: tbl_redacaoOrderByWithRelationInput | tbl_redacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_redacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_redacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_redacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_redacaos
    **/
    _count?: true | Tbl_redacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_redacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_redacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_redacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_redacaoMaxAggregateInputType
  }

  export type GetTbl_redacaoAggregateType<T extends Tbl_redacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_redacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_redacao[P]>
      : GetScalarType<T[P], AggregateTbl_redacao[P]>
  }




  export type tbl_redacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_redacaoWhereInput
    orderBy?: tbl_redacaoOrderByWithAggregationInput | tbl_redacaoOrderByWithAggregationInput[]
    by: Tbl_redacaoScalarFieldEnum[] | Tbl_redacaoScalarFieldEnum
    having?: tbl_redacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_redacaoCountAggregateInputType | true
    _avg?: Tbl_redacaoAvgAggregateInputType
    _sum?: Tbl_redacaoSumAggregateInputType
    _min?: Tbl_redacaoMinAggregateInputType
    _max?: Tbl_redacaoMaxAggregateInputType
  }

  export type Tbl_redacaoGroupByOutputType = {
    id: number
    titulo: string
    texto: string
    tema_id: number
    status: boolean | null
    _count: Tbl_redacaoCountAggregateOutputType | null
    _avg: Tbl_redacaoAvgAggregateOutputType | null
    _sum: Tbl_redacaoSumAggregateOutputType | null
    _min: Tbl_redacaoMinAggregateOutputType | null
    _max: Tbl_redacaoMaxAggregateOutputType | null
  }

  type GetTbl_redacaoGroupByPayload<T extends tbl_redacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_redacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_redacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_redacaoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_redacaoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_redacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    texto?: boolean
    tema_id?: boolean
    status?: boolean
    tbl_tema?: boolean | tbl_temaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_redacao"]>


  export type tbl_redacaoSelectScalar = {
    id?: boolean
    titulo?: boolean
    texto?: boolean
    tema_id?: boolean
    status?: boolean
  }

  export type tbl_redacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_tema?: boolean | tbl_temaDefaultArgs<ExtArgs>
  }

  export type $tbl_redacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_redacao"
    objects: {
      tbl_tema: Prisma.$tbl_temaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      texto: string
      tema_id: number
      status: boolean | null
    }, ExtArgs["result"]["tbl_redacao"]>
    composites: {}
  }

  type tbl_redacaoGetPayload<S extends boolean | null | undefined | tbl_redacaoDefaultArgs> = $Result.GetResult<Prisma.$tbl_redacaoPayload, S>

  type tbl_redacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_redacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_redacaoCountAggregateInputType | true
    }

  export interface tbl_redacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_redacao'], meta: { name: 'tbl_redacao' } }
    /**
     * Find zero or one Tbl_redacao that matches the filter.
     * @param {tbl_redacaoFindUniqueArgs} args - Arguments to find a Tbl_redacao
     * @example
     * // Get one Tbl_redacao
     * const tbl_redacao = await prisma.tbl_redacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_redacaoFindUniqueArgs>(args: SelectSubset<T, tbl_redacaoFindUniqueArgs<ExtArgs>>): Prisma__tbl_redacaoClient<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_redacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_redacaoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_redacao
     * @example
     * // Get one Tbl_redacao
     * const tbl_redacao = await prisma.tbl_redacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_redacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_redacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_redacaoClient<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_redacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_redacaoFindFirstArgs} args - Arguments to find a Tbl_redacao
     * @example
     * // Get one Tbl_redacao
     * const tbl_redacao = await prisma.tbl_redacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_redacaoFindFirstArgs>(args?: SelectSubset<T, tbl_redacaoFindFirstArgs<ExtArgs>>): Prisma__tbl_redacaoClient<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_redacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_redacaoFindFirstOrThrowArgs} args - Arguments to find a Tbl_redacao
     * @example
     * // Get one Tbl_redacao
     * const tbl_redacao = await prisma.tbl_redacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_redacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_redacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_redacaoClient<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_redacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_redacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_redacaos
     * const tbl_redacaos = await prisma.tbl_redacao.findMany()
     * 
     * // Get first 10 Tbl_redacaos
     * const tbl_redacaos = await prisma.tbl_redacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_redacaoWithIdOnly = await prisma.tbl_redacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_redacaoFindManyArgs>(args?: SelectSubset<T, tbl_redacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_redacao.
     * @param {tbl_redacaoCreateArgs} args - Arguments to create a Tbl_redacao.
     * @example
     * // Create one Tbl_redacao
     * const Tbl_redacao = await prisma.tbl_redacao.create({
     *   data: {
     *     // ... data to create a Tbl_redacao
     *   }
     * })
     * 
     */
    create<T extends tbl_redacaoCreateArgs>(args: SelectSubset<T, tbl_redacaoCreateArgs<ExtArgs>>): Prisma__tbl_redacaoClient<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_redacaos.
     * @param {tbl_redacaoCreateManyArgs} args - Arguments to create many Tbl_redacaos.
     * @example
     * // Create many Tbl_redacaos
     * const tbl_redacao = await prisma.tbl_redacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_redacaoCreateManyArgs>(args?: SelectSubset<T, tbl_redacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_redacao.
     * @param {tbl_redacaoDeleteArgs} args - Arguments to delete one Tbl_redacao.
     * @example
     * // Delete one Tbl_redacao
     * const Tbl_redacao = await prisma.tbl_redacao.delete({
     *   where: {
     *     // ... filter to delete one Tbl_redacao
     *   }
     * })
     * 
     */
    delete<T extends tbl_redacaoDeleteArgs>(args: SelectSubset<T, tbl_redacaoDeleteArgs<ExtArgs>>): Prisma__tbl_redacaoClient<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_redacao.
     * @param {tbl_redacaoUpdateArgs} args - Arguments to update one Tbl_redacao.
     * @example
     * // Update one Tbl_redacao
     * const tbl_redacao = await prisma.tbl_redacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_redacaoUpdateArgs>(args: SelectSubset<T, tbl_redacaoUpdateArgs<ExtArgs>>): Prisma__tbl_redacaoClient<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_redacaos.
     * @param {tbl_redacaoDeleteManyArgs} args - Arguments to filter Tbl_redacaos to delete.
     * @example
     * // Delete a few Tbl_redacaos
     * const { count } = await prisma.tbl_redacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_redacaoDeleteManyArgs>(args?: SelectSubset<T, tbl_redacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_redacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_redacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_redacaos
     * const tbl_redacao = await prisma.tbl_redacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_redacaoUpdateManyArgs>(args: SelectSubset<T, tbl_redacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_redacao.
     * @param {tbl_redacaoUpsertArgs} args - Arguments to update or create a Tbl_redacao.
     * @example
     * // Update or create a Tbl_redacao
     * const tbl_redacao = await prisma.tbl_redacao.upsert({
     *   create: {
     *     // ... data to create a Tbl_redacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_redacao we want to update
     *   }
     * })
     */
    upsert<T extends tbl_redacaoUpsertArgs>(args: SelectSubset<T, tbl_redacaoUpsertArgs<ExtArgs>>): Prisma__tbl_redacaoClient<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_redacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_redacaoCountArgs} args - Arguments to filter Tbl_redacaos to count.
     * @example
     * // Count the number of Tbl_redacaos
     * const count = await prisma.tbl_redacao.count({
     *   where: {
     *     // ... the filter for the Tbl_redacaos we want to count
     *   }
     * })
    **/
    count<T extends tbl_redacaoCountArgs>(
      args?: Subset<T, tbl_redacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_redacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_redacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_redacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_redacaoAggregateArgs>(args: Subset<T, Tbl_redacaoAggregateArgs>): Prisma.PrismaPromise<GetTbl_redacaoAggregateType<T>>

    /**
     * Group by Tbl_redacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_redacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_redacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_redacaoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_redacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_redacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_redacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_redacao model
   */
  readonly fields: tbl_redacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_redacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_redacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_tema<T extends tbl_temaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_temaDefaultArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_redacao model
   */ 
  interface tbl_redacaoFieldRefs {
    readonly id: FieldRef<"tbl_redacao", 'Int'>
    readonly titulo: FieldRef<"tbl_redacao", 'String'>
    readonly texto: FieldRef<"tbl_redacao", 'String'>
    readonly tema_id: FieldRef<"tbl_redacao", 'Int'>
    readonly status: FieldRef<"tbl_redacao", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_redacao findUnique
   */
  export type tbl_redacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_redacao to fetch.
     */
    where: tbl_redacaoWhereUniqueInput
  }

  /**
   * tbl_redacao findUniqueOrThrow
   */
  export type tbl_redacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_redacao to fetch.
     */
    where: tbl_redacaoWhereUniqueInput
  }

  /**
   * tbl_redacao findFirst
   */
  export type tbl_redacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_redacao to fetch.
     */
    where?: tbl_redacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_redacaos to fetch.
     */
    orderBy?: tbl_redacaoOrderByWithRelationInput | tbl_redacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_redacaos.
     */
    cursor?: tbl_redacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_redacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_redacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_redacaos.
     */
    distinct?: Tbl_redacaoScalarFieldEnum | Tbl_redacaoScalarFieldEnum[]
  }

  /**
   * tbl_redacao findFirstOrThrow
   */
  export type tbl_redacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_redacao to fetch.
     */
    where?: tbl_redacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_redacaos to fetch.
     */
    orderBy?: tbl_redacaoOrderByWithRelationInput | tbl_redacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_redacaos.
     */
    cursor?: tbl_redacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_redacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_redacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_redacaos.
     */
    distinct?: Tbl_redacaoScalarFieldEnum | Tbl_redacaoScalarFieldEnum[]
  }

  /**
   * tbl_redacao findMany
   */
  export type tbl_redacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_redacaos to fetch.
     */
    where?: tbl_redacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_redacaos to fetch.
     */
    orderBy?: tbl_redacaoOrderByWithRelationInput | tbl_redacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_redacaos.
     */
    cursor?: tbl_redacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_redacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_redacaos.
     */
    skip?: number
    distinct?: Tbl_redacaoScalarFieldEnum | Tbl_redacaoScalarFieldEnum[]
  }

  /**
   * tbl_redacao create
   */
  export type tbl_redacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_redacao.
     */
    data: XOR<tbl_redacaoCreateInput, tbl_redacaoUncheckedCreateInput>
  }

  /**
   * tbl_redacao createMany
   */
  export type tbl_redacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_redacaos.
     */
    data: tbl_redacaoCreateManyInput | tbl_redacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_redacao update
   */
  export type tbl_redacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_redacao.
     */
    data: XOR<tbl_redacaoUpdateInput, tbl_redacaoUncheckedUpdateInput>
    /**
     * Choose, which tbl_redacao to update.
     */
    where: tbl_redacaoWhereUniqueInput
  }

  /**
   * tbl_redacao updateMany
   */
  export type tbl_redacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_redacaos.
     */
    data: XOR<tbl_redacaoUpdateManyMutationInput, tbl_redacaoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_redacaos to update
     */
    where?: tbl_redacaoWhereInput
  }

  /**
   * tbl_redacao upsert
   */
  export type tbl_redacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_redacao to update in case it exists.
     */
    where: tbl_redacaoWhereUniqueInput
    /**
     * In case the tbl_redacao found by the `where` argument doesn't exist, create a new tbl_redacao with this data.
     */
    create: XOR<tbl_redacaoCreateInput, tbl_redacaoUncheckedCreateInput>
    /**
     * In case the tbl_redacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_redacaoUpdateInput, tbl_redacaoUncheckedUpdateInput>
  }

  /**
   * tbl_redacao delete
   */
  export type tbl_redacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    /**
     * Filter which tbl_redacao to delete.
     */
    where: tbl_redacaoWhereUniqueInput
  }

  /**
   * tbl_redacao deleteMany
   */
  export type tbl_redacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_redacaos to delete
     */
    where?: tbl_redacaoWhereInput
  }

  /**
   * tbl_redacao without action
   */
  export type tbl_redacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_semana
   */

  export type AggregateTbl_semana = {
    _count: Tbl_semanaCountAggregateOutputType | null
    _avg: Tbl_semanaAvgAggregateOutputType | null
    _sum: Tbl_semanaSumAggregateOutputType | null
    _min: Tbl_semanaMinAggregateOutputType | null
    _max: Tbl_semanaMaxAggregateOutputType | null
  }

  export type Tbl_semanaAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_semanaSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_semanaMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_semanaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_semanaCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tbl_semanaAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_semanaSumAggregateInputType = {
    id?: true
  }

  export type Tbl_semanaMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_semanaMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_semanaCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tbl_semanaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_semana to aggregate.
     */
    where?: tbl_semanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_semanas to fetch.
     */
    orderBy?: tbl_semanaOrderByWithRelationInput | tbl_semanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_semanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_semanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_semanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_semanas
    **/
    _count?: true | Tbl_semanaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_semanaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_semanaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_semanaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_semanaMaxAggregateInputType
  }

  export type GetTbl_semanaAggregateType<T extends Tbl_semanaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_semana]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_semana[P]>
      : GetScalarType<T[P], AggregateTbl_semana[P]>
  }




  export type tbl_semanaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_semanaWhereInput
    orderBy?: tbl_semanaOrderByWithAggregationInput | tbl_semanaOrderByWithAggregationInput[]
    by: Tbl_semanaScalarFieldEnum[] | Tbl_semanaScalarFieldEnum
    having?: tbl_semanaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_semanaCountAggregateInputType | true
    _avg?: Tbl_semanaAvgAggregateInputType
    _sum?: Tbl_semanaSumAggregateInputType
    _min?: Tbl_semanaMinAggregateInputType
    _max?: Tbl_semanaMaxAggregateInputType
  }

  export type Tbl_semanaGroupByOutputType = {
    id: number
    nome: string
    _count: Tbl_semanaCountAggregateOutputType | null
    _avg: Tbl_semanaAvgAggregateOutputType | null
    _sum: Tbl_semanaSumAggregateOutputType | null
    _min: Tbl_semanaMinAggregateOutputType | null
    _max: Tbl_semanaMaxAggregateOutputType | null
  }

  type GetTbl_semanaGroupByPayload<T extends tbl_semanaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_semanaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_semanaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_semanaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_semanaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_semanaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tbl_aluno_agenda?: boolean | tbl_semana$tbl_aluno_agendaArgs<ExtArgs>
    tbl_prof_agenda?: boolean | tbl_semana$tbl_prof_agendaArgs<ExtArgs>
    _count?: boolean | Tbl_semanaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_semana"]>


  export type tbl_semanaSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type tbl_semanaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_aluno_agenda?: boolean | tbl_semana$tbl_aluno_agendaArgs<ExtArgs>
    tbl_prof_agenda?: boolean | tbl_semana$tbl_prof_agendaArgs<ExtArgs>
    _count?: boolean | Tbl_semanaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_semanaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_semana"
    objects: {
      tbl_aluno_agenda: Prisma.$tbl_aluno_agendaPayload<ExtArgs>[]
      tbl_prof_agenda: Prisma.$tbl_prof_agendaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["tbl_semana"]>
    composites: {}
  }

  type tbl_semanaGetPayload<S extends boolean | null | undefined | tbl_semanaDefaultArgs> = $Result.GetResult<Prisma.$tbl_semanaPayload, S>

  type tbl_semanaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_semanaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_semanaCountAggregateInputType | true
    }

  export interface tbl_semanaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_semana'], meta: { name: 'tbl_semana' } }
    /**
     * Find zero or one Tbl_semana that matches the filter.
     * @param {tbl_semanaFindUniqueArgs} args - Arguments to find a Tbl_semana
     * @example
     * // Get one Tbl_semana
     * const tbl_semana = await prisma.tbl_semana.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_semanaFindUniqueArgs>(args: SelectSubset<T, tbl_semanaFindUniqueArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_semana that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_semanaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_semana
     * @example
     * // Get one Tbl_semana
     * const tbl_semana = await prisma.tbl_semana.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_semanaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_semanaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_semana that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_semanaFindFirstArgs} args - Arguments to find a Tbl_semana
     * @example
     * // Get one Tbl_semana
     * const tbl_semana = await prisma.tbl_semana.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_semanaFindFirstArgs>(args?: SelectSubset<T, tbl_semanaFindFirstArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_semana that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_semanaFindFirstOrThrowArgs} args - Arguments to find a Tbl_semana
     * @example
     * // Get one Tbl_semana
     * const tbl_semana = await prisma.tbl_semana.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_semanaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_semanaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_semanas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_semanaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_semanas
     * const tbl_semanas = await prisma.tbl_semana.findMany()
     * 
     * // Get first 10 Tbl_semanas
     * const tbl_semanas = await prisma.tbl_semana.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_semanaWithIdOnly = await prisma.tbl_semana.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_semanaFindManyArgs>(args?: SelectSubset<T, tbl_semanaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_semana.
     * @param {tbl_semanaCreateArgs} args - Arguments to create a Tbl_semana.
     * @example
     * // Create one Tbl_semana
     * const Tbl_semana = await prisma.tbl_semana.create({
     *   data: {
     *     // ... data to create a Tbl_semana
     *   }
     * })
     * 
     */
    create<T extends tbl_semanaCreateArgs>(args: SelectSubset<T, tbl_semanaCreateArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_semanas.
     * @param {tbl_semanaCreateManyArgs} args - Arguments to create many Tbl_semanas.
     * @example
     * // Create many Tbl_semanas
     * const tbl_semana = await prisma.tbl_semana.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_semanaCreateManyArgs>(args?: SelectSubset<T, tbl_semanaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_semana.
     * @param {tbl_semanaDeleteArgs} args - Arguments to delete one Tbl_semana.
     * @example
     * // Delete one Tbl_semana
     * const Tbl_semana = await prisma.tbl_semana.delete({
     *   where: {
     *     // ... filter to delete one Tbl_semana
     *   }
     * })
     * 
     */
    delete<T extends tbl_semanaDeleteArgs>(args: SelectSubset<T, tbl_semanaDeleteArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_semana.
     * @param {tbl_semanaUpdateArgs} args - Arguments to update one Tbl_semana.
     * @example
     * // Update one Tbl_semana
     * const tbl_semana = await prisma.tbl_semana.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_semanaUpdateArgs>(args: SelectSubset<T, tbl_semanaUpdateArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_semanas.
     * @param {tbl_semanaDeleteManyArgs} args - Arguments to filter Tbl_semanas to delete.
     * @example
     * // Delete a few Tbl_semanas
     * const { count } = await prisma.tbl_semana.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_semanaDeleteManyArgs>(args?: SelectSubset<T, tbl_semanaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_semanas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_semanaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_semanas
     * const tbl_semana = await prisma.tbl_semana.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_semanaUpdateManyArgs>(args: SelectSubset<T, tbl_semanaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_semana.
     * @param {tbl_semanaUpsertArgs} args - Arguments to update or create a Tbl_semana.
     * @example
     * // Update or create a Tbl_semana
     * const tbl_semana = await prisma.tbl_semana.upsert({
     *   create: {
     *     // ... data to create a Tbl_semana
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_semana we want to update
     *   }
     * })
     */
    upsert<T extends tbl_semanaUpsertArgs>(args: SelectSubset<T, tbl_semanaUpsertArgs<ExtArgs>>): Prisma__tbl_semanaClient<$Result.GetResult<Prisma.$tbl_semanaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_semanas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_semanaCountArgs} args - Arguments to filter Tbl_semanas to count.
     * @example
     * // Count the number of Tbl_semanas
     * const count = await prisma.tbl_semana.count({
     *   where: {
     *     // ... the filter for the Tbl_semanas we want to count
     *   }
     * })
    **/
    count<T extends tbl_semanaCountArgs>(
      args?: Subset<T, tbl_semanaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_semanaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_semana.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_semanaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_semanaAggregateArgs>(args: Subset<T, Tbl_semanaAggregateArgs>): Prisma.PrismaPromise<GetTbl_semanaAggregateType<T>>

    /**
     * Group by Tbl_semana.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_semanaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_semanaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_semanaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_semanaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_semanaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_semanaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_semana model
   */
  readonly fields: tbl_semanaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_semana.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_semanaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_aluno_agenda<T extends tbl_semana$tbl_aluno_agendaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_semana$tbl_aluno_agendaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_aluno_agendaPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_prof_agenda<T extends tbl_semana$tbl_prof_agendaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_semana$tbl_prof_agendaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_prof_agendaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_semana model
   */ 
  interface tbl_semanaFieldRefs {
    readonly id: FieldRef<"tbl_semana", 'Int'>
    readonly nome: FieldRef<"tbl_semana", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_semana findUnique
   */
  export type tbl_semanaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_semana to fetch.
     */
    where: tbl_semanaWhereUniqueInput
  }

  /**
   * tbl_semana findUniqueOrThrow
   */
  export type tbl_semanaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_semana to fetch.
     */
    where: tbl_semanaWhereUniqueInput
  }

  /**
   * tbl_semana findFirst
   */
  export type tbl_semanaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_semana to fetch.
     */
    where?: tbl_semanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_semanas to fetch.
     */
    orderBy?: tbl_semanaOrderByWithRelationInput | tbl_semanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_semanas.
     */
    cursor?: tbl_semanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_semanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_semanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_semanas.
     */
    distinct?: Tbl_semanaScalarFieldEnum | Tbl_semanaScalarFieldEnum[]
  }

  /**
   * tbl_semana findFirstOrThrow
   */
  export type tbl_semanaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_semana to fetch.
     */
    where?: tbl_semanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_semanas to fetch.
     */
    orderBy?: tbl_semanaOrderByWithRelationInput | tbl_semanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_semanas.
     */
    cursor?: tbl_semanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_semanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_semanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_semanas.
     */
    distinct?: Tbl_semanaScalarFieldEnum | Tbl_semanaScalarFieldEnum[]
  }

  /**
   * tbl_semana findMany
   */
  export type tbl_semanaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_semanas to fetch.
     */
    where?: tbl_semanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_semanas to fetch.
     */
    orderBy?: tbl_semanaOrderByWithRelationInput | tbl_semanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_semanas.
     */
    cursor?: tbl_semanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_semanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_semanas.
     */
    skip?: number
    distinct?: Tbl_semanaScalarFieldEnum | Tbl_semanaScalarFieldEnum[]
  }

  /**
   * tbl_semana create
   */
  export type tbl_semanaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_semana.
     */
    data: XOR<tbl_semanaCreateInput, tbl_semanaUncheckedCreateInput>
  }

  /**
   * tbl_semana createMany
   */
  export type tbl_semanaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_semanas.
     */
    data: tbl_semanaCreateManyInput | tbl_semanaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_semana update
   */
  export type tbl_semanaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_semana.
     */
    data: XOR<tbl_semanaUpdateInput, tbl_semanaUncheckedUpdateInput>
    /**
     * Choose, which tbl_semana to update.
     */
    where: tbl_semanaWhereUniqueInput
  }

  /**
   * tbl_semana updateMany
   */
  export type tbl_semanaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_semanas.
     */
    data: XOR<tbl_semanaUpdateManyMutationInput, tbl_semanaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_semanas to update
     */
    where?: tbl_semanaWhereInput
  }

  /**
   * tbl_semana upsert
   */
  export type tbl_semanaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_semana to update in case it exists.
     */
    where: tbl_semanaWhereUniqueInput
    /**
     * In case the tbl_semana found by the `where` argument doesn't exist, create a new tbl_semana with this data.
     */
    create: XOR<tbl_semanaCreateInput, tbl_semanaUncheckedCreateInput>
    /**
     * In case the tbl_semana was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_semanaUpdateInput, tbl_semanaUncheckedUpdateInput>
  }

  /**
   * tbl_semana delete
   */
  export type tbl_semanaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
    /**
     * Filter which tbl_semana to delete.
     */
    where: tbl_semanaWhereUniqueInput
  }

  /**
   * tbl_semana deleteMany
   */
  export type tbl_semanaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_semanas to delete
     */
    where?: tbl_semanaWhereInput
  }

  /**
   * tbl_semana.tbl_aluno_agenda
   */
  export type tbl_semana$tbl_aluno_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_aluno_agenda
     */
    select?: tbl_aluno_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_aluno_agendaInclude<ExtArgs> | null
    where?: tbl_aluno_agendaWhereInput
    orderBy?: tbl_aluno_agendaOrderByWithRelationInput | tbl_aluno_agendaOrderByWithRelationInput[]
    cursor?: tbl_aluno_agendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_aluno_agendaScalarFieldEnum | Tbl_aluno_agendaScalarFieldEnum[]
  }

  /**
   * tbl_semana.tbl_prof_agenda
   */
  export type tbl_semana$tbl_prof_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_prof_agenda
     */
    select?: tbl_prof_agendaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_prof_agendaInclude<ExtArgs> | null
    where?: tbl_prof_agendaWhereInput
    orderBy?: tbl_prof_agendaOrderByWithRelationInput | tbl_prof_agendaOrderByWithRelationInput[]
    cursor?: tbl_prof_agendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_prof_agendaScalarFieldEnum | Tbl_prof_agendaScalarFieldEnum[]
  }

  /**
   * tbl_semana without action
   */
  export type tbl_semanaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_semana
     */
    select?: tbl_semanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_semanaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_tema
   */

  export type AggregateTbl_tema = {
    _count: Tbl_temaCountAggregateOutputType | null
    _avg: Tbl_temaAvgAggregateOutputType | null
    _sum: Tbl_temaSumAggregateOutputType | null
    _min: Tbl_temaMinAggregateOutputType | null
    _max: Tbl_temaMaxAggregateOutputType | null
  }

  export type Tbl_temaAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_temaSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_temaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
  }

  export type Tbl_temaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
  }

  export type Tbl_temaCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    _all: number
  }


  export type Tbl_temaAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_temaSumAggregateInputType = {
    id?: true
  }

  export type Tbl_temaMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
  }

  export type Tbl_temaMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
  }

  export type Tbl_temaCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    _all?: true
  }

  export type Tbl_temaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_tema to aggregate.
     */
    where?: tbl_temaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_temas to fetch.
     */
    orderBy?: tbl_temaOrderByWithRelationInput | tbl_temaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_temaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_temas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_temas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_temas
    **/
    _count?: true | Tbl_temaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_temaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_temaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_temaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_temaMaxAggregateInputType
  }

  export type GetTbl_temaAggregateType<T extends Tbl_temaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_tema]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_tema[P]>
      : GetScalarType<T[P], AggregateTbl_tema[P]>
  }




  export type tbl_temaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_temaWhereInput
    orderBy?: tbl_temaOrderByWithAggregationInput | tbl_temaOrderByWithAggregationInput[]
    by: Tbl_temaScalarFieldEnum[] | Tbl_temaScalarFieldEnum
    having?: tbl_temaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_temaCountAggregateInputType | true
    _avg?: Tbl_temaAvgAggregateInputType
    _sum?: Tbl_temaSumAggregateInputType
    _min?: Tbl_temaMinAggregateInputType
    _max?: Tbl_temaMaxAggregateInputType
  }

  export type Tbl_temaGroupByOutputType = {
    id: number
    nome: string
    descricao: string
    _count: Tbl_temaCountAggregateOutputType | null
    _avg: Tbl_temaAvgAggregateOutputType | null
    _sum: Tbl_temaSumAggregateOutputType | null
    _min: Tbl_temaMinAggregateOutputType | null
    _max: Tbl_temaMaxAggregateOutputType | null
  }

  type GetTbl_temaGroupByPayload<T extends tbl_temaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_temaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_temaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_temaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_temaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_temaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    tbl_redacao?: boolean | tbl_tema$tbl_redacaoArgs<ExtArgs>
    _count?: boolean | Tbl_temaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_tema"]>


  export type tbl_temaSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
  }

  export type tbl_temaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_redacao?: boolean | tbl_tema$tbl_redacaoArgs<ExtArgs>
    _count?: boolean | Tbl_temaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_temaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_tema"
    objects: {
      tbl_redacao: Prisma.$tbl_redacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      descricao: string
    }, ExtArgs["result"]["tbl_tema"]>
    composites: {}
  }

  type tbl_temaGetPayload<S extends boolean | null | undefined | tbl_temaDefaultArgs> = $Result.GetResult<Prisma.$tbl_temaPayload, S>

  type tbl_temaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_temaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_temaCountAggregateInputType | true
    }

  export interface tbl_temaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_tema'], meta: { name: 'tbl_tema' } }
    /**
     * Find zero or one Tbl_tema that matches the filter.
     * @param {tbl_temaFindUniqueArgs} args - Arguments to find a Tbl_tema
     * @example
     * // Get one Tbl_tema
     * const tbl_tema = await prisma.tbl_tema.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_temaFindUniqueArgs>(args: SelectSubset<T, tbl_temaFindUniqueArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_tema that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_temaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_tema
     * @example
     * // Get one Tbl_tema
     * const tbl_tema = await prisma.tbl_tema.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_temaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_temaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_tema that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_temaFindFirstArgs} args - Arguments to find a Tbl_tema
     * @example
     * // Get one Tbl_tema
     * const tbl_tema = await prisma.tbl_tema.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_temaFindFirstArgs>(args?: SelectSubset<T, tbl_temaFindFirstArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_tema that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_temaFindFirstOrThrowArgs} args - Arguments to find a Tbl_tema
     * @example
     * // Get one Tbl_tema
     * const tbl_tema = await prisma.tbl_tema.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_temaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_temaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_temas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_temaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_temas
     * const tbl_temas = await prisma.tbl_tema.findMany()
     * 
     * // Get first 10 Tbl_temas
     * const tbl_temas = await prisma.tbl_tema.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_temaWithIdOnly = await prisma.tbl_tema.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_temaFindManyArgs>(args?: SelectSubset<T, tbl_temaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_tema.
     * @param {tbl_temaCreateArgs} args - Arguments to create a Tbl_tema.
     * @example
     * // Create one Tbl_tema
     * const Tbl_tema = await prisma.tbl_tema.create({
     *   data: {
     *     // ... data to create a Tbl_tema
     *   }
     * })
     * 
     */
    create<T extends tbl_temaCreateArgs>(args: SelectSubset<T, tbl_temaCreateArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_temas.
     * @param {tbl_temaCreateManyArgs} args - Arguments to create many Tbl_temas.
     * @example
     * // Create many Tbl_temas
     * const tbl_tema = await prisma.tbl_tema.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_temaCreateManyArgs>(args?: SelectSubset<T, tbl_temaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_tema.
     * @param {tbl_temaDeleteArgs} args - Arguments to delete one Tbl_tema.
     * @example
     * // Delete one Tbl_tema
     * const Tbl_tema = await prisma.tbl_tema.delete({
     *   where: {
     *     // ... filter to delete one Tbl_tema
     *   }
     * })
     * 
     */
    delete<T extends tbl_temaDeleteArgs>(args: SelectSubset<T, tbl_temaDeleteArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_tema.
     * @param {tbl_temaUpdateArgs} args - Arguments to update one Tbl_tema.
     * @example
     * // Update one Tbl_tema
     * const tbl_tema = await prisma.tbl_tema.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_temaUpdateArgs>(args: SelectSubset<T, tbl_temaUpdateArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_temas.
     * @param {tbl_temaDeleteManyArgs} args - Arguments to filter Tbl_temas to delete.
     * @example
     * // Delete a few Tbl_temas
     * const { count } = await prisma.tbl_tema.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_temaDeleteManyArgs>(args?: SelectSubset<T, tbl_temaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_temas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_temaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_temas
     * const tbl_tema = await prisma.tbl_tema.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_temaUpdateManyArgs>(args: SelectSubset<T, tbl_temaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_tema.
     * @param {tbl_temaUpsertArgs} args - Arguments to update or create a Tbl_tema.
     * @example
     * // Update or create a Tbl_tema
     * const tbl_tema = await prisma.tbl_tema.upsert({
     *   create: {
     *     // ... data to create a Tbl_tema
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_tema we want to update
     *   }
     * })
     */
    upsert<T extends tbl_temaUpsertArgs>(args: SelectSubset<T, tbl_temaUpsertArgs<ExtArgs>>): Prisma__tbl_temaClient<$Result.GetResult<Prisma.$tbl_temaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_temas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_temaCountArgs} args - Arguments to filter Tbl_temas to count.
     * @example
     * // Count the number of Tbl_temas
     * const count = await prisma.tbl_tema.count({
     *   where: {
     *     // ... the filter for the Tbl_temas we want to count
     *   }
     * })
    **/
    count<T extends tbl_temaCountArgs>(
      args?: Subset<T, tbl_temaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_temaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_tema.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_temaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_temaAggregateArgs>(args: Subset<T, Tbl_temaAggregateArgs>): Prisma.PrismaPromise<GetTbl_temaAggregateType<T>>

    /**
     * Group by Tbl_tema.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_temaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_temaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_temaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_temaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_temaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_temaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_tema model
   */
  readonly fields: tbl_temaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_tema.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_temaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_redacao<T extends tbl_tema$tbl_redacaoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_tema$tbl_redacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_redacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_tema model
   */ 
  interface tbl_temaFieldRefs {
    readonly id: FieldRef<"tbl_tema", 'Int'>
    readonly nome: FieldRef<"tbl_tema", 'String'>
    readonly descricao: FieldRef<"tbl_tema", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_tema findUnique
   */
  export type tbl_temaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_tema to fetch.
     */
    where: tbl_temaWhereUniqueInput
  }

  /**
   * tbl_tema findUniqueOrThrow
   */
  export type tbl_temaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_tema to fetch.
     */
    where: tbl_temaWhereUniqueInput
  }

  /**
   * tbl_tema findFirst
   */
  export type tbl_temaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_tema to fetch.
     */
    where?: tbl_temaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_temas to fetch.
     */
    orderBy?: tbl_temaOrderByWithRelationInput | tbl_temaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_temas.
     */
    cursor?: tbl_temaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_temas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_temas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_temas.
     */
    distinct?: Tbl_temaScalarFieldEnum | Tbl_temaScalarFieldEnum[]
  }

  /**
   * tbl_tema findFirstOrThrow
   */
  export type tbl_temaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_tema to fetch.
     */
    where?: tbl_temaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_temas to fetch.
     */
    orderBy?: tbl_temaOrderByWithRelationInput | tbl_temaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_temas.
     */
    cursor?: tbl_temaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_temas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_temas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_temas.
     */
    distinct?: Tbl_temaScalarFieldEnum | Tbl_temaScalarFieldEnum[]
  }

  /**
   * tbl_tema findMany
   */
  export type tbl_temaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_temas to fetch.
     */
    where?: tbl_temaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_temas to fetch.
     */
    orderBy?: tbl_temaOrderByWithRelationInput | tbl_temaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_temas.
     */
    cursor?: tbl_temaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_temas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_temas.
     */
    skip?: number
    distinct?: Tbl_temaScalarFieldEnum | Tbl_temaScalarFieldEnum[]
  }

  /**
   * tbl_tema create
   */
  export type tbl_temaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_tema.
     */
    data: XOR<tbl_temaCreateInput, tbl_temaUncheckedCreateInput>
  }

  /**
   * tbl_tema createMany
   */
  export type tbl_temaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_temas.
     */
    data: tbl_temaCreateManyInput | tbl_temaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_tema update
   */
  export type tbl_temaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_tema.
     */
    data: XOR<tbl_temaUpdateInput, tbl_temaUncheckedUpdateInput>
    /**
     * Choose, which tbl_tema to update.
     */
    where: tbl_temaWhereUniqueInput
  }

  /**
   * tbl_tema updateMany
   */
  export type tbl_temaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_temas.
     */
    data: XOR<tbl_temaUpdateManyMutationInput, tbl_temaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_temas to update
     */
    where?: tbl_temaWhereInput
  }

  /**
   * tbl_tema upsert
   */
  export type tbl_temaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_tema to update in case it exists.
     */
    where: tbl_temaWhereUniqueInput
    /**
     * In case the tbl_tema found by the `where` argument doesn't exist, create a new tbl_tema with this data.
     */
    create: XOR<tbl_temaCreateInput, tbl_temaUncheckedCreateInput>
    /**
     * In case the tbl_tema was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_temaUpdateInput, tbl_temaUncheckedUpdateInput>
  }

  /**
   * tbl_tema delete
   */
  export type tbl_temaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
    /**
     * Filter which tbl_tema to delete.
     */
    where: tbl_temaWhereUniqueInput
  }

  /**
   * tbl_tema deleteMany
   */
  export type tbl_temaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_temas to delete
     */
    where?: tbl_temaWhereInput
  }

  /**
   * tbl_tema.tbl_redacao
   */
  export type tbl_tema$tbl_redacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_redacao
     */
    select?: tbl_redacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_redacaoInclude<ExtArgs> | null
    where?: tbl_redacaoWhereInput
    orderBy?: tbl_redacaoOrderByWithRelationInput | tbl_redacaoOrderByWithRelationInput[]
    cursor?: tbl_redacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_redacaoScalarFieldEnum | Tbl_redacaoScalarFieldEnum[]
  }

  /**
   * tbl_tema without action
   */
  export type tbl_temaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_tema
     */
    select?: tbl_temaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_temaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_topicos
   */

  export type AggregateTbl_topicos = {
    _count: Tbl_topicosCountAggregateOutputType | null
    _avg: Tbl_topicosAvgAggregateOutputType | null
    _sum: Tbl_topicosSumAggregateOutputType | null
    _min: Tbl_topicosMinAggregateOutputType | null
    _max: Tbl_topicosMaxAggregateOutputType | null
  }

  export type Tbl_topicosAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_topicosSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_topicosMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_topicosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_topicosCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tbl_topicosAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_topicosSumAggregateInputType = {
    id?: true
  }

  export type Tbl_topicosMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_topicosMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_topicosCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tbl_topicosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_topicos to aggregate.
     */
    where?: tbl_topicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_topicos to fetch.
     */
    orderBy?: tbl_topicosOrderByWithRelationInput | tbl_topicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_topicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_topicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_topicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_topicos
    **/
    _count?: true | Tbl_topicosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_topicosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_topicosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_topicosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_topicosMaxAggregateInputType
  }

  export type GetTbl_topicosAggregateType<T extends Tbl_topicosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_topicos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_topicos[P]>
      : GetScalarType<T[P], AggregateTbl_topicos[P]>
  }




  export type tbl_topicosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_topicosWhereInput
    orderBy?: tbl_topicosOrderByWithAggregationInput | tbl_topicosOrderByWithAggregationInput[]
    by: Tbl_topicosScalarFieldEnum[] | Tbl_topicosScalarFieldEnum
    having?: tbl_topicosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_topicosCountAggregateInputType | true
    _avg?: Tbl_topicosAvgAggregateInputType
    _sum?: Tbl_topicosSumAggregateInputType
    _min?: Tbl_topicosMinAggregateInputType
    _max?: Tbl_topicosMaxAggregateInputType
  }

  export type Tbl_topicosGroupByOutputType = {
    id: number
    nome: string
    _count: Tbl_topicosCountAggregateOutputType | null
    _avg: Tbl_topicosAvgAggregateOutputType | null
    _sum: Tbl_topicosSumAggregateOutputType | null
    _min: Tbl_topicosMinAggregateOutputType | null
    _max: Tbl_topicosMaxAggregateOutputType | null
  }

  type GetTbl_topicosGroupByPayload<T extends tbl_topicosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_topicosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_topicosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_topicosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_topicosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_topicosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tbl_disciplina_topico?: boolean | tbl_topicos$tbl_disciplina_topicoArgs<ExtArgs>
    tbl_videoaulas?: boolean | tbl_topicos$tbl_videoaulasArgs<ExtArgs>
    _count?: boolean | Tbl_topicosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_topicos"]>


  export type tbl_topicosSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type tbl_topicosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_disciplina_topico?: boolean | tbl_topicos$tbl_disciplina_topicoArgs<ExtArgs>
    tbl_videoaulas?: boolean | tbl_topicos$tbl_videoaulasArgs<ExtArgs>
    _count?: boolean | Tbl_topicosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_topicosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_topicos"
    objects: {
      tbl_disciplina_topico: Prisma.$tbl_disciplina_topicoPayload<ExtArgs>[]
      tbl_videoaulas: Prisma.$tbl_videoaulasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["tbl_topicos"]>
    composites: {}
  }

  type tbl_topicosGetPayload<S extends boolean | null | undefined | tbl_topicosDefaultArgs> = $Result.GetResult<Prisma.$tbl_topicosPayload, S>

  type tbl_topicosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_topicosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_topicosCountAggregateInputType | true
    }

  export interface tbl_topicosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_topicos'], meta: { name: 'tbl_topicos' } }
    /**
     * Find zero or one Tbl_topicos that matches the filter.
     * @param {tbl_topicosFindUniqueArgs} args - Arguments to find a Tbl_topicos
     * @example
     * // Get one Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_topicosFindUniqueArgs>(args: SelectSubset<T, tbl_topicosFindUniqueArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_topicos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_topicosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_topicos
     * @example
     * // Get one Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_topicosFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_topicosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_topicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_topicosFindFirstArgs} args - Arguments to find a Tbl_topicos
     * @example
     * // Get one Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_topicosFindFirstArgs>(args?: SelectSubset<T, tbl_topicosFindFirstArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_topicos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_topicosFindFirstOrThrowArgs} args - Arguments to find a Tbl_topicos
     * @example
     * // Get one Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_topicosFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_topicosFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_topicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_topicosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.findMany()
     * 
     * // Get first 10 Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_topicosWithIdOnly = await prisma.tbl_topicos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_topicosFindManyArgs>(args?: SelectSubset<T, tbl_topicosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_topicos.
     * @param {tbl_topicosCreateArgs} args - Arguments to create a Tbl_topicos.
     * @example
     * // Create one Tbl_topicos
     * const Tbl_topicos = await prisma.tbl_topicos.create({
     *   data: {
     *     // ... data to create a Tbl_topicos
     *   }
     * })
     * 
     */
    create<T extends tbl_topicosCreateArgs>(args: SelectSubset<T, tbl_topicosCreateArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_topicos.
     * @param {tbl_topicosCreateManyArgs} args - Arguments to create many Tbl_topicos.
     * @example
     * // Create many Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_topicosCreateManyArgs>(args?: SelectSubset<T, tbl_topicosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_topicos.
     * @param {tbl_topicosDeleteArgs} args - Arguments to delete one Tbl_topicos.
     * @example
     * // Delete one Tbl_topicos
     * const Tbl_topicos = await prisma.tbl_topicos.delete({
     *   where: {
     *     // ... filter to delete one Tbl_topicos
     *   }
     * })
     * 
     */
    delete<T extends tbl_topicosDeleteArgs>(args: SelectSubset<T, tbl_topicosDeleteArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_topicos.
     * @param {tbl_topicosUpdateArgs} args - Arguments to update one Tbl_topicos.
     * @example
     * // Update one Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_topicosUpdateArgs>(args: SelectSubset<T, tbl_topicosUpdateArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_topicos.
     * @param {tbl_topicosDeleteManyArgs} args - Arguments to filter Tbl_topicos to delete.
     * @example
     * // Delete a few Tbl_topicos
     * const { count } = await prisma.tbl_topicos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_topicosDeleteManyArgs>(args?: SelectSubset<T, tbl_topicosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_topicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_topicosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_topicosUpdateManyArgs>(args: SelectSubset<T, tbl_topicosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_topicos.
     * @param {tbl_topicosUpsertArgs} args - Arguments to update or create a Tbl_topicos.
     * @example
     * // Update or create a Tbl_topicos
     * const tbl_topicos = await prisma.tbl_topicos.upsert({
     *   create: {
     *     // ... data to create a Tbl_topicos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_topicos we want to update
     *   }
     * })
     */
    upsert<T extends tbl_topicosUpsertArgs>(args: SelectSubset<T, tbl_topicosUpsertArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_topicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_topicosCountArgs} args - Arguments to filter Tbl_topicos to count.
     * @example
     * // Count the number of Tbl_topicos
     * const count = await prisma.tbl_topicos.count({
     *   where: {
     *     // ... the filter for the Tbl_topicos we want to count
     *   }
     * })
    **/
    count<T extends tbl_topicosCountArgs>(
      args?: Subset<T, tbl_topicosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_topicosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_topicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_topicosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_topicosAggregateArgs>(args: Subset<T, Tbl_topicosAggregateArgs>): Prisma.PrismaPromise<GetTbl_topicosAggregateType<T>>

    /**
     * Group by Tbl_topicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_topicosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_topicosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_topicosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_topicosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_topicosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_topicosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_topicos model
   */
  readonly fields: tbl_topicosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_topicos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_topicosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_disciplina_topico<T extends tbl_topicos$tbl_disciplina_topicoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_topicos$tbl_disciplina_topicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_disciplina_topicoPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_videoaulas<T extends tbl_topicos$tbl_videoaulasArgs<ExtArgs> = {}>(args?: Subset<T, tbl_topicos$tbl_videoaulasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_topicos model
   */ 
  interface tbl_topicosFieldRefs {
    readonly id: FieldRef<"tbl_topicos", 'Int'>
    readonly nome: FieldRef<"tbl_topicos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_topicos findUnique
   */
  export type tbl_topicosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_topicos to fetch.
     */
    where: tbl_topicosWhereUniqueInput
  }

  /**
   * tbl_topicos findUniqueOrThrow
   */
  export type tbl_topicosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_topicos to fetch.
     */
    where: tbl_topicosWhereUniqueInput
  }

  /**
   * tbl_topicos findFirst
   */
  export type tbl_topicosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_topicos to fetch.
     */
    where?: tbl_topicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_topicos to fetch.
     */
    orderBy?: tbl_topicosOrderByWithRelationInput | tbl_topicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_topicos.
     */
    cursor?: tbl_topicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_topicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_topicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_topicos.
     */
    distinct?: Tbl_topicosScalarFieldEnum | Tbl_topicosScalarFieldEnum[]
  }

  /**
   * tbl_topicos findFirstOrThrow
   */
  export type tbl_topicosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_topicos to fetch.
     */
    where?: tbl_topicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_topicos to fetch.
     */
    orderBy?: tbl_topicosOrderByWithRelationInput | tbl_topicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_topicos.
     */
    cursor?: tbl_topicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_topicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_topicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_topicos.
     */
    distinct?: Tbl_topicosScalarFieldEnum | Tbl_topicosScalarFieldEnum[]
  }

  /**
   * tbl_topicos findMany
   */
  export type tbl_topicosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_topicos to fetch.
     */
    where?: tbl_topicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_topicos to fetch.
     */
    orderBy?: tbl_topicosOrderByWithRelationInput | tbl_topicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_topicos.
     */
    cursor?: tbl_topicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_topicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_topicos.
     */
    skip?: number
    distinct?: Tbl_topicosScalarFieldEnum | Tbl_topicosScalarFieldEnum[]
  }

  /**
   * tbl_topicos create
   */
  export type tbl_topicosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_topicos.
     */
    data: XOR<tbl_topicosCreateInput, tbl_topicosUncheckedCreateInput>
  }

  /**
   * tbl_topicos createMany
   */
  export type tbl_topicosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_topicos.
     */
    data: tbl_topicosCreateManyInput | tbl_topicosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_topicos update
   */
  export type tbl_topicosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_topicos.
     */
    data: XOR<tbl_topicosUpdateInput, tbl_topicosUncheckedUpdateInput>
    /**
     * Choose, which tbl_topicos to update.
     */
    where: tbl_topicosWhereUniqueInput
  }

  /**
   * tbl_topicos updateMany
   */
  export type tbl_topicosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_topicos.
     */
    data: XOR<tbl_topicosUpdateManyMutationInput, tbl_topicosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_topicos to update
     */
    where?: tbl_topicosWhereInput
  }

  /**
   * tbl_topicos upsert
   */
  export type tbl_topicosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_topicos to update in case it exists.
     */
    where: tbl_topicosWhereUniqueInput
    /**
     * In case the tbl_topicos found by the `where` argument doesn't exist, create a new tbl_topicos with this data.
     */
    create: XOR<tbl_topicosCreateInput, tbl_topicosUncheckedCreateInput>
    /**
     * In case the tbl_topicos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_topicosUpdateInput, tbl_topicosUncheckedUpdateInput>
  }

  /**
   * tbl_topicos delete
   */
  export type tbl_topicosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
    /**
     * Filter which tbl_topicos to delete.
     */
    where: tbl_topicosWhereUniqueInput
  }

  /**
   * tbl_topicos deleteMany
   */
  export type tbl_topicosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_topicos to delete
     */
    where?: tbl_topicosWhereInput
  }

  /**
   * tbl_topicos.tbl_disciplina_topico
   */
  export type tbl_topicos$tbl_disciplina_topicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_disciplina_topico
     */
    select?: tbl_disciplina_topicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_disciplina_topicoInclude<ExtArgs> | null
    where?: tbl_disciplina_topicoWhereInput
    orderBy?: tbl_disciplina_topicoOrderByWithRelationInput | tbl_disciplina_topicoOrderByWithRelationInput[]
    cursor?: tbl_disciplina_topicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_disciplina_topicoScalarFieldEnum | Tbl_disciplina_topicoScalarFieldEnum[]
  }

  /**
   * tbl_topicos.tbl_videoaulas
   */
  export type tbl_topicos$tbl_videoaulasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    where?: tbl_videoaulasWhereInput
    orderBy?: tbl_videoaulasOrderByWithRelationInput | tbl_videoaulasOrderByWithRelationInput[]
    cursor?: tbl_videoaulasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_videoaulasScalarFieldEnum | Tbl_videoaulasScalarFieldEnum[]
  }

  /**
   * tbl_topicos without action
   */
  export type tbl_topicosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_topicos
     */
    select?: tbl_topicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_topicosInclude<ExtArgs> | null
  }


  /**
   * Model tbl_vest_fases
   */

  export type AggregateTbl_vest_fases = {
    _count: Tbl_vest_fasesCountAggregateOutputType | null
    _avg: Tbl_vest_fasesAvgAggregateOutputType | null
    _sum: Tbl_vest_fasesSumAggregateOutputType | null
    _min: Tbl_vest_fasesMinAggregateOutputType | null
    _max: Tbl_vest_fasesMaxAggregateOutputType | null
  }

  export type Tbl_vest_fasesAvgAggregateOutputType = {
    id: number | null
    vestibular_id: number | null
    fase_id: number | null
  }

  export type Tbl_vest_fasesSumAggregateOutputType = {
    id: number | null
    vestibular_id: number | null
    fase_id: number | null
  }

  export type Tbl_vest_fasesMinAggregateOutputType = {
    id: number | null
    vestibular_id: number | null
    fase_id: number | null
  }

  export type Tbl_vest_fasesMaxAggregateOutputType = {
    id: number | null
    vestibular_id: number | null
    fase_id: number | null
  }

  export type Tbl_vest_fasesCountAggregateOutputType = {
    id: number
    vestibular_id: number
    fase_id: number
    _all: number
  }


  export type Tbl_vest_fasesAvgAggregateInputType = {
    id?: true
    vestibular_id?: true
    fase_id?: true
  }

  export type Tbl_vest_fasesSumAggregateInputType = {
    id?: true
    vestibular_id?: true
    fase_id?: true
  }

  export type Tbl_vest_fasesMinAggregateInputType = {
    id?: true
    vestibular_id?: true
    fase_id?: true
  }

  export type Tbl_vest_fasesMaxAggregateInputType = {
    id?: true
    vestibular_id?: true
    fase_id?: true
  }

  export type Tbl_vest_fasesCountAggregateInputType = {
    id?: true
    vestibular_id?: true
    fase_id?: true
    _all?: true
  }

  export type Tbl_vest_fasesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_vest_fases to aggregate.
     */
    where?: tbl_vest_fasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_vest_fases to fetch.
     */
    orderBy?: tbl_vest_fasesOrderByWithRelationInput | tbl_vest_fasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_vest_fasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_vest_fases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_vest_fases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_vest_fases
    **/
    _count?: true | Tbl_vest_fasesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_vest_fasesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_vest_fasesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_vest_fasesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_vest_fasesMaxAggregateInputType
  }

  export type GetTbl_vest_fasesAggregateType<T extends Tbl_vest_fasesAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_vest_fases]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_vest_fases[P]>
      : GetScalarType<T[P], AggregateTbl_vest_fases[P]>
  }




  export type tbl_vest_fasesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_vest_fasesWhereInput
    orderBy?: tbl_vest_fasesOrderByWithAggregationInput | tbl_vest_fasesOrderByWithAggregationInput[]
    by: Tbl_vest_fasesScalarFieldEnum[] | Tbl_vest_fasesScalarFieldEnum
    having?: tbl_vest_fasesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_vest_fasesCountAggregateInputType | true
    _avg?: Tbl_vest_fasesAvgAggregateInputType
    _sum?: Tbl_vest_fasesSumAggregateInputType
    _min?: Tbl_vest_fasesMinAggregateInputType
    _max?: Tbl_vest_fasesMaxAggregateInputType
  }

  export type Tbl_vest_fasesGroupByOutputType = {
    id: number
    vestibular_id: number
    fase_id: number
    _count: Tbl_vest_fasesCountAggregateOutputType | null
    _avg: Tbl_vest_fasesAvgAggregateOutputType | null
    _sum: Tbl_vest_fasesSumAggregateOutputType | null
    _min: Tbl_vest_fasesMinAggregateOutputType | null
    _max: Tbl_vest_fasesMaxAggregateOutputType | null
  }

  type GetTbl_vest_fasesGroupByPayload<T extends tbl_vest_fasesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_vest_fasesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_vest_fasesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_vest_fasesGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_vest_fasesGroupByOutputType[P]>
        }
      >
    >


  export type tbl_vest_fasesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    vestibular_id?: boolean
    fase_id?: boolean
    tbl_vestibulares?: boolean | tbl_vestibularesDefaultArgs<ExtArgs>
    tbl_fases?: boolean | tbl_fasesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_vest_fases"]>


  export type tbl_vest_fasesSelectScalar = {
    id?: boolean
    vestibular_id?: boolean
    fase_id?: boolean
  }

  export type tbl_vest_fasesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_vestibulares?: boolean | tbl_vestibularesDefaultArgs<ExtArgs>
    tbl_fases?: boolean | tbl_fasesDefaultArgs<ExtArgs>
  }

  export type $tbl_vest_fasesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_vest_fases"
    objects: {
      tbl_vestibulares: Prisma.$tbl_vestibularesPayload<ExtArgs>
      tbl_fases: Prisma.$tbl_fasesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      vestibular_id: number
      fase_id: number
    }, ExtArgs["result"]["tbl_vest_fases"]>
    composites: {}
  }

  type tbl_vest_fasesGetPayload<S extends boolean | null | undefined | tbl_vest_fasesDefaultArgs> = $Result.GetResult<Prisma.$tbl_vest_fasesPayload, S>

  type tbl_vest_fasesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_vest_fasesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_vest_fasesCountAggregateInputType | true
    }

  export interface tbl_vest_fasesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_vest_fases'], meta: { name: 'tbl_vest_fases' } }
    /**
     * Find zero or one Tbl_vest_fases that matches the filter.
     * @param {tbl_vest_fasesFindUniqueArgs} args - Arguments to find a Tbl_vest_fases
     * @example
     * // Get one Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_vest_fasesFindUniqueArgs>(args: SelectSubset<T, tbl_vest_fasesFindUniqueArgs<ExtArgs>>): Prisma__tbl_vest_fasesClient<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_vest_fases that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_vest_fasesFindUniqueOrThrowArgs} args - Arguments to find a Tbl_vest_fases
     * @example
     * // Get one Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_vest_fasesFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_vest_fasesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_vest_fasesClient<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_vest_fases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vest_fasesFindFirstArgs} args - Arguments to find a Tbl_vest_fases
     * @example
     * // Get one Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_vest_fasesFindFirstArgs>(args?: SelectSubset<T, tbl_vest_fasesFindFirstArgs<ExtArgs>>): Prisma__tbl_vest_fasesClient<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_vest_fases that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vest_fasesFindFirstOrThrowArgs} args - Arguments to find a Tbl_vest_fases
     * @example
     * // Get one Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_vest_fasesFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_vest_fasesFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_vest_fasesClient<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_vest_fases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vest_fasesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.findMany()
     * 
     * // Get first 10 Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_vest_fasesWithIdOnly = await prisma.tbl_vest_fases.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_vest_fasesFindManyArgs>(args?: SelectSubset<T, tbl_vest_fasesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_vest_fases.
     * @param {tbl_vest_fasesCreateArgs} args - Arguments to create a Tbl_vest_fases.
     * @example
     * // Create one Tbl_vest_fases
     * const Tbl_vest_fases = await prisma.tbl_vest_fases.create({
     *   data: {
     *     // ... data to create a Tbl_vest_fases
     *   }
     * })
     * 
     */
    create<T extends tbl_vest_fasesCreateArgs>(args: SelectSubset<T, tbl_vest_fasesCreateArgs<ExtArgs>>): Prisma__tbl_vest_fasesClient<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_vest_fases.
     * @param {tbl_vest_fasesCreateManyArgs} args - Arguments to create many Tbl_vest_fases.
     * @example
     * // Create many Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_vest_fasesCreateManyArgs>(args?: SelectSubset<T, tbl_vest_fasesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_vest_fases.
     * @param {tbl_vest_fasesDeleteArgs} args - Arguments to delete one Tbl_vest_fases.
     * @example
     * // Delete one Tbl_vest_fases
     * const Tbl_vest_fases = await prisma.tbl_vest_fases.delete({
     *   where: {
     *     // ... filter to delete one Tbl_vest_fases
     *   }
     * })
     * 
     */
    delete<T extends tbl_vest_fasesDeleteArgs>(args: SelectSubset<T, tbl_vest_fasesDeleteArgs<ExtArgs>>): Prisma__tbl_vest_fasesClient<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_vest_fases.
     * @param {tbl_vest_fasesUpdateArgs} args - Arguments to update one Tbl_vest_fases.
     * @example
     * // Update one Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_vest_fasesUpdateArgs>(args: SelectSubset<T, tbl_vest_fasesUpdateArgs<ExtArgs>>): Prisma__tbl_vest_fasesClient<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_vest_fases.
     * @param {tbl_vest_fasesDeleteManyArgs} args - Arguments to filter Tbl_vest_fases to delete.
     * @example
     * // Delete a few Tbl_vest_fases
     * const { count } = await prisma.tbl_vest_fases.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_vest_fasesDeleteManyArgs>(args?: SelectSubset<T, tbl_vest_fasesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_vest_fases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vest_fasesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_vest_fasesUpdateManyArgs>(args: SelectSubset<T, tbl_vest_fasesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_vest_fases.
     * @param {tbl_vest_fasesUpsertArgs} args - Arguments to update or create a Tbl_vest_fases.
     * @example
     * // Update or create a Tbl_vest_fases
     * const tbl_vest_fases = await prisma.tbl_vest_fases.upsert({
     *   create: {
     *     // ... data to create a Tbl_vest_fases
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_vest_fases we want to update
     *   }
     * })
     */
    upsert<T extends tbl_vest_fasesUpsertArgs>(args: SelectSubset<T, tbl_vest_fasesUpsertArgs<ExtArgs>>): Prisma__tbl_vest_fasesClient<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_vest_fases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vest_fasesCountArgs} args - Arguments to filter Tbl_vest_fases to count.
     * @example
     * // Count the number of Tbl_vest_fases
     * const count = await prisma.tbl_vest_fases.count({
     *   where: {
     *     // ... the filter for the Tbl_vest_fases we want to count
     *   }
     * })
    **/
    count<T extends tbl_vest_fasesCountArgs>(
      args?: Subset<T, tbl_vest_fasesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_vest_fasesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_vest_fases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_vest_fasesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_vest_fasesAggregateArgs>(args: Subset<T, Tbl_vest_fasesAggregateArgs>): Prisma.PrismaPromise<GetTbl_vest_fasesAggregateType<T>>

    /**
     * Group by Tbl_vest_fases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vest_fasesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_vest_fasesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_vest_fasesGroupByArgs['orderBy'] }
        : { orderBy?: tbl_vest_fasesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_vest_fasesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_vest_fasesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_vest_fases model
   */
  readonly fields: tbl_vest_fasesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_vest_fases.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_vest_fasesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_vestibulares<T extends tbl_vestibularesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_vestibularesDefaultArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_fases<T extends tbl_fasesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_fasesDefaultArgs<ExtArgs>>): Prisma__tbl_fasesClient<$Result.GetResult<Prisma.$tbl_fasesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_vest_fases model
   */ 
  interface tbl_vest_fasesFieldRefs {
    readonly id: FieldRef<"tbl_vest_fases", 'Int'>
    readonly vestibular_id: FieldRef<"tbl_vest_fases", 'Int'>
    readonly fase_id: FieldRef<"tbl_vest_fases", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_vest_fases findUnique
   */
  export type tbl_vest_fasesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vest_fases to fetch.
     */
    where: tbl_vest_fasesWhereUniqueInput
  }

  /**
   * tbl_vest_fases findUniqueOrThrow
   */
  export type tbl_vest_fasesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vest_fases to fetch.
     */
    where: tbl_vest_fasesWhereUniqueInput
  }

  /**
   * tbl_vest_fases findFirst
   */
  export type tbl_vest_fasesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vest_fases to fetch.
     */
    where?: tbl_vest_fasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_vest_fases to fetch.
     */
    orderBy?: tbl_vest_fasesOrderByWithRelationInput | tbl_vest_fasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_vest_fases.
     */
    cursor?: tbl_vest_fasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_vest_fases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_vest_fases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_vest_fases.
     */
    distinct?: Tbl_vest_fasesScalarFieldEnum | Tbl_vest_fasesScalarFieldEnum[]
  }

  /**
   * tbl_vest_fases findFirstOrThrow
   */
  export type tbl_vest_fasesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vest_fases to fetch.
     */
    where?: tbl_vest_fasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_vest_fases to fetch.
     */
    orderBy?: tbl_vest_fasesOrderByWithRelationInput | tbl_vest_fasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_vest_fases.
     */
    cursor?: tbl_vest_fasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_vest_fases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_vest_fases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_vest_fases.
     */
    distinct?: Tbl_vest_fasesScalarFieldEnum | Tbl_vest_fasesScalarFieldEnum[]
  }

  /**
   * tbl_vest_fases findMany
   */
  export type tbl_vest_fasesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vest_fases to fetch.
     */
    where?: tbl_vest_fasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_vest_fases to fetch.
     */
    orderBy?: tbl_vest_fasesOrderByWithRelationInput | tbl_vest_fasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_vest_fases.
     */
    cursor?: tbl_vest_fasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_vest_fases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_vest_fases.
     */
    skip?: number
    distinct?: Tbl_vest_fasesScalarFieldEnum | Tbl_vest_fasesScalarFieldEnum[]
  }

  /**
   * tbl_vest_fases create
   */
  export type tbl_vest_fasesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_vest_fases.
     */
    data: XOR<tbl_vest_fasesCreateInput, tbl_vest_fasesUncheckedCreateInput>
  }

  /**
   * tbl_vest_fases createMany
   */
  export type tbl_vest_fasesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_vest_fases.
     */
    data: tbl_vest_fasesCreateManyInput | tbl_vest_fasesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_vest_fases update
   */
  export type tbl_vest_fasesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_vest_fases.
     */
    data: XOR<tbl_vest_fasesUpdateInput, tbl_vest_fasesUncheckedUpdateInput>
    /**
     * Choose, which tbl_vest_fases to update.
     */
    where: tbl_vest_fasesWhereUniqueInput
  }

  /**
   * tbl_vest_fases updateMany
   */
  export type tbl_vest_fasesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_vest_fases.
     */
    data: XOR<tbl_vest_fasesUpdateManyMutationInput, tbl_vest_fasesUncheckedUpdateManyInput>
    /**
     * Filter which tbl_vest_fases to update
     */
    where?: tbl_vest_fasesWhereInput
  }

  /**
   * tbl_vest_fases upsert
   */
  export type tbl_vest_fasesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_vest_fases to update in case it exists.
     */
    where: tbl_vest_fasesWhereUniqueInput
    /**
     * In case the tbl_vest_fases found by the `where` argument doesn't exist, create a new tbl_vest_fases with this data.
     */
    create: XOR<tbl_vest_fasesCreateInput, tbl_vest_fasesUncheckedCreateInput>
    /**
     * In case the tbl_vest_fases was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_vest_fasesUpdateInput, tbl_vest_fasesUncheckedUpdateInput>
  }

  /**
   * tbl_vest_fases delete
   */
  export type tbl_vest_fasesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    /**
     * Filter which tbl_vest_fases to delete.
     */
    where: tbl_vest_fasesWhereUniqueInput
  }

  /**
   * tbl_vest_fases deleteMany
   */
  export type tbl_vest_fasesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_vest_fases to delete
     */
    where?: tbl_vest_fasesWhereInput
  }

  /**
   * tbl_vest_fases without action
   */
  export type tbl_vest_fasesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
  }


  /**
   * Model tbl_vestibulares
   */

  export type AggregateTbl_vestibulares = {
    _count: Tbl_vestibularesCountAggregateOutputType | null
    _avg: Tbl_vestibularesAvgAggregateOutputType | null
    _sum: Tbl_vestibularesSumAggregateOutputType | null
    _min: Tbl_vestibularesMinAggregateOutputType | null
    _max: Tbl_vestibularesMaxAggregateOutputType | null
  }

  export type Tbl_vestibularesAvgAggregateOutputType = {
    id: number | null
    instituicao_id: number | null
  }

  export type Tbl_vestibularesSumAggregateOutputType = {
    id: number | null
    instituicao_id: number | null
  }

  export type Tbl_vestibularesMinAggregateOutputType = {
    id: number | null
    nome: string | null
    data_prova: Date | null
    instituicao_id: number | null
    status: boolean | null
  }

  export type Tbl_vestibularesMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    data_prova: Date | null
    instituicao_id: number | null
    status: boolean | null
  }

  export type Tbl_vestibularesCountAggregateOutputType = {
    id: number
    nome: number
    data_prova: number
    instituicao_id: number
    status: number
    _all: number
  }


  export type Tbl_vestibularesAvgAggregateInputType = {
    id?: true
    instituicao_id?: true
  }

  export type Tbl_vestibularesSumAggregateInputType = {
    id?: true
    instituicao_id?: true
  }

  export type Tbl_vestibularesMinAggregateInputType = {
    id?: true
    nome?: true
    data_prova?: true
    instituicao_id?: true
    status?: true
  }

  export type Tbl_vestibularesMaxAggregateInputType = {
    id?: true
    nome?: true
    data_prova?: true
    instituicao_id?: true
    status?: true
  }

  export type Tbl_vestibularesCountAggregateInputType = {
    id?: true
    nome?: true
    data_prova?: true
    instituicao_id?: true
    status?: true
    _all?: true
  }

  export type Tbl_vestibularesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_vestibulares to aggregate.
     */
    where?: tbl_vestibularesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_vestibulares to fetch.
     */
    orderBy?: tbl_vestibularesOrderByWithRelationInput | tbl_vestibularesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_vestibularesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_vestibulares from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_vestibulares.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_vestibulares
    **/
    _count?: true | Tbl_vestibularesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_vestibularesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_vestibularesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_vestibularesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_vestibularesMaxAggregateInputType
  }

  export type GetTbl_vestibularesAggregateType<T extends Tbl_vestibularesAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_vestibulares]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_vestibulares[P]>
      : GetScalarType<T[P], AggregateTbl_vestibulares[P]>
  }




  export type tbl_vestibularesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_vestibularesWhereInput
    orderBy?: tbl_vestibularesOrderByWithAggregationInput | tbl_vestibularesOrderByWithAggregationInput[]
    by: Tbl_vestibularesScalarFieldEnum[] | Tbl_vestibularesScalarFieldEnum
    having?: tbl_vestibularesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_vestibularesCountAggregateInputType | true
    _avg?: Tbl_vestibularesAvgAggregateInputType
    _sum?: Tbl_vestibularesSumAggregateInputType
    _min?: Tbl_vestibularesMinAggregateInputType
    _max?: Tbl_vestibularesMaxAggregateInputType
  }

  export type Tbl_vestibularesGroupByOutputType = {
    id: number
    nome: string
    data_prova: Date
    instituicao_id: number
    status: boolean | null
    _count: Tbl_vestibularesCountAggregateOutputType | null
    _avg: Tbl_vestibularesAvgAggregateOutputType | null
    _sum: Tbl_vestibularesSumAggregateOutputType | null
    _min: Tbl_vestibularesMinAggregateOutputType | null
    _max: Tbl_vestibularesMaxAggregateOutputType | null
  }

  type GetTbl_vestibularesGroupByPayload<T extends tbl_vestibularesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_vestibularesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_vestibularesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_vestibularesGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_vestibularesGroupByOutputType[P]>
        }
      >
    >


  export type tbl_vestibularesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    data_prova?: boolean
    instituicao_id?: boolean
    status?: boolean
    tbl_vest_fases?: boolean | tbl_vestibulares$tbl_vest_fasesArgs<ExtArgs>
    tbl_intituicoes?: boolean | tbl_intituicoesDefaultArgs<ExtArgs>
    _count?: boolean | Tbl_vestibularesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_vestibulares"]>


  export type tbl_vestibularesSelectScalar = {
    id?: boolean
    nome?: boolean
    data_prova?: boolean
    instituicao_id?: boolean
    status?: boolean
  }

  export type tbl_vestibularesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_vest_fases?: boolean | tbl_vestibulares$tbl_vest_fasesArgs<ExtArgs>
    tbl_intituicoes?: boolean | tbl_intituicoesDefaultArgs<ExtArgs>
    _count?: boolean | Tbl_vestibularesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_vestibularesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_vestibulares"
    objects: {
      tbl_vest_fases: Prisma.$tbl_vest_fasesPayload<ExtArgs>[]
      tbl_intituicoes: Prisma.$tbl_intituicoesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      data_prova: Date
      instituicao_id: number
      status: boolean | null
    }, ExtArgs["result"]["tbl_vestibulares"]>
    composites: {}
  }

  type tbl_vestibularesGetPayload<S extends boolean | null | undefined | tbl_vestibularesDefaultArgs> = $Result.GetResult<Prisma.$tbl_vestibularesPayload, S>

  type tbl_vestibularesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_vestibularesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_vestibularesCountAggregateInputType | true
    }

  export interface tbl_vestibularesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_vestibulares'], meta: { name: 'tbl_vestibulares' } }
    /**
     * Find zero or one Tbl_vestibulares that matches the filter.
     * @param {tbl_vestibularesFindUniqueArgs} args - Arguments to find a Tbl_vestibulares
     * @example
     * // Get one Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_vestibularesFindUniqueArgs>(args: SelectSubset<T, tbl_vestibularesFindUniqueArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_vestibulares that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_vestibularesFindUniqueOrThrowArgs} args - Arguments to find a Tbl_vestibulares
     * @example
     * // Get one Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_vestibularesFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_vestibularesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_vestibulares that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vestibularesFindFirstArgs} args - Arguments to find a Tbl_vestibulares
     * @example
     * // Get one Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_vestibularesFindFirstArgs>(args?: SelectSubset<T, tbl_vestibularesFindFirstArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_vestibulares that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vestibularesFindFirstOrThrowArgs} args - Arguments to find a Tbl_vestibulares
     * @example
     * // Get one Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_vestibularesFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_vestibularesFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_vestibulares that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vestibularesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.findMany()
     * 
     * // Get first 10 Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_vestibularesWithIdOnly = await prisma.tbl_vestibulares.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_vestibularesFindManyArgs>(args?: SelectSubset<T, tbl_vestibularesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_vestibulares.
     * @param {tbl_vestibularesCreateArgs} args - Arguments to create a Tbl_vestibulares.
     * @example
     * // Create one Tbl_vestibulares
     * const Tbl_vestibulares = await prisma.tbl_vestibulares.create({
     *   data: {
     *     // ... data to create a Tbl_vestibulares
     *   }
     * })
     * 
     */
    create<T extends tbl_vestibularesCreateArgs>(args: SelectSubset<T, tbl_vestibularesCreateArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_vestibulares.
     * @param {tbl_vestibularesCreateManyArgs} args - Arguments to create many Tbl_vestibulares.
     * @example
     * // Create many Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_vestibularesCreateManyArgs>(args?: SelectSubset<T, tbl_vestibularesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_vestibulares.
     * @param {tbl_vestibularesDeleteArgs} args - Arguments to delete one Tbl_vestibulares.
     * @example
     * // Delete one Tbl_vestibulares
     * const Tbl_vestibulares = await prisma.tbl_vestibulares.delete({
     *   where: {
     *     // ... filter to delete one Tbl_vestibulares
     *   }
     * })
     * 
     */
    delete<T extends tbl_vestibularesDeleteArgs>(args: SelectSubset<T, tbl_vestibularesDeleteArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_vestibulares.
     * @param {tbl_vestibularesUpdateArgs} args - Arguments to update one Tbl_vestibulares.
     * @example
     * // Update one Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_vestibularesUpdateArgs>(args: SelectSubset<T, tbl_vestibularesUpdateArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_vestibulares.
     * @param {tbl_vestibularesDeleteManyArgs} args - Arguments to filter Tbl_vestibulares to delete.
     * @example
     * // Delete a few Tbl_vestibulares
     * const { count } = await prisma.tbl_vestibulares.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_vestibularesDeleteManyArgs>(args?: SelectSubset<T, tbl_vestibularesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_vestibulares.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vestibularesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_vestibularesUpdateManyArgs>(args: SelectSubset<T, tbl_vestibularesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_vestibulares.
     * @param {tbl_vestibularesUpsertArgs} args - Arguments to update or create a Tbl_vestibulares.
     * @example
     * // Update or create a Tbl_vestibulares
     * const tbl_vestibulares = await prisma.tbl_vestibulares.upsert({
     *   create: {
     *     // ... data to create a Tbl_vestibulares
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_vestibulares we want to update
     *   }
     * })
     */
    upsert<T extends tbl_vestibularesUpsertArgs>(args: SelectSubset<T, tbl_vestibularesUpsertArgs<ExtArgs>>): Prisma__tbl_vestibularesClient<$Result.GetResult<Prisma.$tbl_vestibularesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_vestibulares.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vestibularesCountArgs} args - Arguments to filter Tbl_vestibulares to count.
     * @example
     * // Count the number of Tbl_vestibulares
     * const count = await prisma.tbl_vestibulares.count({
     *   where: {
     *     // ... the filter for the Tbl_vestibulares we want to count
     *   }
     * })
    **/
    count<T extends tbl_vestibularesCountArgs>(
      args?: Subset<T, tbl_vestibularesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_vestibularesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_vestibulares.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_vestibularesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_vestibularesAggregateArgs>(args: Subset<T, Tbl_vestibularesAggregateArgs>): Prisma.PrismaPromise<GetTbl_vestibularesAggregateType<T>>

    /**
     * Group by Tbl_vestibulares.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_vestibularesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_vestibularesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_vestibularesGroupByArgs['orderBy'] }
        : { orderBy?: tbl_vestibularesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_vestibularesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_vestibularesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_vestibulares model
   */
  readonly fields: tbl_vestibularesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_vestibulares.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_vestibularesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_vest_fases<T extends tbl_vestibulares$tbl_vest_fasesArgs<ExtArgs> = {}>(args?: Subset<T, tbl_vestibulares$tbl_vest_fasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_vest_fasesPayload<ExtArgs>, T, "findMany"> | Null>
    tbl_intituicoes<T extends tbl_intituicoesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_intituicoesDefaultArgs<ExtArgs>>): Prisma__tbl_intituicoesClient<$Result.GetResult<Prisma.$tbl_intituicoesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_vestibulares model
   */ 
  interface tbl_vestibularesFieldRefs {
    readonly id: FieldRef<"tbl_vestibulares", 'Int'>
    readonly nome: FieldRef<"tbl_vestibulares", 'String'>
    readonly data_prova: FieldRef<"tbl_vestibulares", 'DateTime'>
    readonly instituicao_id: FieldRef<"tbl_vestibulares", 'Int'>
    readonly status: FieldRef<"tbl_vestibulares", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_vestibulares findUnique
   */
  export type tbl_vestibularesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vestibulares to fetch.
     */
    where: tbl_vestibularesWhereUniqueInput
  }

  /**
   * tbl_vestibulares findUniqueOrThrow
   */
  export type tbl_vestibularesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vestibulares to fetch.
     */
    where: tbl_vestibularesWhereUniqueInput
  }

  /**
   * tbl_vestibulares findFirst
   */
  export type tbl_vestibularesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vestibulares to fetch.
     */
    where?: tbl_vestibularesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_vestibulares to fetch.
     */
    orderBy?: tbl_vestibularesOrderByWithRelationInput | tbl_vestibularesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_vestibulares.
     */
    cursor?: tbl_vestibularesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_vestibulares from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_vestibulares.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_vestibulares.
     */
    distinct?: Tbl_vestibularesScalarFieldEnum | Tbl_vestibularesScalarFieldEnum[]
  }

  /**
   * tbl_vestibulares findFirstOrThrow
   */
  export type tbl_vestibularesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vestibulares to fetch.
     */
    where?: tbl_vestibularesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_vestibulares to fetch.
     */
    orderBy?: tbl_vestibularesOrderByWithRelationInput | tbl_vestibularesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_vestibulares.
     */
    cursor?: tbl_vestibularesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_vestibulares from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_vestibulares.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_vestibulares.
     */
    distinct?: Tbl_vestibularesScalarFieldEnum | Tbl_vestibularesScalarFieldEnum[]
  }

  /**
   * tbl_vestibulares findMany
   */
  export type tbl_vestibularesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * Filter, which tbl_vestibulares to fetch.
     */
    where?: tbl_vestibularesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_vestibulares to fetch.
     */
    orderBy?: tbl_vestibularesOrderByWithRelationInput | tbl_vestibularesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_vestibulares.
     */
    cursor?: tbl_vestibularesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_vestibulares from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_vestibulares.
     */
    skip?: number
    distinct?: Tbl_vestibularesScalarFieldEnum | Tbl_vestibularesScalarFieldEnum[]
  }

  /**
   * tbl_vestibulares create
   */
  export type tbl_vestibularesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_vestibulares.
     */
    data: XOR<tbl_vestibularesCreateInput, tbl_vestibularesUncheckedCreateInput>
  }

  /**
   * tbl_vestibulares createMany
   */
  export type tbl_vestibularesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_vestibulares.
     */
    data: tbl_vestibularesCreateManyInput | tbl_vestibularesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_vestibulares update
   */
  export type tbl_vestibularesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_vestibulares.
     */
    data: XOR<tbl_vestibularesUpdateInput, tbl_vestibularesUncheckedUpdateInput>
    /**
     * Choose, which tbl_vestibulares to update.
     */
    where: tbl_vestibularesWhereUniqueInput
  }

  /**
   * tbl_vestibulares updateMany
   */
  export type tbl_vestibularesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_vestibulares.
     */
    data: XOR<tbl_vestibularesUpdateManyMutationInput, tbl_vestibularesUncheckedUpdateManyInput>
    /**
     * Filter which tbl_vestibulares to update
     */
    where?: tbl_vestibularesWhereInput
  }

  /**
   * tbl_vestibulares upsert
   */
  export type tbl_vestibularesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_vestibulares to update in case it exists.
     */
    where: tbl_vestibularesWhereUniqueInput
    /**
     * In case the tbl_vestibulares found by the `where` argument doesn't exist, create a new tbl_vestibulares with this data.
     */
    create: XOR<tbl_vestibularesCreateInput, tbl_vestibularesUncheckedCreateInput>
    /**
     * In case the tbl_vestibulares was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_vestibularesUpdateInput, tbl_vestibularesUncheckedUpdateInput>
  }

  /**
   * tbl_vestibulares delete
   */
  export type tbl_vestibularesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
    /**
     * Filter which tbl_vestibulares to delete.
     */
    where: tbl_vestibularesWhereUniqueInput
  }

  /**
   * tbl_vestibulares deleteMany
   */
  export type tbl_vestibularesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_vestibulares to delete
     */
    where?: tbl_vestibularesWhereInput
  }

  /**
   * tbl_vestibulares.tbl_vest_fases
   */
  export type tbl_vestibulares$tbl_vest_fasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vest_fases
     */
    select?: tbl_vest_fasesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vest_fasesInclude<ExtArgs> | null
    where?: tbl_vest_fasesWhereInput
    orderBy?: tbl_vest_fasesOrderByWithRelationInput | tbl_vest_fasesOrderByWithRelationInput[]
    cursor?: tbl_vest_fasesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_vest_fasesScalarFieldEnum | Tbl_vest_fasesScalarFieldEnum[]
  }

  /**
   * tbl_vestibulares without action
   */
  export type tbl_vestibularesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_vestibulares
     */
    select?: tbl_vestibularesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_vestibularesInclude<ExtArgs> | null
  }


  /**
   * Model tbl_videoaulas
   */

  export type AggregateTbl_videoaulas = {
    _count: Tbl_videoaulasCountAggregateOutputType | null
    _avg: Tbl_videoaulasAvgAggregateOutputType | null
    _sum: Tbl_videoaulasSumAggregateOutputType | null
    _min: Tbl_videoaulasMinAggregateOutputType | null
    _max: Tbl_videoaulasMaxAggregateOutputType | null
  }

  export type Tbl_videoaulasAvgAggregateOutputType = {
    id: number | null
    topico_id: number | null
  }

  export type Tbl_videoaulasSumAggregateOutputType = {
    id: number | null
    topico_id: number | null
  }

  export type Tbl_videoaulasMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    duracao: Date | null
    topico_id: number | null
    status: boolean | null
  }

  export type Tbl_videoaulasMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    duracao: Date | null
    topico_id: number | null
    status: boolean | null
  }

  export type Tbl_videoaulasCountAggregateOutputType = {
    id: number
    titulo: number
    duracao: number
    topico_id: number
    status: number
    _all: number
  }


  export type Tbl_videoaulasAvgAggregateInputType = {
    id?: true
    topico_id?: true
  }

  export type Tbl_videoaulasSumAggregateInputType = {
    id?: true
    topico_id?: true
  }

  export type Tbl_videoaulasMinAggregateInputType = {
    id?: true
    titulo?: true
    duracao?: true
    topico_id?: true
    status?: true
  }

  export type Tbl_videoaulasMaxAggregateInputType = {
    id?: true
    titulo?: true
    duracao?: true
    topico_id?: true
    status?: true
  }

  export type Tbl_videoaulasCountAggregateInputType = {
    id?: true
    titulo?: true
    duracao?: true
    topico_id?: true
    status?: true
    _all?: true
  }

  export type Tbl_videoaulasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_videoaulas to aggregate.
     */
    where?: tbl_videoaulasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_videoaulas to fetch.
     */
    orderBy?: tbl_videoaulasOrderByWithRelationInput | tbl_videoaulasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_videoaulasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_videoaulas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_videoaulas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_videoaulas
    **/
    _count?: true | Tbl_videoaulasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_videoaulasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_videoaulasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_videoaulasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_videoaulasMaxAggregateInputType
  }

  export type GetTbl_videoaulasAggregateType<T extends Tbl_videoaulasAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_videoaulas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_videoaulas[P]>
      : GetScalarType<T[P], AggregateTbl_videoaulas[P]>
  }




  export type tbl_videoaulasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_videoaulasWhereInput
    orderBy?: tbl_videoaulasOrderByWithAggregationInput | tbl_videoaulasOrderByWithAggregationInput[]
    by: Tbl_videoaulasScalarFieldEnum[] | Tbl_videoaulasScalarFieldEnum
    having?: tbl_videoaulasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_videoaulasCountAggregateInputType | true
    _avg?: Tbl_videoaulasAvgAggregateInputType
    _sum?: Tbl_videoaulasSumAggregateInputType
    _min?: Tbl_videoaulasMinAggregateInputType
    _max?: Tbl_videoaulasMaxAggregateInputType
  }

  export type Tbl_videoaulasGroupByOutputType = {
    id: number
    titulo: string
    duracao: Date
    topico_id: number
    status: boolean | null
    _count: Tbl_videoaulasCountAggregateOutputType | null
    _avg: Tbl_videoaulasAvgAggregateOutputType | null
    _sum: Tbl_videoaulasSumAggregateOutputType | null
    _min: Tbl_videoaulasMinAggregateOutputType | null
    _max: Tbl_videoaulasMaxAggregateOutputType | null
  }

  type GetTbl_videoaulasGroupByPayload<T extends tbl_videoaulasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_videoaulasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_videoaulasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_videoaulasGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_videoaulasGroupByOutputType[P]>
        }
      >
    >


  export type tbl_videoaulasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    duracao?: boolean
    topico_id?: boolean
    status?: boolean
    tbl_topicos?: boolean | tbl_topicosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_videoaulas"]>


  export type tbl_videoaulasSelectScalar = {
    id?: boolean
    titulo?: boolean
    duracao?: boolean
    topico_id?: boolean
    status?: boolean
  }

  export type tbl_videoaulasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_topicos?: boolean | tbl_topicosDefaultArgs<ExtArgs>
  }

  export type $tbl_videoaulasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_videoaulas"
    objects: {
      tbl_topicos: Prisma.$tbl_topicosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      duracao: Date
      topico_id: number
      status: boolean | null
    }, ExtArgs["result"]["tbl_videoaulas"]>
    composites: {}
  }

  type tbl_videoaulasGetPayload<S extends boolean | null | undefined | tbl_videoaulasDefaultArgs> = $Result.GetResult<Prisma.$tbl_videoaulasPayload, S>

  type tbl_videoaulasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_videoaulasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_videoaulasCountAggregateInputType | true
    }

  export interface tbl_videoaulasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_videoaulas'], meta: { name: 'tbl_videoaulas' } }
    /**
     * Find zero or one Tbl_videoaulas that matches the filter.
     * @param {tbl_videoaulasFindUniqueArgs} args - Arguments to find a Tbl_videoaulas
     * @example
     * // Get one Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_videoaulasFindUniqueArgs>(args: SelectSubset<T, tbl_videoaulasFindUniqueArgs<ExtArgs>>): Prisma__tbl_videoaulasClient<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_videoaulas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_videoaulasFindUniqueOrThrowArgs} args - Arguments to find a Tbl_videoaulas
     * @example
     * // Get one Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_videoaulasFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_videoaulasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_videoaulasClient<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_videoaulas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_videoaulasFindFirstArgs} args - Arguments to find a Tbl_videoaulas
     * @example
     * // Get one Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_videoaulasFindFirstArgs>(args?: SelectSubset<T, tbl_videoaulasFindFirstArgs<ExtArgs>>): Prisma__tbl_videoaulasClient<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_videoaulas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_videoaulasFindFirstOrThrowArgs} args - Arguments to find a Tbl_videoaulas
     * @example
     * // Get one Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_videoaulasFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_videoaulasFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_videoaulasClient<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_videoaulas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_videoaulasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.findMany()
     * 
     * // Get first 10 Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_videoaulasWithIdOnly = await prisma.tbl_videoaulas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_videoaulasFindManyArgs>(args?: SelectSubset<T, tbl_videoaulasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_videoaulas.
     * @param {tbl_videoaulasCreateArgs} args - Arguments to create a Tbl_videoaulas.
     * @example
     * // Create one Tbl_videoaulas
     * const Tbl_videoaulas = await prisma.tbl_videoaulas.create({
     *   data: {
     *     // ... data to create a Tbl_videoaulas
     *   }
     * })
     * 
     */
    create<T extends tbl_videoaulasCreateArgs>(args: SelectSubset<T, tbl_videoaulasCreateArgs<ExtArgs>>): Prisma__tbl_videoaulasClient<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_videoaulas.
     * @param {tbl_videoaulasCreateManyArgs} args - Arguments to create many Tbl_videoaulas.
     * @example
     * // Create many Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_videoaulasCreateManyArgs>(args?: SelectSubset<T, tbl_videoaulasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_videoaulas.
     * @param {tbl_videoaulasDeleteArgs} args - Arguments to delete one Tbl_videoaulas.
     * @example
     * // Delete one Tbl_videoaulas
     * const Tbl_videoaulas = await prisma.tbl_videoaulas.delete({
     *   where: {
     *     // ... filter to delete one Tbl_videoaulas
     *   }
     * })
     * 
     */
    delete<T extends tbl_videoaulasDeleteArgs>(args: SelectSubset<T, tbl_videoaulasDeleteArgs<ExtArgs>>): Prisma__tbl_videoaulasClient<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_videoaulas.
     * @param {tbl_videoaulasUpdateArgs} args - Arguments to update one Tbl_videoaulas.
     * @example
     * // Update one Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_videoaulasUpdateArgs>(args: SelectSubset<T, tbl_videoaulasUpdateArgs<ExtArgs>>): Prisma__tbl_videoaulasClient<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_videoaulas.
     * @param {tbl_videoaulasDeleteManyArgs} args - Arguments to filter Tbl_videoaulas to delete.
     * @example
     * // Delete a few Tbl_videoaulas
     * const { count } = await prisma.tbl_videoaulas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_videoaulasDeleteManyArgs>(args?: SelectSubset<T, tbl_videoaulasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_videoaulas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_videoaulasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_videoaulasUpdateManyArgs>(args: SelectSubset<T, tbl_videoaulasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_videoaulas.
     * @param {tbl_videoaulasUpsertArgs} args - Arguments to update or create a Tbl_videoaulas.
     * @example
     * // Update or create a Tbl_videoaulas
     * const tbl_videoaulas = await prisma.tbl_videoaulas.upsert({
     *   create: {
     *     // ... data to create a Tbl_videoaulas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_videoaulas we want to update
     *   }
     * })
     */
    upsert<T extends tbl_videoaulasUpsertArgs>(args: SelectSubset<T, tbl_videoaulasUpsertArgs<ExtArgs>>): Prisma__tbl_videoaulasClient<$Result.GetResult<Prisma.$tbl_videoaulasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_videoaulas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_videoaulasCountArgs} args - Arguments to filter Tbl_videoaulas to count.
     * @example
     * // Count the number of Tbl_videoaulas
     * const count = await prisma.tbl_videoaulas.count({
     *   where: {
     *     // ... the filter for the Tbl_videoaulas we want to count
     *   }
     * })
    **/
    count<T extends tbl_videoaulasCountArgs>(
      args?: Subset<T, tbl_videoaulasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_videoaulasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_videoaulas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_videoaulasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_videoaulasAggregateArgs>(args: Subset<T, Tbl_videoaulasAggregateArgs>): Prisma.PrismaPromise<GetTbl_videoaulasAggregateType<T>>

    /**
     * Group by Tbl_videoaulas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_videoaulasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_videoaulasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_videoaulasGroupByArgs['orderBy'] }
        : { orderBy?: tbl_videoaulasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_videoaulasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_videoaulasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_videoaulas model
   */
  readonly fields: tbl_videoaulasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_videoaulas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_videoaulasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_topicos<T extends tbl_topicosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_topicosDefaultArgs<ExtArgs>>): Prisma__tbl_topicosClient<$Result.GetResult<Prisma.$tbl_topicosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_videoaulas model
   */ 
  interface tbl_videoaulasFieldRefs {
    readonly id: FieldRef<"tbl_videoaulas", 'Int'>
    readonly titulo: FieldRef<"tbl_videoaulas", 'String'>
    readonly duracao: FieldRef<"tbl_videoaulas", 'DateTime'>
    readonly topico_id: FieldRef<"tbl_videoaulas", 'Int'>
    readonly status: FieldRef<"tbl_videoaulas", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_videoaulas findUnique
   */
  export type tbl_videoaulasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_videoaulas to fetch.
     */
    where: tbl_videoaulasWhereUniqueInput
  }

  /**
   * tbl_videoaulas findUniqueOrThrow
   */
  export type tbl_videoaulasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_videoaulas to fetch.
     */
    where: tbl_videoaulasWhereUniqueInput
  }

  /**
   * tbl_videoaulas findFirst
   */
  export type tbl_videoaulasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_videoaulas to fetch.
     */
    where?: tbl_videoaulasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_videoaulas to fetch.
     */
    orderBy?: tbl_videoaulasOrderByWithRelationInput | tbl_videoaulasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_videoaulas.
     */
    cursor?: tbl_videoaulasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_videoaulas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_videoaulas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_videoaulas.
     */
    distinct?: Tbl_videoaulasScalarFieldEnum | Tbl_videoaulasScalarFieldEnum[]
  }

  /**
   * tbl_videoaulas findFirstOrThrow
   */
  export type tbl_videoaulasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_videoaulas to fetch.
     */
    where?: tbl_videoaulasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_videoaulas to fetch.
     */
    orderBy?: tbl_videoaulasOrderByWithRelationInput | tbl_videoaulasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_videoaulas.
     */
    cursor?: tbl_videoaulasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_videoaulas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_videoaulas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_videoaulas.
     */
    distinct?: Tbl_videoaulasScalarFieldEnum | Tbl_videoaulasScalarFieldEnum[]
  }

  /**
   * tbl_videoaulas findMany
   */
  export type tbl_videoaulasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_videoaulas to fetch.
     */
    where?: tbl_videoaulasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_videoaulas to fetch.
     */
    orderBy?: tbl_videoaulasOrderByWithRelationInput | tbl_videoaulasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_videoaulas.
     */
    cursor?: tbl_videoaulasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_videoaulas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_videoaulas.
     */
    skip?: number
    distinct?: Tbl_videoaulasScalarFieldEnum | Tbl_videoaulasScalarFieldEnum[]
  }

  /**
   * tbl_videoaulas create
   */
  export type tbl_videoaulasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_videoaulas.
     */
    data: XOR<tbl_videoaulasCreateInput, tbl_videoaulasUncheckedCreateInput>
  }

  /**
   * tbl_videoaulas createMany
   */
  export type tbl_videoaulasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_videoaulas.
     */
    data: tbl_videoaulasCreateManyInput | tbl_videoaulasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_videoaulas update
   */
  export type tbl_videoaulasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_videoaulas.
     */
    data: XOR<tbl_videoaulasUpdateInput, tbl_videoaulasUncheckedUpdateInput>
    /**
     * Choose, which tbl_videoaulas to update.
     */
    where: tbl_videoaulasWhereUniqueInput
  }

  /**
   * tbl_videoaulas updateMany
   */
  export type tbl_videoaulasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_videoaulas.
     */
    data: XOR<tbl_videoaulasUpdateManyMutationInput, tbl_videoaulasUncheckedUpdateManyInput>
    /**
     * Filter which tbl_videoaulas to update
     */
    where?: tbl_videoaulasWhereInput
  }

  /**
   * tbl_videoaulas upsert
   */
  export type tbl_videoaulasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_videoaulas to update in case it exists.
     */
    where: tbl_videoaulasWhereUniqueInput
    /**
     * In case the tbl_videoaulas found by the `where` argument doesn't exist, create a new tbl_videoaulas with this data.
     */
    create: XOR<tbl_videoaulasCreateInput, tbl_videoaulasUncheckedCreateInput>
    /**
     * In case the tbl_videoaulas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_videoaulasUpdateInput, tbl_videoaulasUncheckedUpdateInput>
  }

  /**
   * tbl_videoaulas delete
   */
  export type tbl_videoaulasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
    /**
     * Filter which tbl_videoaulas to delete.
     */
    where: tbl_videoaulasWhereUniqueInput
  }

  /**
   * tbl_videoaulas deleteMany
   */
  export type tbl_videoaulasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_videoaulas to delete
     */
    where?: tbl_videoaulasWhereInput
  }

  /**
   * tbl_videoaulas without action
   */
  export type tbl_videoaulasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_videoaulas
     */
    select?: tbl_videoaulasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_videoaulasInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Caderno_alunoScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    texto: 'texto',
    aluno_id: 'aluno_id'
  };

  export type Caderno_alunoScalarFieldEnum = (typeof Caderno_alunoScalarFieldEnum)[keyof typeof Caderno_alunoScalarFieldEnum]


  export const Tbl_alternativasScalarFieldEnum: {
    id: 'id',
    opcao: 'opcao',
    resposta: 'resposta',
    questao_id: 'questao_id'
  };

  export type Tbl_alternativasScalarFieldEnum = (typeof Tbl_alternativasScalarFieldEnum)[keyof typeof Tbl_alternativasScalarFieldEnum]


  export const Tbl_alunoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    icone_id: 'icone_id',
    curso_id: 'curso_id',
    status: 'status'
  };

  export type Tbl_alunoScalarFieldEnum = (typeof Tbl_alunoScalarFieldEnum)[keyof typeof Tbl_alunoScalarFieldEnum]


  export const Tbl_aluno_agendaScalarFieldEnum: {
    id: 'id',
    carga_horaria: 'carga_horaria',
    semana_id: 'semana_id',
    aluno_id: 'aluno_id'
  };

  export type Tbl_aluno_agendaScalarFieldEnum = (typeof Tbl_aluno_agendaScalarFieldEnum)[keyof typeof Tbl_aluno_agendaScalarFieldEnum]


  export const Tbl_cronogramaScalarFieldEnum: {
    id: 'id',
    agenda_aluno_id: 'agenda_aluno_id',
    disciplina_id: 'disciplina_id'
  };

  export type Tbl_cronogramaScalarFieldEnum = (typeof Tbl_cronogramaScalarFieldEnum)[keyof typeof Tbl_cronogramaScalarFieldEnum]


  export const Tbl_cursosScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tbl_cursosScalarFieldEnum = (typeof Tbl_cursosScalarFieldEnum)[keyof typeof Tbl_cursosScalarFieldEnum]


  export const Tbl_cursos_disciplinaScalarFieldEnum: {
    id: 'id',
    curso_id: 'curso_id',
    disciplina_id: 'disciplina_id'
  };

  export type Tbl_cursos_disciplinaScalarFieldEnum = (typeof Tbl_cursos_disciplinaScalarFieldEnum)[keyof typeof Tbl_cursos_disciplinaScalarFieldEnum]


  export const Tbl_disciplinaScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tbl_disciplinaScalarFieldEnum = (typeof Tbl_disciplinaScalarFieldEnum)[keyof typeof Tbl_disciplinaScalarFieldEnum]


  export const Tbl_disciplina_topicoScalarFieldEnum: {
    id: 'id',
    disciplina_id: 'disciplina_id',
    topico_id: 'topico_id'
  };

  export type Tbl_disciplina_topicoScalarFieldEnum = (typeof Tbl_disciplina_topicoScalarFieldEnum)[keyof typeof Tbl_disciplina_topicoScalarFieldEnum]


  export const Tbl_exercicioScalarFieldEnum: {
    id: 'id',
    questao: 'questao',
    status: 'status'
  };

  export type Tbl_exercicioScalarFieldEnum = (typeof Tbl_exercicioScalarFieldEnum)[keyof typeof Tbl_exercicioScalarFieldEnum]


  export const Tbl_fasesScalarFieldEnum: {
    id: 'id',
    fase: 'fase'
  };

  export type Tbl_fasesScalarFieldEnum = (typeof Tbl_fasesScalarFieldEnum)[keyof typeof Tbl_fasesScalarFieldEnum]


  export const Tbl_horariosScalarFieldEnum: {
    id: 'id',
    horas: 'horas'
  };

  export type Tbl_horariosScalarFieldEnum = (typeof Tbl_horariosScalarFieldEnum)[keyof typeof Tbl_horariosScalarFieldEnum]


  export const Tbl_iconesScalarFieldEnum: {
    id: 'id',
    url: 'url',
    status: 'status'
  };

  export type Tbl_iconesScalarFieldEnum = (typeof Tbl_iconesScalarFieldEnum)[keyof typeof Tbl_iconesScalarFieldEnum]


  export const Tbl_intituicoesScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tbl_intituicoesScalarFieldEnum = (typeof Tbl_intituicoesScalarFieldEnum)[keyof typeof Tbl_intituicoesScalarFieldEnum]


  export const Tbl_prof_agendaScalarFieldEnum: {
    id: 'id',
    carga_horaria: 'carga_horaria',
    semana_id: 'semana_id',
    professor_id: 'professor_id'
  };

  export type Tbl_prof_agendaScalarFieldEnum = (typeof Tbl_prof_agendaScalarFieldEnum)[keyof typeof Tbl_prof_agendaScalarFieldEnum]


  export const Tbl_prof_disciplinasScalarFieldEnum: {
    id: 'id',
    disciplina_id: 'disciplina_id',
    professor_id: 'professor_id'
  };

  export type Tbl_prof_disciplinasScalarFieldEnum = (typeof Tbl_prof_disciplinasScalarFieldEnum)[keyof typeof Tbl_prof_disciplinasScalarFieldEnum]


  export const Tbl_professorScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    icone_id: 'icone_id',
    status: 'status'
  };

  export type Tbl_professorScalarFieldEnum = (typeof Tbl_professorScalarFieldEnum)[keyof typeof Tbl_professorScalarFieldEnum]


  export const Tbl_redacaoScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    texto: 'texto',
    tema_id: 'tema_id',
    status: 'status'
  };

  export type Tbl_redacaoScalarFieldEnum = (typeof Tbl_redacaoScalarFieldEnum)[keyof typeof Tbl_redacaoScalarFieldEnum]


  export const Tbl_semanaScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tbl_semanaScalarFieldEnum = (typeof Tbl_semanaScalarFieldEnum)[keyof typeof Tbl_semanaScalarFieldEnum]


  export const Tbl_temaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao'
  };

  export type Tbl_temaScalarFieldEnum = (typeof Tbl_temaScalarFieldEnum)[keyof typeof Tbl_temaScalarFieldEnum]


  export const Tbl_topicosScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tbl_topicosScalarFieldEnum = (typeof Tbl_topicosScalarFieldEnum)[keyof typeof Tbl_topicosScalarFieldEnum]


  export const Tbl_vest_fasesScalarFieldEnum: {
    id: 'id',
    vestibular_id: 'vestibular_id',
    fase_id: 'fase_id'
  };

  export type Tbl_vest_fasesScalarFieldEnum = (typeof Tbl_vest_fasesScalarFieldEnum)[keyof typeof Tbl_vest_fasesScalarFieldEnum]


  export const Tbl_vestibularesScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    data_prova: 'data_prova',
    instituicao_id: 'instituicao_id',
    status: 'status'
  };

  export type Tbl_vestibularesScalarFieldEnum = (typeof Tbl_vestibularesScalarFieldEnum)[keyof typeof Tbl_vestibularesScalarFieldEnum]


  export const Tbl_videoaulasScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    duracao: 'duracao',
    topico_id: 'topico_id',
    status: 'status'
  };

  export type Tbl_videoaulasScalarFieldEnum = (typeof Tbl_videoaulasScalarFieldEnum)[keyof typeof Tbl_videoaulasScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type caderno_alunoWhereInput = {
    AND?: caderno_alunoWhereInput | caderno_alunoWhereInput[]
    OR?: caderno_alunoWhereInput[]
    NOT?: caderno_alunoWhereInput | caderno_alunoWhereInput[]
    id?: IntFilter<"caderno_aluno"> | number
    titulo?: StringFilter<"caderno_aluno"> | string
    texto?: StringFilter<"caderno_aluno"> | string
    aluno_id?: IntFilter<"caderno_aluno"> | number
    tbl_aluno?: XOR<Tbl_alunoRelationFilter, tbl_alunoWhereInput>
  }

  export type caderno_alunoOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    aluno_id?: SortOrder
    tbl_aluno?: tbl_alunoOrderByWithRelationInput
  }

  export type caderno_alunoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: caderno_alunoWhereInput | caderno_alunoWhereInput[]
    OR?: caderno_alunoWhereInput[]
    NOT?: caderno_alunoWhereInput | caderno_alunoWhereInput[]
    titulo?: StringFilter<"caderno_aluno"> | string
    texto?: StringFilter<"caderno_aluno"> | string
    aluno_id?: IntFilter<"caderno_aluno"> | number
    tbl_aluno?: XOR<Tbl_alunoRelationFilter, tbl_alunoWhereInput>
  }, "id">

  export type caderno_alunoOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    aluno_id?: SortOrder
    _count?: caderno_alunoCountOrderByAggregateInput
    _avg?: caderno_alunoAvgOrderByAggregateInput
    _max?: caderno_alunoMaxOrderByAggregateInput
    _min?: caderno_alunoMinOrderByAggregateInput
    _sum?: caderno_alunoSumOrderByAggregateInput
  }

  export type caderno_alunoScalarWhereWithAggregatesInput = {
    AND?: caderno_alunoScalarWhereWithAggregatesInput | caderno_alunoScalarWhereWithAggregatesInput[]
    OR?: caderno_alunoScalarWhereWithAggregatesInput[]
    NOT?: caderno_alunoScalarWhereWithAggregatesInput | caderno_alunoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"caderno_aluno"> | number
    titulo?: StringWithAggregatesFilter<"caderno_aluno"> | string
    texto?: StringWithAggregatesFilter<"caderno_aluno"> | string
    aluno_id?: IntWithAggregatesFilter<"caderno_aluno"> | number
  }

  export type tbl_alternativasWhereInput = {
    AND?: tbl_alternativasWhereInput | tbl_alternativasWhereInput[]
    OR?: tbl_alternativasWhereInput[]
    NOT?: tbl_alternativasWhereInput | tbl_alternativasWhereInput[]
    id?: IntFilter<"tbl_alternativas"> | number
    opcao?: StringFilter<"tbl_alternativas"> | string
    resposta?: BoolFilter<"tbl_alternativas"> | boolean
    questao_id?: IntFilter<"tbl_alternativas"> | number
    tbl_exercicio?: XOR<Tbl_exercicioRelationFilter, tbl_exercicioWhereInput>
  }

  export type tbl_alternativasOrderByWithRelationInput = {
    id?: SortOrder
    opcao?: SortOrder
    resposta?: SortOrder
    questao_id?: SortOrder
    tbl_exercicio?: tbl_exercicioOrderByWithRelationInput
  }

  export type tbl_alternativasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_alternativasWhereInput | tbl_alternativasWhereInput[]
    OR?: tbl_alternativasWhereInput[]
    NOT?: tbl_alternativasWhereInput | tbl_alternativasWhereInput[]
    opcao?: StringFilter<"tbl_alternativas"> | string
    resposta?: BoolFilter<"tbl_alternativas"> | boolean
    questao_id?: IntFilter<"tbl_alternativas"> | number
    tbl_exercicio?: XOR<Tbl_exercicioRelationFilter, tbl_exercicioWhereInput>
  }, "id">

  export type tbl_alternativasOrderByWithAggregationInput = {
    id?: SortOrder
    opcao?: SortOrder
    resposta?: SortOrder
    questao_id?: SortOrder
    _count?: tbl_alternativasCountOrderByAggregateInput
    _avg?: tbl_alternativasAvgOrderByAggregateInput
    _max?: tbl_alternativasMaxOrderByAggregateInput
    _min?: tbl_alternativasMinOrderByAggregateInput
    _sum?: tbl_alternativasSumOrderByAggregateInput
  }

  export type tbl_alternativasScalarWhereWithAggregatesInput = {
    AND?: tbl_alternativasScalarWhereWithAggregatesInput | tbl_alternativasScalarWhereWithAggregatesInput[]
    OR?: tbl_alternativasScalarWhereWithAggregatesInput[]
    NOT?: tbl_alternativasScalarWhereWithAggregatesInput | tbl_alternativasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_alternativas"> | number
    opcao?: StringWithAggregatesFilter<"tbl_alternativas"> | string
    resposta?: BoolWithAggregatesFilter<"tbl_alternativas"> | boolean
    questao_id?: IntWithAggregatesFilter<"tbl_alternativas"> | number
  }

  export type tbl_alunoWhereInput = {
    AND?: tbl_alunoWhereInput | tbl_alunoWhereInput[]
    OR?: tbl_alunoWhereInput[]
    NOT?: tbl_alunoWhereInput | tbl_alunoWhereInput[]
    id?: IntFilter<"tbl_aluno"> | number
    nome?: StringFilter<"tbl_aluno"> | string
    email?: StringFilter<"tbl_aluno"> | string
    senha?: StringNullableFilter<"tbl_aluno"> | string | null
    icone_id?: IntFilter<"tbl_aluno"> | number
    curso_id?: IntFilter<"tbl_aluno"> | number
    status?: BoolNullableFilter<"tbl_aluno"> | boolean | null
    caderno_aluno?: Caderno_alunoListRelationFilter
    tbl_icones?: XOR<Tbl_iconesRelationFilter, tbl_iconesWhereInput>
    tbl_cursos?: XOR<Tbl_cursosRelationFilter, tbl_cursosWhereInput>
    tbl_aluno_agenda?: Tbl_aluno_agendaListRelationFilter
  }

  export type tbl_alunoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrderInput | SortOrder
    icone_id?: SortOrder
    curso_id?: SortOrder
    status?: SortOrderInput | SortOrder
    caderno_aluno?: caderno_alunoOrderByRelationAggregateInput
    tbl_icones?: tbl_iconesOrderByWithRelationInput
    tbl_cursos?: tbl_cursosOrderByWithRelationInput
    tbl_aluno_agenda?: tbl_aluno_agendaOrderByRelationAggregateInput
  }

  export type tbl_alunoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_alunoWhereInput | tbl_alunoWhereInput[]
    OR?: tbl_alunoWhereInput[]
    NOT?: tbl_alunoWhereInput | tbl_alunoWhereInput[]
    nome?: StringFilter<"tbl_aluno"> | string
    email?: StringFilter<"tbl_aluno"> | string
    senha?: StringNullableFilter<"tbl_aluno"> | string | null
    icone_id?: IntFilter<"tbl_aluno"> | number
    curso_id?: IntFilter<"tbl_aluno"> | number
    status?: BoolNullableFilter<"tbl_aluno"> | boolean | null
    caderno_aluno?: Caderno_alunoListRelationFilter
    tbl_icones?: XOR<Tbl_iconesRelationFilter, tbl_iconesWhereInput>
    tbl_cursos?: XOR<Tbl_cursosRelationFilter, tbl_cursosWhereInput>
    tbl_aluno_agenda?: Tbl_aluno_agendaListRelationFilter
  }, "id">

  export type tbl_alunoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrderInput | SortOrder
    icone_id?: SortOrder
    curso_id?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: tbl_alunoCountOrderByAggregateInput
    _avg?: tbl_alunoAvgOrderByAggregateInput
    _max?: tbl_alunoMaxOrderByAggregateInput
    _min?: tbl_alunoMinOrderByAggregateInput
    _sum?: tbl_alunoSumOrderByAggregateInput
  }

  export type tbl_alunoScalarWhereWithAggregatesInput = {
    AND?: tbl_alunoScalarWhereWithAggregatesInput | tbl_alunoScalarWhereWithAggregatesInput[]
    OR?: tbl_alunoScalarWhereWithAggregatesInput[]
    NOT?: tbl_alunoScalarWhereWithAggregatesInput | tbl_alunoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_aluno"> | number
    nome?: StringWithAggregatesFilter<"tbl_aluno"> | string
    email?: StringWithAggregatesFilter<"tbl_aluno"> | string
    senha?: StringNullableWithAggregatesFilter<"tbl_aluno"> | string | null
    icone_id?: IntWithAggregatesFilter<"tbl_aluno"> | number
    curso_id?: IntWithAggregatesFilter<"tbl_aluno"> | number
    status?: BoolNullableWithAggregatesFilter<"tbl_aluno"> | boolean | null
  }

  export type tbl_aluno_agendaWhereInput = {
    AND?: tbl_aluno_agendaWhereInput | tbl_aluno_agendaWhereInput[]
    OR?: tbl_aluno_agendaWhereInput[]
    NOT?: tbl_aluno_agendaWhereInput | tbl_aluno_agendaWhereInput[]
    id?: IntFilter<"tbl_aluno_agenda"> | number
    carga_horaria?: IntFilter<"tbl_aluno_agenda"> | number
    semana_id?: IntFilter<"tbl_aluno_agenda"> | number
    aluno_id?: IntFilter<"tbl_aluno_agenda"> | number
    tbl_semana?: XOR<Tbl_semanaRelationFilter, tbl_semanaWhereInput>
    tbl_aluno?: XOR<Tbl_alunoRelationFilter, tbl_alunoWhereInput>
    tbl_cronograma?: Tbl_cronogramaListRelationFilter
  }

  export type tbl_aluno_agendaOrderByWithRelationInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    aluno_id?: SortOrder
    tbl_semana?: tbl_semanaOrderByWithRelationInput
    tbl_aluno?: tbl_alunoOrderByWithRelationInput
    tbl_cronograma?: tbl_cronogramaOrderByRelationAggregateInput
  }

  export type tbl_aluno_agendaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_aluno_agendaWhereInput | tbl_aluno_agendaWhereInput[]
    OR?: tbl_aluno_agendaWhereInput[]
    NOT?: tbl_aluno_agendaWhereInput | tbl_aluno_agendaWhereInput[]
    carga_horaria?: IntFilter<"tbl_aluno_agenda"> | number
    semana_id?: IntFilter<"tbl_aluno_agenda"> | number
    aluno_id?: IntFilter<"tbl_aluno_agenda"> | number
    tbl_semana?: XOR<Tbl_semanaRelationFilter, tbl_semanaWhereInput>
    tbl_aluno?: XOR<Tbl_alunoRelationFilter, tbl_alunoWhereInput>
    tbl_cronograma?: Tbl_cronogramaListRelationFilter
  }, "id">

  export type tbl_aluno_agendaOrderByWithAggregationInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    aluno_id?: SortOrder
    _count?: tbl_aluno_agendaCountOrderByAggregateInput
    _avg?: tbl_aluno_agendaAvgOrderByAggregateInput
    _max?: tbl_aluno_agendaMaxOrderByAggregateInput
    _min?: tbl_aluno_agendaMinOrderByAggregateInput
    _sum?: tbl_aluno_agendaSumOrderByAggregateInput
  }

  export type tbl_aluno_agendaScalarWhereWithAggregatesInput = {
    AND?: tbl_aluno_agendaScalarWhereWithAggregatesInput | tbl_aluno_agendaScalarWhereWithAggregatesInput[]
    OR?: tbl_aluno_agendaScalarWhereWithAggregatesInput[]
    NOT?: tbl_aluno_agendaScalarWhereWithAggregatesInput | tbl_aluno_agendaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_aluno_agenda"> | number
    carga_horaria?: IntWithAggregatesFilter<"tbl_aluno_agenda"> | number
    semana_id?: IntWithAggregatesFilter<"tbl_aluno_agenda"> | number
    aluno_id?: IntWithAggregatesFilter<"tbl_aluno_agenda"> | number
  }

  export type tbl_cronogramaWhereInput = {
    AND?: tbl_cronogramaWhereInput | tbl_cronogramaWhereInput[]
    OR?: tbl_cronogramaWhereInput[]
    NOT?: tbl_cronogramaWhereInput | tbl_cronogramaWhereInput[]
    id?: IntFilter<"tbl_cronograma"> | number
    agenda_aluno_id?: IntFilter<"tbl_cronograma"> | number
    disciplina_id?: IntFilter<"tbl_cronograma"> | number
    tbl_aluno_agenda?: XOR<Tbl_aluno_agendaRelationFilter, tbl_aluno_agendaWhereInput>
    tbl_disciplina?: XOR<Tbl_disciplinaRelationFilter, tbl_disciplinaWhereInput>
  }

  export type tbl_cronogramaOrderByWithRelationInput = {
    id?: SortOrder
    agenda_aluno_id?: SortOrder
    disciplina_id?: SortOrder
    tbl_aluno_agenda?: tbl_aluno_agendaOrderByWithRelationInput
    tbl_disciplina?: tbl_disciplinaOrderByWithRelationInput
  }

  export type tbl_cronogramaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_cronogramaWhereInput | tbl_cronogramaWhereInput[]
    OR?: tbl_cronogramaWhereInput[]
    NOT?: tbl_cronogramaWhereInput | tbl_cronogramaWhereInput[]
    agenda_aluno_id?: IntFilter<"tbl_cronograma"> | number
    disciplina_id?: IntFilter<"tbl_cronograma"> | number
    tbl_aluno_agenda?: XOR<Tbl_aluno_agendaRelationFilter, tbl_aluno_agendaWhereInput>
    tbl_disciplina?: XOR<Tbl_disciplinaRelationFilter, tbl_disciplinaWhereInput>
  }, "id">

  export type tbl_cronogramaOrderByWithAggregationInput = {
    id?: SortOrder
    agenda_aluno_id?: SortOrder
    disciplina_id?: SortOrder
    _count?: tbl_cronogramaCountOrderByAggregateInput
    _avg?: tbl_cronogramaAvgOrderByAggregateInput
    _max?: tbl_cronogramaMaxOrderByAggregateInput
    _min?: tbl_cronogramaMinOrderByAggregateInput
    _sum?: tbl_cronogramaSumOrderByAggregateInput
  }

  export type tbl_cronogramaScalarWhereWithAggregatesInput = {
    AND?: tbl_cronogramaScalarWhereWithAggregatesInput | tbl_cronogramaScalarWhereWithAggregatesInput[]
    OR?: tbl_cronogramaScalarWhereWithAggregatesInput[]
    NOT?: tbl_cronogramaScalarWhereWithAggregatesInput | tbl_cronogramaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_cronograma"> | number
    agenda_aluno_id?: IntWithAggregatesFilter<"tbl_cronograma"> | number
    disciplina_id?: IntWithAggregatesFilter<"tbl_cronograma"> | number
  }

  export type tbl_cursosWhereInput = {
    AND?: tbl_cursosWhereInput | tbl_cursosWhereInput[]
    OR?: tbl_cursosWhereInput[]
    NOT?: tbl_cursosWhereInput | tbl_cursosWhereInput[]
    id?: IntFilter<"tbl_cursos"> | number
    nome?: StringFilter<"tbl_cursos"> | string
    tbl_aluno?: Tbl_alunoListRelationFilter
    tbl_cursos_disciplina?: Tbl_cursos_disciplinaListRelationFilter
  }

  export type tbl_cursosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tbl_aluno?: tbl_alunoOrderByRelationAggregateInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaOrderByRelationAggregateInput
  }

  export type tbl_cursosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_cursosWhereInput | tbl_cursosWhereInput[]
    OR?: tbl_cursosWhereInput[]
    NOT?: tbl_cursosWhereInput | tbl_cursosWhereInput[]
    nome?: StringFilter<"tbl_cursos"> | string
    tbl_aluno?: Tbl_alunoListRelationFilter
    tbl_cursos_disciplina?: Tbl_cursos_disciplinaListRelationFilter
  }, "id">

  export type tbl_cursosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: tbl_cursosCountOrderByAggregateInput
    _avg?: tbl_cursosAvgOrderByAggregateInput
    _max?: tbl_cursosMaxOrderByAggregateInput
    _min?: tbl_cursosMinOrderByAggregateInput
    _sum?: tbl_cursosSumOrderByAggregateInput
  }

  export type tbl_cursosScalarWhereWithAggregatesInput = {
    AND?: tbl_cursosScalarWhereWithAggregatesInput | tbl_cursosScalarWhereWithAggregatesInput[]
    OR?: tbl_cursosScalarWhereWithAggregatesInput[]
    NOT?: tbl_cursosScalarWhereWithAggregatesInput | tbl_cursosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_cursos"> | number
    nome?: StringWithAggregatesFilter<"tbl_cursos"> | string
  }

  export type tbl_cursos_disciplinaWhereInput = {
    AND?: tbl_cursos_disciplinaWhereInput | tbl_cursos_disciplinaWhereInput[]
    OR?: tbl_cursos_disciplinaWhereInput[]
    NOT?: tbl_cursos_disciplinaWhereInput | tbl_cursos_disciplinaWhereInput[]
    id?: IntFilter<"tbl_cursos_disciplina"> | number
    curso_id?: IntFilter<"tbl_cursos_disciplina"> | number
    disciplina_id?: IntFilter<"tbl_cursos_disciplina"> | number
    tbl_cursos?: XOR<Tbl_cursosRelationFilter, tbl_cursosWhereInput>
    tbl_disciplina?: XOR<Tbl_disciplinaRelationFilter, tbl_disciplinaWhereInput>
  }

  export type tbl_cursos_disciplinaOrderByWithRelationInput = {
    id?: SortOrder
    curso_id?: SortOrder
    disciplina_id?: SortOrder
    tbl_cursos?: tbl_cursosOrderByWithRelationInput
    tbl_disciplina?: tbl_disciplinaOrderByWithRelationInput
  }

  export type tbl_cursos_disciplinaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_cursos_disciplinaWhereInput | tbl_cursos_disciplinaWhereInput[]
    OR?: tbl_cursos_disciplinaWhereInput[]
    NOT?: tbl_cursos_disciplinaWhereInput | tbl_cursos_disciplinaWhereInput[]
    curso_id?: IntFilter<"tbl_cursos_disciplina"> | number
    disciplina_id?: IntFilter<"tbl_cursos_disciplina"> | number
    tbl_cursos?: XOR<Tbl_cursosRelationFilter, tbl_cursosWhereInput>
    tbl_disciplina?: XOR<Tbl_disciplinaRelationFilter, tbl_disciplinaWhereInput>
  }, "id">

  export type tbl_cursos_disciplinaOrderByWithAggregationInput = {
    id?: SortOrder
    curso_id?: SortOrder
    disciplina_id?: SortOrder
    _count?: tbl_cursos_disciplinaCountOrderByAggregateInput
    _avg?: tbl_cursos_disciplinaAvgOrderByAggregateInput
    _max?: tbl_cursos_disciplinaMaxOrderByAggregateInput
    _min?: tbl_cursos_disciplinaMinOrderByAggregateInput
    _sum?: tbl_cursos_disciplinaSumOrderByAggregateInput
  }

  export type tbl_cursos_disciplinaScalarWhereWithAggregatesInput = {
    AND?: tbl_cursos_disciplinaScalarWhereWithAggregatesInput | tbl_cursos_disciplinaScalarWhereWithAggregatesInput[]
    OR?: tbl_cursos_disciplinaScalarWhereWithAggregatesInput[]
    NOT?: tbl_cursos_disciplinaScalarWhereWithAggregatesInput | tbl_cursos_disciplinaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_cursos_disciplina"> | number
    curso_id?: IntWithAggregatesFilter<"tbl_cursos_disciplina"> | number
    disciplina_id?: IntWithAggregatesFilter<"tbl_cursos_disciplina"> | number
  }

  export type tbl_disciplinaWhereInput = {
    AND?: tbl_disciplinaWhereInput | tbl_disciplinaWhereInput[]
    OR?: tbl_disciplinaWhereInput[]
    NOT?: tbl_disciplinaWhereInput | tbl_disciplinaWhereInput[]
    id?: IntFilter<"tbl_disciplina"> | number
    nome?: StringFilter<"tbl_disciplina"> | string
    tbl_cronograma?: Tbl_cronogramaListRelationFilter
    tbl_cursos_disciplina?: Tbl_cursos_disciplinaListRelationFilter
    tbl_disciplina_topico?: Tbl_disciplina_topicoListRelationFilter
    tbl_prof_disciplinas?: Tbl_prof_disciplinasListRelationFilter
  }

  export type tbl_disciplinaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tbl_cronograma?: tbl_cronogramaOrderByRelationAggregateInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaOrderByRelationAggregateInput
    tbl_disciplina_topico?: tbl_disciplina_topicoOrderByRelationAggregateInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasOrderByRelationAggregateInput
  }

  export type tbl_disciplinaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_disciplinaWhereInput | tbl_disciplinaWhereInput[]
    OR?: tbl_disciplinaWhereInput[]
    NOT?: tbl_disciplinaWhereInput | tbl_disciplinaWhereInput[]
    nome?: StringFilter<"tbl_disciplina"> | string
    tbl_cronograma?: Tbl_cronogramaListRelationFilter
    tbl_cursos_disciplina?: Tbl_cursos_disciplinaListRelationFilter
    tbl_disciplina_topico?: Tbl_disciplina_topicoListRelationFilter
    tbl_prof_disciplinas?: Tbl_prof_disciplinasListRelationFilter
  }, "id">

  export type tbl_disciplinaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: tbl_disciplinaCountOrderByAggregateInput
    _avg?: tbl_disciplinaAvgOrderByAggregateInput
    _max?: tbl_disciplinaMaxOrderByAggregateInput
    _min?: tbl_disciplinaMinOrderByAggregateInput
    _sum?: tbl_disciplinaSumOrderByAggregateInput
  }

  export type tbl_disciplinaScalarWhereWithAggregatesInput = {
    AND?: tbl_disciplinaScalarWhereWithAggregatesInput | tbl_disciplinaScalarWhereWithAggregatesInput[]
    OR?: tbl_disciplinaScalarWhereWithAggregatesInput[]
    NOT?: tbl_disciplinaScalarWhereWithAggregatesInput | tbl_disciplinaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_disciplina"> | number
    nome?: StringWithAggregatesFilter<"tbl_disciplina"> | string
  }

  export type tbl_disciplina_topicoWhereInput = {
    AND?: tbl_disciplina_topicoWhereInput | tbl_disciplina_topicoWhereInput[]
    OR?: tbl_disciplina_topicoWhereInput[]
    NOT?: tbl_disciplina_topicoWhereInput | tbl_disciplina_topicoWhereInput[]
    id?: IntFilter<"tbl_disciplina_topico"> | number
    disciplina_id?: IntFilter<"tbl_disciplina_topico"> | number
    topico_id?: IntFilter<"tbl_disciplina_topico"> | number
    tbl_disciplina?: XOR<Tbl_disciplinaRelationFilter, tbl_disciplinaWhereInput>
    tbl_topicos?: XOR<Tbl_topicosRelationFilter, tbl_topicosWhereInput>
  }

  export type tbl_disciplina_topicoOrderByWithRelationInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    topico_id?: SortOrder
    tbl_disciplina?: tbl_disciplinaOrderByWithRelationInput
    tbl_topicos?: tbl_topicosOrderByWithRelationInput
  }

  export type tbl_disciplina_topicoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_disciplina_topicoWhereInput | tbl_disciplina_topicoWhereInput[]
    OR?: tbl_disciplina_topicoWhereInput[]
    NOT?: tbl_disciplina_topicoWhereInput | tbl_disciplina_topicoWhereInput[]
    disciplina_id?: IntFilter<"tbl_disciplina_topico"> | number
    topico_id?: IntFilter<"tbl_disciplina_topico"> | number
    tbl_disciplina?: XOR<Tbl_disciplinaRelationFilter, tbl_disciplinaWhereInput>
    tbl_topicos?: XOR<Tbl_topicosRelationFilter, tbl_topicosWhereInput>
  }, "id">

  export type tbl_disciplina_topicoOrderByWithAggregationInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    topico_id?: SortOrder
    _count?: tbl_disciplina_topicoCountOrderByAggregateInput
    _avg?: tbl_disciplina_topicoAvgOrderByAggregateInput
    _max?: tbl_disciplina_topicoMaxOrderByAggregateInput
    _min?: tbl_disciplina_topicoMinOrderByAggregateInput
    _sum?: tbl_disciplina_topicoSumOrderByAggregateInput
  }

  export type tbl_disciplina_topicoScalarWhereWithAggregatesInput = {
    AND?: tbl_disciplina_topicoScalarWhereWithAggregatesInput | tbl_disciplina_topicoScalarWhereWithAggregatesInput[]
    OR?: tbl_disciplina_topicoScalarWhereWithAggregatesInput[]
    NOT?: tbl_disciplina_topicoScalarWhereWithAggregatesInput | tbl_disciplina_topicoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_disciplina_topico"> | number
    disciplina_id?: IntWithAggregatesFilter<"tbl_disciplina_topico"> | number
    topico_id?: IntWithAggregatesFilter<"tbl_disciplina_topico"> | number
  }

  export type tbl_exercicioWhereInput = {
    AND?: tbl_exercicioWhereInput | tbl_exercicioWhereInput[]
    OR?: tbl_exercicioWhereInput[]
    NOT?: tbl_exercicioWhereInput | tbl_exercicioWhereInput[]
    id?: IntFilter<"tbl_exercicio"> | number
    questao?: StringNullableFilter<"tbl_exercicio"> | string | null
    status?: BoolNullableFilter<"tbl_exercicio"> | boolean | null
    tbl_alternativas?: Tbl_alternativasListRelationFilter
  }

  export type tbl_exercicioOrderByWithRelationInput = {
    id?: SortOrder
    questao?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    tbl_alternativas?: tbl_alternativasOrderByRelationAggregateInput
  }

  export type tbl_exercicioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_exercicioWhereInput | tbl_exercicioWhereInput[]
    OR?: tbl_exercicioWhereInput[]
    NOT?: tbl_exercicioWhereInput | tbl_exercicioWhereInput[]
    questao?: StringNullableFilter<"tbl_exercicio"> | string | null
    status?: BoolNullableFilter<"tbl_exercicio"> | boolean | null
    tbl_alternativas?: Tbl_alternativasListRelationFilter
  }, "id">

  export type tbl_exercicioOrderByWithAggregationInput = {
    id?: SortOrder
    questao?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    _count?: tbl_exercicioCountOrderByAggregateInput
    _avg?: tbl_exercicioAvgOrderByAggregateInput
    _max?: tbl_exercicioMaxOrderByAggregateInput
    _min?: tbl_exercicioMinOrderByAggregateInput
    _sum?: tbl_exercicioSumOrderByAggregateInput
  }

  export type tbl_exercicioScalarWhereWithAggregatesInput = {
    AND?: tbl_exercicioScalarWhereWithAggregatesInput | tbl_exercicioScalarWhereWithAggregatesInput[]
    OR?: tbl_exercicioScalarWhereWithAggregatesInput[]
    NOT?: tbl_exercicioScalarWhereWithAggregatesInput | tbl_exercicioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_exercicio"> | number
    questao?: StringNullableWithAggregatesFilter<"tbl_exercicio"> | string | null
    status?: BoolNullableWithAggregatesFilter<"tbl_exercicio"> | boolean | null
  }

  export type tbl_fasesWhereInput = {
    AND?: tbl_fasesWhereInput | tbl_fasesWhereInput[]
    OR?: tbl_fasesWhereInput[]
    NOT?: tbl_fasesWhereInput | tbl_fasesWhereInput[]
    id?: IntFilter<"tbl_fases"> | number
    fase?: IntNullableFilter<"tbl_fases"> | number | null
    tbl_vest_fases?: Tbl_vest_fasesListRelationFilter
  }

  export type tbl_fasesOrderByWithRelationInput = {
    id?: SortOrder
    fase?: SortOrderInput | SortOrder
    tbl_vest_fases?: tbl_vest_fasesOrderByRelationAggregateInput
  }

  export type tbl_fasesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_fasesWhereInput | tbl_fasesWhereInput[]
    OR?: tbl_fasesWhereInput[]
    NOT?: tbl_fasesWhereInput | tbl_fasesWhereInput[]
    fase?: IntNullableFilter<"tbl_fases"> | number | null
    tbl_vest_fases?: Tbl_vest_fasesListRelationFilter
  }, "id">

  export type tbl_fasesOrderByWithAggregationInput = {
    id?: SortOrder
    fase?: SortOrderInput | SortOrder
    _count?: tbl_fasesCountOrderByAggregateInput
    _avg?: tbl_fasesAvgOrderByAggregateInput
    _max?: tbl_fasesMaxOrderByAggregateInput
    _min?: tbl_fasesMinOrderByAggregateInput
    _sum?: tbl_fasesSumOrderByAggregateInput
  }

  export type tbl_fasesScalarWhereWithAggregatesInput = {
    AND?: tbl_fasesScalarWhereWithAggregatesInput | tbl_fasesScalarWhereWithAggregatesInput[]
    OR?: tbl_fasesScalarWhereWithAggregatesInput[]
    NOT?: tbl_fasesScalarWhereWithAggregatesInput | tbl_fasesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_fases"> | number
    fase?: IntNullableWithAggregatesFilter<"tbl_fases"> | number | null
  }

  export type tbl_horariosWhereInput = {
    AND?: tbl_horariosWhereInput | tbl_horariosWhereInput[]
    OR?: tbl_horariosWhereInput[]
    NOT?: tbl_horariosWhereInput | tbl_horariosWhereInput[]
    id?: IntFilter<"tbl_horarios"> | number
    horas?: DateTimeFilter<"tbl_horarios"> | Date | string
  }

  export type tbl_horariosOrderByWithRelationInput = {
    id?: SortOrder
    horas?: SortOrder
  }

  export type tbl_horariosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_horariosWhereInput | tbl_horariosWhereInput[]
    OR?: tbl_horariosWhereInput[]
    NOT?: tbl_horariosWhereInput | tbl_horariosWhereInput[]
    horas?: DateTimeFilter<"tbl_horarios"> | Date | string
  }, "id">

  export type tbl_horariosOrderByWithAggregationInput = {
    id?: SortOrder
    horas?: SortOrder
    _count?: tbl_horariosCountOrderByAggregateInput
    _avg?: tbl_horariosAvgOrderByAggregateInput
    _max?: tbl_horariosMaxOrderByAggregateInput
    _min?: tbl_horariosMinOrderByAggregateInput
    _sum?: tbl_horariosSumOrderByAggregateInput
  }

  export type tbl_horariosScalarWhereWithAggregatesInput = {
    AND?: tbl_horariosScalarWhereWithAggregatesInput | tbl_horariosScalarWhereWithAggregatesInput[]
    OR?: tbl_horariosScalarWhereWithAggregatesInput[]
    NOT?: tbl_horariosScalarWhereWithAggregatesInput | tbl_horariosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_horarios"> | number
    horas?: DateTimeWithAggregatesFilter<"tbl_horarios"> | Date | string
  }

  export type tbl_iconesWhereInput = {
    AND?: tbl_iconesWhereInput | tbl_iconesWhereInput[]
    OR?: tbl_iconesWhereInput[]
    NOT?: tbl_iconesWhereInput | tbl_iconesWhereInput[]
    id?: IntFilter<"tbl_icones"> | number
    url?: StringFilter<"tbl_icones"> | string
    status?: BoolNullableFilter<"tbl_icones"> | boolean | null
    tbl_aluno?: Tbl_alunoListRelationFilter
    tbl_professor?: Tbl_professorListRelationFilter
  }

  export type tbl_iconesOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrderInput | SortOrder
    tbl_aluno?: tbl_alunoOrderByRelationAggregateInput
    tbl_professor?: tbl_professorOrderByRelationAggregateInput
  }

  export type tbl_iconesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_iconesWhereInput | tbl_iconesWhereInput[]
    OR?: tbl_iconesWhereInput[]
    NOT?: tbl_iconesWhereInput | tbl_iconesWhereInput[]
    url?: StringFilter<"tbl_icones"> | string
    status?: BoolNullableFilter<"tbl_icones"> | boolean | null
    tbl_aluno?: Tbl_alunoListRelationFilter
    tbl_professor?: Tbl_professorListRelationFilter
  }, "id">

  export type tbl_iconesOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: tbl_iconesCountOrderByAggregateInput
    _avg?: tbl_iconesAvgOrderByAggregateInput
    _max?: tbl_iconesMaxOrderByAggregateInput
    _min?: tbl_iconesMinOrderByAggregateInput
    _sum?: tbl_iconesSumOrderByAggregateInput
  }

  export type tbl_iconesScalarWhereWithAggregatesInput = {
    AND?: tbl_iconesScalarWhereWithAggregatesInput | tbl_iconesScalarWhereWithAggregatesInput[]
    OR?: tbl_iconesScalarWhereWithAggregatesInput[]
    NOT?: tbl_iconesScalarWhereWithAggregatesInput | tbl_iconesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_icones"> | number
    url?: StringWithAggregatesFilter<"tbl_icones"> | string
    status?: BoolNullableWithAggregatesFilter<"tbl_icones"> | boolean | null
  }

  export type tbl_intituicoesWhereInput = {
    AND?: tbl_intituicoesWhereInput | tbl_intituicoesWhereInput[]
    OR?: tbl_intituicoesWhereInput[]
    NOT?: tbl_intituicoesWhereInput | tbl_intituicoesWhereInput[]
    id?: IntFilter<"tbl_intituicoes"> | number
    nome?: StringFilter<"tbl_intituicoes"> | string
    tbl_vestibulares?: Tbl_vestibularesListRelationFilter
  }

  export type tbl_intituicoesOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tbl_vestibulares?: tbl_vestibularesOrderByRelationAggregateInput
  }

  export type tbl_intituicoesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_intituicoesWhereInput | tbl_intituicoesWhereInput[]
    OR?: tbl_intituicoesWhereInput[]
    NOT?: tbl_intituicoesWhereInput | tbl_intituicoesWhereInput[]
    nome?: StringFilter<"tbl_intituicoes"> | string
    tbl_vestibulares?: Tbl_vestibularesListRelationFilter
  }, "id">

  export type tbl_intituicoesOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: tbl_intituicoesCountOrderByAggregateInput
    _avg?: tbl_intituicoesAvgOrderByAggregateInput
    _max?: tbl_intituicoesMaxOrderByAggregateInput
    _min?: tbl_intituicoesMinOrderByAggregateInput
    _sum?: tbl_intituicoesSumOrderByAggregateInput
  }

  export type tbl_intituicoesScalarWhereWithAggregatesInput = {
    AND?: tbl_intituicoesScalarWhereWithAggregatesInput | tbl_intituicoesScalarWhereWithAggregatesInput[]
    OR?: tbl_intituicoesScalarWhereWithAggregatesInput[]
    NOT?: tbl_intituicoesScalarWhereWithAggregatesInput | tbl_intituicoesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_intituicoes"> | number
    nome?: StringWithAggregatesFilter<"tbl_intituicoes"> | string
  }

  export type tbl_prof_agendaWhereInput = {
    AND?: tbl_prof_agendaWhereInput | tbl_prof_agendaWhereInput[]
    OR?: tbl_prof_agendaWhereInput[]
    NOT?: tbl_prof_agendaWhereInput | tbl_prof_agendaWhereInput[]
    id?: IntFilter<"tbl_prof_agenda"> | number
    carga_horaria?: IntFilter<"tbl_prof_agenda"> | number
    semana_id?: IntFilter<"tbl_prof_agenda"> | number
    professor_id?: IntFilter<"tbl_prof_agenda"> | number
    tbl_semana?: XOR<Tbl_semanaRelationFilter, tbl_semanaWhereInput>
    tbl_professor?: XOR<Tbl_professorRelationFilter, tbl_professorWhereInput>
  }

  export type tbl_prof_agendaOrderByWithRelationInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    professor_id?: SortOrder
    tbl_semana?: tbl_semanaOrderByWithRelationInput
    tbl_professor?: tbl_professorOrderByWithRelationInput
  }

  export type tbl_prof_agendaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_prof_agendaWhereInput | tbl_prof_agendaWhereInput[]
    OR?: tbl_prof_agendaWhereInput[]
    NOT?: tbl_prof_agendaWhereInput | tbl_prof_agendaWhereInput[]
    carga_horaria?: IntFilter<"tbl_prof_agenda"> | number
    semana_id?: IntFilter<"tbl_prof_agenda"> | number
    professor_id?: IntFilter<"tbl_prof_agenda"> | number
    tbl_semana?: XOR<Tbl_semanaRelationFilter, tbl_semanaWhereInput>
    tbl_professor?: XOR<Tbl_professorRelationFilter, tbl_professorWhereInput>
  }, "id">

  export type tbl_prof_agendaOrderByWithAggregationInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    professor_id?: SortOrder
    _count?: tbl_prof_agendaCountOrderByAggregateInput
    _avg?: tbl_prof_agendaAvgOrderByAggregateInput
    _max?: tbl_prof_agendaMaxOrderByAggregateInput
    _min?: tbl_prof_agendaMinOrderByAggregateInput
    _sum?: tbl_prof_agendaSumOrderByAggregateInput
  }

  export type tbl_prof_agendaScalarWhereWithAggregatesInput = {
    AND?: tbl_prof_agendaScalarWhereWithAggregatesInput | tbl_prof_agendaScalarWhereWithAggregatesInput[]
    OR?: tbl_prof_agendaScalarWhereWithAggregatesInput[]
    NOT?: tbl_prof_agendaScalarWhereWithAggregatesInput | tbl_prof_agendaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_prof_agenda"> | number
    carga_horaria?: IntWithAggregatesFilter<"tbl_prof_agenda"> | number
    semana_id?: IntWithAggregatesFilter<"tbl_prof_agenda"> | number
    professor_id?: IntWithAggregatesFilter<"tbl_prof_agenda"> | number
  }

  export type tbl_prof_disciplinasWhereInput = {
    AND?: tbl_prof_disciplinasWhereInput | tbl_prof_disciplinasWhereInput[]
    OR?: tbl_prof_disciplinasWhereInput[]
    NOT?: tbl_prof_disciplinasWhereInput | tbl_prof_disciplinasWhereInput[]
    id?: IntFilter<"tbl_prof_disciplinas"> | number
    disciplina_id?: IntFilter<"tbl_prof_disciplinas"> | number
    professor_id?: IntFilter<"tbl_prof_disciplinas"> | number
    tbl_disciplina?: XOR<Tbl_disciplinaRelationFilter, tbl_disciplinaWhereInput>
    tbl_professor?: XOR<Tbl_professorRelationFilter, tbl_professorWhereInput>
  }

  export type tbl_prof_disciplinasOrderByWithRelationInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    professor_id?: SortOrder
    tbl_disciplina?: tbl_disciplinaOrderByWithRelationInput
    tbl_professor?: tbl_professorOrderByWithRelationInput
  }

  export type tbl_prof_disciplinasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_prof_disciplinasWhereInput | tbl_prof_disciplinasWhereInput[]
    OR?: tbl_prof_disciplinasWhereInput[]
    NOT?: tbl_prof_disciplinasWhereInput | tbl_prof_disciplinasWhereInput[]
    disciplina_id?: IntFilter<"tbl_prof_disciplinas"> | number
    professor_id?: IntFilter<"tbl_prof_disciplinas"> | number
    tbl_disciplina?: XOR<Tbl_disciplinaRelationFilter, tbl_disciplinaWhereInput>
    tbl_professor?: XOR<Tbl_professorRelationFilter, tbl_professorWhereInput>
  }, "id">

  export type tbl_prof_disciplinasOrderByWithAggregationInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    professor_id?: SortOrder
    _count?: tbl_prof_disciplinasCountOrderByAggregateInput
    _avg?: tbl_prof_disciplinasAvgOrderByAggregateInput
    _max?: tbl_prof_disciplinasMaxOrderByAggregateInput
    _min?: tbl_prof_disciplinasMinOrderByAggregateInput
    _sum?: tbl_prof_disciplinasSumOrderByAggregateInput
  }

  export type tbl_prof_disciplinasScalarWhereWithAggregatesInput = {
    AND?: tbl_prof_disciplinasScalarWhereWithAggregatesInput | tbl_prof_disciplinasScalarWhereWithAggregatesInput[]
    OR?: tbl_prof_disciplinasScalarWhereWithAggregatesInput[]
    NOT?: tbl_prof_disciplinasScalarWhereWithAggregatesInput | tbl_prof_disciplinasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_prof_disciplinas"> | number
    disciplina_id?: IntWithAggregatesFilter<"tbl_prof_disciplinas"> | number
    professor_id?: IntWithAggregatesFilter<"tbl_prof_disciplinas"> | number
  }

  export type tbl_professorWhereInput = {
    AND?: tbl_professorWhereInput | tbl_professorWhereInput[]
    OR?: tbl_professorWhereInput[]
    NOT?: tbl_professorWhereInput | tbl_professorWhereInput[]
    id?: IntFilter<"tbl_professor"> | number
    nome?: StringFilter<"tbl_professor"> | string
    email?: StringFilter<"tbl_professor"> | string
    senha?: StringNullableFilter<"tbl_professor"> | string | null
    icone_id?: IntFilter<"tbl_professor"> | number
    status?: BoolNullableFilter<"tbl_professor"> | boolean | null
    tbl_prof_agenda?: Tbl_prof_agendaListRelationFilter
    tbl_prof_disciplinas?: Tbl_prof_disciplinasListRelationFilter
    tbl_icones?: XOR<Tbl_iconesRelationFilter, tbl_iconesWhereInput>
  }

  export type tbl_professorOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrderInput | SortOrder
    icone_id?: SortOrder
    status?: SortOrderInput | SortOrder
    tbl_prof_agenda?: tbl_prof_agendaOrderByRelationAggregateInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasOrderByRelationAggregateInput
    tbl_icones?: tbl_iconesOrderByWithRelationInput
  }

  export type tbl_professorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_professorWhereInput | tbl_professorWhereInput[]
    OR?: tbl_professorWhereInput[]
    NOT?: tbl_professorWhereInput | tbl_professorWhereInput[]
    nome?: StringFilter<"tbl_professor"> | string
    email?: StringFilter<"tbl_professor"> | string
    senha?: StringNullableFilter<"tbl_professor"> | string | null
    icone_id?: IntFilter<"tbl_professor"> | number
    status?: BoolNullableFilter<"tbl_professor"> | boolean | null
    tbl_prof_agenda?: Tbl_prof_agendaListRelationFilter
    tbl_prof_disciplinas?: Tbl_prof_disciplinasListRelationFilter
    tbl_icones?: XOR<Tbl_iconesRelationFilter, tbl_iconesWhereInput>
  }, "id">

  export type tbl_professorOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrderInput | SortOrder
    icone_id?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: tbl_professorCountOrderByAggregateInput
    _avg?: tbl_professorAvgOrderByAggregateInput
    _max?: tbl_professorMaxOrderByAggregateInput
    _min?: tbl_professorMinOrderByAggregateInput
    _sum?: tbl_professorSumOrderByAggregateInput
  }

  export type tbl_professorScalarWhereWithAggregatesInput = {
    AND?: tbl_professorScalarWhereWithAggregatesInput | tbl_professorScalarWhereWithAggregatesInput[]
    OR?: tbl_professorScalarWhereWithAggregatesInput[]
    NOT?: tbl_professorScalarWhereWithAggregatesInput | tbl_professorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_professor"> | number
    nome?: StringWithAggregatesFilter<"tbl_professor"> | string
    email?: StringWithAggregatesFilter<"tbl_professor"> | string
    senha?: StringNullableWithAggregatesFilter<"tbl_professor"> | string | null
    icone_id?: IntWithAggregatesFilter<"tbl_professor"> | number
    status?: BoolNullableWithAggregatesFilter<"tbl_professor"> | boolean | null
  }

  export type tbl_redacaoWhereInput = {
    AND?: tbl_redacaoWhereInput | tbl_redacaoWhereInput[]
    OR?: tbl_redacaoWhereInput[]
    NOT?: tbl_redacaoWhereInput | tbl_redacaoWhereInput[]
    id?: IntFilter<"tbl_redacao"> | number
    titulo?: StringFilter<"tbl_redacao"> | string
    texto?: StringFilter<"tbl_redacao"> | string
    tema_id?: IntFilter<"tbl_redacao"> | number
    status?: BoolNullableFilter<"tbl_redacao"> | boolean | null
    tbl_tema?: XOR<Tbl_temaRelationFilter, tbl_temaWhereInput>
  }

  export type tbl_redacaoOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    tema_id?: SortOrder
    status?: SortOrderInput | SortOrder
    tbl_tema?: tbl_temaOrderByWithRelationInput
  }

  export type tbl_redacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_redacaoWhereInput | tbl_redacaoWhereInput[]
    OR?: tbl_redacaoWhereInput[]
    NOT?: tbl_redacaoWhereInput | tbl_redacaoWhereInput[]
    titulo?: StringFilter<"tbl_redacao"> | string
    texto?: StringFilter<"tbl_redacao"> | string
    tema_id?: IntFilter<"tbl_redacao"> | number
    status?: BoolNullableFilter<"tbl_redacao"> | boolean | null
    tbl_tema?: XOR<Tbl_temaRelationFilter, tbl_temaWhereInput>
  }, "id">

  export type tbl_redacaoOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    tema_id?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: tbl_redacaoCountOrderByAggregateInput
    _avg?: tbl_redacaoAvgOrderByAggregateInput
    _max?: tbl_redacaoMaxOrderByAggregateInput
    _min?: tbl_redacaoMinOrderByAggregateInput
    _sum?: tbl_redacaoSumOrderByAggregateInput
  }

  export type tbl_redacaoScalarWhereWithAggregatesInput = {
    AND?: tbl_redacaoScalarWhereWithAggregatesInput | tbl_redacaoScalarWhereWithAggregatesInput[]
    OR?: tbl_redacaoScalarWhereWithAggregatesInput[]
    NOT?: tbl_redacaoScalarWhereWithAggregatesInput | tbl_redacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_redacao"> | number
    titulo?: StringWithAggregatesFilter<"tbl_redacao"> | string
    texto?: StringWithAggregatesFilter<"tbl_redacao"> | string
    tema_id?: IntWithAggregatesFilter<"tbl_redacao"> | number
    status?: BoolNullableWithAggregatesFilter<"tbl_redacao"> | boolean | null
  }

  export type tbl_semanaWhereInput = {
    AND?: tbl_semanaWhereInput | tbl_semanaWhereInput[]
    OR?: tbl_semanaWhereInput[]
    NOT?: tbl_semanaWhereInput | tbl_semanaWhereInput[]
    id?: IntFilter<"tbl_semana"> | number
    nome?: StringFilter<"tbl_semana"> | string
    tbl_aluno_agenda?: Tbl_aluno_agendaListRelationFilter
    tbl_prof_agenda?: Tbl_prof_agendaListRelationFilter
  }

  export type tbl_semanaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tbl_aluno_agenda?: tbl_aluno_agendaOrderByRelationAggregateInput
    tbl_prof_agenda?: tbl_prof_agendaOrderByRelationAggregateInput
  }

  export type tbl_semanaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_semanaWhereInput | tbl_semanaWhereInput[]
    OR?: tbl_semanaWhereInput[]
    NOT?: tbl_semanaWhereInput | tbl_semanaWhereInput[]
    nome?: StringFilter<"tbl_semana"> | string
    tbl_aluno_agenda?: Tbl_aluno_agendaListRelationFilter
    tbl_prof_agenda?: Tbl_prof_agendaListRelationFilter
  }, "id">

  export type tbl_semanaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: tbl_semanaCountOrderByAggregateInput
    _avg?: tbl_semanaAvgOrderByAggregateInput
    _max?: tbl_semanaMaxOrderByAggregateInput
    _min?: tbl_semanaMinOrderByAggregateInput
    _sum?: tbl_semanaSumOrderByAggregateInput
  }

  export type tbl_semanaScalarWhereWithAggregatesInput = {
    AND?: tbl_semanaScalarWhereWithAggregatesInput | tbl_semanaScalarWhereWithAggregatesInput[]
    OR?: tbl_semanaScalarWhereWithAggregatesInput[]
    NOT?: tbl_semanaScalarWhereWithAggregatesInput | tbl_semanaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_semana"> | number
    nome?: StringWithAggregatesFilter<"tbl_semana"> | string
  }

  export type tbl_temaWhereInput = {
    AND?: tbl_temaWhereInput | tbl_temaWhereInput[]
    OR?: tbl_temaWhereInput[]
    NOT?: tbl_temaWhereInput | tbl_temaWhereInput[]
    id?: IntFilter<"tbl_tema"> | number
    nome?: StringFilter<"tbl_tema"> | string
    descricao?: StringFilter<"tbl_tema"> | string
    tbl_redacao?: Tbl_redacaoListRelationFilter
  }

  export type tbl_temaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    tbl_redacao?: tbl_redacaoOrderByRelationAggregateInput
  }

  export type tbl_temaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_temaWhereInput | tbl_temaWhereInput[]
    OR?: tbl_temaWhereInput[]
    NOT?: tbl_temaWhereInput | tbl_temaWhereInput[]
    nome?: StringFilter<"tbl_tema"> | string
    descricao?: StringFilter<"tbl_tema"> | string
    tbl_redacao?: Tbl_redacaoListRelationFilter
  }, "id">

  export type tbl_temaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    _count?: tbl_temaCountOrderByAggregateInput
    _avg?: tbl_temaAvgOrderByAggregateInput
    _max?: tbl_temaMaxOrderByAggregateInput
    _min?: tbl_temaMinOrderByAggregateInput
    _sum?: tbl_temaSumOrderByAggregateInput
  }

  export type tbl_temaScalarWhereWithAggregatesInput = {
    AND?: tbl_temaScalarWhereWithAggregatesInput | tbl_temaScalarWhereWithAggregatesInput[]
    OR?: tbl_temaScalarWhereWithAggregatesInput[]
    NOT?: tbl_temaScalarWhereWithAggregatesInput | tbl_temaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_tema"> | number
    nome?: StringWithAggregatesFilter<"tbl_tema"> | string
    descricao?: StringWithAggregatesFilter<"tbl_tema"> | string
  }

  export type tbl_topicosWhereInput = {
    AND?: tbl_topicosWhereInput | tbl_topicosWhereInput[]
    OR?: tbl_topicosWhereInput[]
    NOT?: tbl_topicosWhereInput | tbl_topicosWhereInput[]
    id?: IntFilter<"tbl_topicos"> | number
    nome?: StringFilter<"tbl_topicos"> | string
    tbl_disciplina_topico?: Tbl_disciplina_topicoListRelationFilter
    tbl_videoaulas?: Tbl_videoaulasListRelationFilter
  }

  export type tbl_topicosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tbl_disciplina_topico?: tbl_disciplina_topicoOrderByRelationAggregateInput
    tbl_videoaulas?: tbl_videoaulasOrderByRelationAggregateInput
  }

  export type tbl_topicosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_topicosWhereInput | tbl_topicosWhereInput[]
    OR?: tbl_topicosWhereInput[]
    NOT?: tbl_topicosWhereInput | tbl_topicosWhereInput[]
    nome?: StringFilter<"tbl_topicos"> | string
    tbl_disciplina_topico?: Tbl_disciplina_topicoListRelationFilter
    tbl_videoaulas?: Tbl_videoaulasListRelationFilter
  }, "id">

  export type tbl_topicosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: tbl_topicosCountOrderByAggregateInput
    _avg?: tbl_topicosAvgOrderByAggregateInput
    _max?: tbl_topicosMaxOrderByAggregateInput
    _min?: tbl_topicosMinOrderByAggregateInput
    _sum?: tbl_topicosSumOrderByAggregateInput
  }

  export type tbl_topicosScalarWhereWithAggregatesInput = {
    AND?: tbl_topicosScalarWhereWithAggregatesInput | tbl_topicosScalarWhereWithAggregatesInput[]
    OR?: tbl_topicosScalarWhereWithAggregatesInput[]
    NOT?: tbl_topicosScalarWhereWithAggregatesInput | tbl_topicosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_topicos"> | number
    nome?: StringWithAggregatesFilter<"tbl_topicos"> | string
  }

  export type tbl_vest_fasesWhereInput = {
    AND?: tbl_vest_fasesWhereInput | tbl_vest_fasesWhereInput[]
    OR?: tbl_vest_fasesWhereInput[]
    NOT?: tbl_vest_fasesWhereInput | tbl_vest_fasesWhereInput[]
    id?: IntFilter<"tbl_vest_fases"> | number
    vestibular_id?: IntFilter<"tbl_vest_fases"> | number
    fase_id?: IntFilter<"tbl_vest_fases"> | number
    tbl_vestibulares?: XOR<Tbl_vestibularesRelationFilter, tbl_vestibularesWhereInput>
    tbl_fases?: XOR<Tbl_fasesRelationFilter, tbl_fasesWhereInput>
  }

  export type tbl_vest_fasesOrderByWithRelationInput = {
    id?: SortOrder
    vestibular_id?: SortOrder
    fase_id?: SortOrder
    tbl_vestibulares?: tbl_vestibularesOrderByWithRelationInput
    tbl_fases?: tbl_fasesOrderByWithRelationInput
  }

  export type tbl_vest_fasesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_vest_fasesWhereInput | tbl_vest_fasesWhereInput[]
    OR?: tbl_vest_fasesWhereInput[]
    NOT?: tbl_vest_fasesWhereInput | tbl_vest_fasesWhereInput[]
    vestibular_id?: IntFilter<"tbl_vest_fases"> | number
    fase_id?: IntFilter<"tbl_vest_fases"> | number
    tbl_vestibulares?: XOR<Tbl_vestibularesRelationFilter, tbl_vestibularesWhereInput>
    tbl_fases?: XOR<Tbl_fasesRelationFilter, tbl_fasesWhereInput>
  }, "id">

  export type tbl_vest_fasesOrderByWithAggregationInput = {
    id?: SortOrder
    vestibular_id?: SortOrder
    fase_id?: SortOrder
    _count?: tbl_vest_fasesCountOrderByAggregateInput
    _avg?: tbl_vest_fasesAvgOrderByAggregateInput
    _max?: tbl_vest_fasesMaxOrderByAggregateInput
    _min?: tbl_vest_fasesMinOrderByAggregateInput
    _sum?: tbl_vest_fasesSumOrderByAggregateInput
  }

  export type tbl_vest_fasesScalarWhereWithAggregatesInput = {
    AND?: tbl_vest_fasesScalarWhereWithAggregatesInput | tbl_vest_fasesScalarWhereWithAggregatesInput[]
    OR?: tbl_vest_fasesScalarWhereWithAggregatesInput[]
    NOT?: tbl_vest_fasesScalarWhereWithAggregatesInput | tbl_vest_fasesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_vest_fases"> | number
    vestibular_id?: IntWithAggregatesFilter<"tbl_vest_fases"> | number
    fase_id?: IntWithAggregatesFilter<"tbl_vest_fases"> | number
  }

  export type tbl_vestibularesWhereInput = {
    AND?: tbl_vestibularesWhereInput | tbl_vestibularesWhereInput[]
    OR?: tbl_vestibularesWhereInput[]
    NOT?: tbl_vestibularesWhereInput | tbl_vestibularesWhereInput[]
    id?: IntFilter<"tbl_vestibulares"> | number
    nome?: StringFilter<"tbl_vestibulares"> | string
    data_prova?: DateTimeFilter<"tbl_vestibulares"> | Date | string
    instituicao_id?: IntFilter<"tbl_vestibulares"> | number
    status?: BoolNullableFilter<"tbl_vestibulares"> | boolean | null
    tbl_vest_fases?: Tbl_vest_fasesListRelationFilter
    tbl_intituicoes?: XOR<Tbl_intituicoesRelationFilter, tbl_intituicoesWhereInput>
  }

  export type tbl_vestibularesOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    data_prova?: SortOrder
    instituicao_id?: SortOrder
    status?: SortOrderInput | SortOrder
    tbl_vest_fases?: tbl_vest_fasesOrderByRelationAggregateInput
    tbl_intituicoes?: tbl_intituicoesOrderByWithRelationInput
  }

  export type tbl_vestibularesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_vestibularesWhereInput | tbl_vestibularesWhereInput[]
    OR?: tbl_vestibularesWhereInput[]
    NOT?: tbl_vestibularesWhereInput | tbl_vestibularesWhereInput[]
    nome?: StringFilter<"tbl_vestibulares"> | string
    data_prova?: DateTimeFilter<"tbl_vestibulares"> | Date | string
    instituicao_id?: IntFilter<"tbl_vestibulares"> | number
    status?: BoolNullableFilter<"tbl_vestibulares"> | boolean | null
    tbl_vest_fases?: Tbl_vest_fasesListRelationFilter
    tbl_intituicoes?: XOR<Tbl_intituicoesRelationFilter, tbl_intituicoesWhereInput>
  }, "id">

  export type tbl_vestibularesOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    data_prova?: SortOrder
    instituicao_id?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: tbl_vestibularesCountOrderByAggregateInput
    _avg?: tbl_vestibularesAvgOrderByAggregateInput
    _max?: tbl_vestibularesMaxOrderByAggregateInput
    _min?: tbl_vestibularesMinOrderByAggregateInput
    _sum?: tbl_vestibularesSumOrderByAggregateInput
  }

  export type tbl_vestibularesScalarWhereWithAggregatesInput = {
    AND?: tbl_vestibularesScalarWhereWithAggregatesInput | tbl_vestibularesScalarWhereWithAggregatesInput[]
    OR?: tbl_vestibularesScalarWhereWithAggregatesInput[]
    NOT?: tbl_vestibularesScalarWhereWithAggregatesInput | tbl_vestibularesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_vestibulares"> | number
    nome?: StringWithAggregatesFilter<"tbl_vestibulares"> | string
    data_prova?: DateTimeWithAggregatesFilter<"tbl_vestibulares"> | Date | string
    instituicao_id?: IntWithAggregatesFilter<"tbl_vestibulares"> | number
    status?: BoolNullableWithAggregatesFilter<"tbl_vestibulares"> | boolean | null
  }

  export type tbl_videoaulasWhereInput = {
    AND?: tbl_videoaulasWhereInput | tbl_videoaulasWhereInput[]
    OR?: tbl_videoaulasWhereInput[]
    NOT?: tbl_videoaulasWhereInput | tbl_videoaulasWhereInput[]
    id?: IntFilter<"tbl_videoaulas"> | number
    titulo?: StringFilter<"tbl_videoaulas"> | string
    duracao?: DateTimeFilter<"tbl_videoaulas"> | Date | string
    topico_id?: IntFilter<"tbl_videoaulas"> | number
    status?: BoolNullableFilter<"tbl_videoaulas"> | boolean | null
    tbl_topicos?: XOR<Tbl_topicosRelationFilter, tbl_topicosWhereInput>
  }

  export type tbl_videoaulasOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    duracao?: SortOrder
    topico_id?: SortOrder
    status?: SortOrderInput | SortOrder
    tbl_topicos?: tbl_topicosOrderByWithRelationInput
  }

  export type tbl_videoaulasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_videoaulasWhereInput | tbl_videoaulasWhereInput[]
    OR?: tbl_videoaulasWhereInput[]
    NOT?: tbl_videoaulasWhereInput | tbl_videoaulasWhereInput[]
    titulo?: StringFilter<"tbl_videoaulas"> | string
    duracao?: DateTimeFilter<"tbl_videoaulas"> | Date | string
    topico_id?: IntFilter<"tbl_videoaulas"> | number
    status?: BoolNullableFilter<"tbl_videoaulas"> | boolean | null
    tbl_topicos?: XOR<Tbl_topicosRelationFilter, tbl_topicosWhereInput>
  }, "id">

  export type tbl_videoaulasOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    duracao?: SortOrder
    topico_id?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: tbl_videoaulasCountOrderByAggregateInput
    _avg?: tbl_videoaulasAvgOrderByAggregateInput
    _max?: tbl_videoaulasMaxOrderByAggregateInput
    _min?: tbl_videoaulasMinOrderByAggregateInput
    _sum?: tbl_videoaulasSumOrderByAggregateInput
  }

  export type tbl_videoaulasScalarWhereWithAggregatesInput = {
    AND?: tbl_videoaulasScalarWhereWithAggregatesInput | tbl_videoaulasScalarWhereWithAggregatesInput[]
    OR?: tbl_videoaulasScalarWhereWithAggregatesInput[]
    NOT?: tbl_videoaulasScalarWhereWithAggregatesInput | tbl_videoaulasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_videoaulas"> | number
    titulo?: StringWithAggregatesFilter<"tbl_videoaulas"> | string
    duracao?: DateTimeWithAggregatesFilter<"tbl_videoaulas"> | Date | string
    topico_id?: IntWithAggregatesFilter<"tbl_videoaulas"> | number
    status?: BoolNullableWithAggregatesFilter<"tbl_videoaulas"> | boolean | null
  }

  export type caderno_alunoCreateInput = {
    titulo: string
    texto: string
    tbl_aluno: tbl_alunoCreateNestedOneWithoutCaderno_alunoInput
  }

  export type caderno_alunoUncheckedCreateInput = {
    id?: number
    titulo: string
    texto: string
    aluno_id: number
  }

  export type caderno_alunoUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    tbl_aluno?: tbl_alunoUpdateOneRequiredWithoutCaderno_alunoNestedInput
  }

  export type caderno_alunoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    aluno_id?: IntFieldUpdateOperationsInput | number
  }

  export type caderno_alunoCreateManyInput = {
    id?: number
    titulo: string
    texto: string
    aluno_id: number
  }

  export type caderno_alunoUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
  }

  export type caderno_alunoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    aluno_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_alternativasCreateInput = {
    opcao: string
    resposta: boolean
    tbl_exercicio: tbl_exercicioCreateNestedOneWithoutTbl_alternativasInput
  }

  export type tbl_alternativasUncheckedCreateInput = {
    id?: number
    opcao: string
    resposta: boolean
    questao_id: number
  }

  export type tbl_alternativasUpdateInput = {
    opcao?: StringFieldUpdateOperationsInput | string
    resposta?: BoolFieldUpdateOperationsInput | boolean
    tbl_exercicio?: tbl_exercicioUpdateOneRequiredWithoutTbl_alternativasNestedInput
  }

  export type tbl_alternativasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    opcao?: StringFieldUpdateOperationsInput | string
    resposta?: BoolFieldUpdateOperationsInput | boolean
    questao_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_alternativasCreateManyInput = {
    id?: number
    opcao: string
    resposta: boolean
    questao_id: number
  }

  export type tbl_alternativasUpdateManyMutationInput = {
    opcao?: StringFieldUpdateOperationsInput | string
    resposta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_alternativasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    opcao?: StringFieldUpdateOperationsInput | string
    resposta?: BoolFieldUpdateOperationsInput | boolean
    questao_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_alunoCreateInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    caderno_aluno?: caderno_alunoCreateNestedManyWithoutTbl_alunoInput
    tbl_icones: tbl_iconesCreateNestedOneWithoutTbl_alunoInput
    tbl_cursos: tbl_cursosCreateNestedOneWithoutTbl_alunoInput
    tbl_aluno_agenda?: tbl_aluno_agendaCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    curso_id: number
    status?: boolean | null
    caderno_aluno?: caderno_alunoUncheckedCreateNestedManyWithoutTbl_alunoInput
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    caderno_aluno?: caderno_alunoUpdateManyWithoutTbl_alunoNestedInput
    tbl_icones?: tbl_iconesUpdateOneRequiredWithoutTbl_alunoNestedInput
    tbl_cursos?: tbl_cursosUpdateOneRequiredWithoutTbl_alunoNestedInput
    tbl_aluno_agenda?: tbl_aluno_agendaUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_alunoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    curso_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    caderno_aluno?: caderno_alunoUncheckedUpdateManyWithoutTbl_alunoNestedInput
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_alunoCreateManyInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    curso_id: number
    status?: boolean | null
  }

  export type tbl_alunoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_alunoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    curso_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_aluno_agendaCreateInput = {
    carga_horaria: number
    tbl_semana: tbl_semanaCreateNestedOneWithoutTbl_aluno_agendaInput
    tbl_aluno: tbl_alunoCreateNestedOneWithoutTbl_aluno_agendaInput
    tbl_cronograma?: tbl_cronogramaCreateNestedManyWithoutTbl_aluno_agendaInput
  }

  export type tbl_aluno_agendaUncheckedCreateInput = {
    id?: number
    carga_horaria: number
    semana_id: number
    aluno_id: number
    tbl_cronograma?: tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_aluno_agendaInput
  }

  export type tbl_aluno_agendaUpdateInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
    tbl_semana?: tbl_semanaUpdateOneRequiredWithoutTbl_aluno_agendaNestedInput
    tbl_aluno?: tbl_alunoUpdateOneRequiredWithoutTbl_aluno_agendaNestedInput
    tbl_cronograma?: tbl_cronogramaUpdateManyWithoutTbl_aluno_agendaNestedInput
  }

  export type tbl_aluno_agendaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
    aluno_id?: IntFieldUpdateOperationsInput | number
    tbl_cronograma?: tbl_cronogramaUncheckedUpdateManyWithoutTbl_aluno_agendaNestedInput
  }

  export type tbl_aluno_agendaCreateManyInput = {
    id?: number
    carga_horaria: number
    semana_id: number
    aluno_id: number
  }

  export type tbl_aluno_agendaUpdateManyMutationInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_aluno_agendaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
    aluno_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cronogramaCreateInput = {
    tbl_aluno_agenda: tbl_aluno_agendaCreateNestedOneWithoutTbl_cronogramaInput
    tbl_disciplina: tbl_disciplinaCreateNestedOneWithoutTbl_cronogramaInput
  }

  export type tbl_cronogramaUncheckedCreateInput = {
    id?: number
    agenda_aluno_id: number
    disciplina_id: number
  }

  export type tbl_cronogramaUpdateInput = {
    tbl_aluno_agenda?: tbl_aluno_agendaUpdateOneRequiredWithoutTbl_cronogramaNestedInput
    tbl_disciplina?: tbl_disciplinaUpdateOneRequiredWithoutTbl_cronogramaNestedInput
  }

  export type tbl_cronogramaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    agenda_aluno_id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cronogramaCreateManyInput = {
    id?: number
    agenda_aluno_id: number
    disciplina_id: number
  }

  export type tbl_cronogramaUpdateManyMutationInput = {

  }

  export type tbl_cronogramaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    agenda_aluno_id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cursosCreateInput = {
    nome: string
    tbl_aluno?: tbl_alunoCreateNestedManyWithoutTbl_cursosInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaCreateNestedManyWithoutTbl_cursosInput
  }

  export type tbl_cursosUncheckedCreateInput = {
    id?: number
    nome: string
    tbl_aluno?: tbl_alunoUncheckedCreateNestedManyWithoutTbl_cursosInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedCreateNestedManyWithoutTbl_cursosInput
  }

  export type tbl_cursosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_aluno?: tbl_alunoUpdateManyWithoutTbl_cursosNestedInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUpdateManyWithoutTbl_cursosNestedInput
  }

  export type tbl_cursosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_aluno?: tbl_alunoUncheckedUpdateManyWithoutTbl_cursosNestedInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_cursosNestedInput
  }

  export type tbl_cursosCreateManyInput = {
    id?: number
    nome: string
  }

  export type tbl_cursosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_cursosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_cursos_disciplinaCreateInput = {
    tbl_cursos: tbl_cursosCreateNestedOneWithoutTbl_cursos_disciplinaInput
    tbl_disciplina: tbl_disciplinaCreateNestedOneWithoutTbl_cursos_disciplinaInput
  }

  export type tbl_cursos_disciplinaUncheckedCreateInput = {
    id?: number
    curso_id: number
    disciplina_id: number
  }

  export type tbl_cursos_disciplinaUpdateInput = {
    tbl_cursos?: tbl_cursosUpdateOneRequiredWithoutTbl_cursos_disciplinaNestedInput
    tbl_disciplina?: tbl_disciplinaUpdateOneRequiredWithoutTbl_cursos_disciplinaNestedInput
  }

  export type tbl_cursos_disciplinaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    curso_id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cursos_disciplinaCreateManyInput = {
    id?: number
    curso_id: number
    disciplina_id: number
  }

  export type tbl_cursos_disciplinaUpdateManyMutationInput = {

  }

  export type tbl_cursos_disciplinaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    curso_id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_disciplinaCreateInput = {
    nome: string
    tbl_cronograma?: tbl_cronogramaCreateNestedManyWithoutTbl_disciplinaInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaCreateNestedManyWithoutTbl_disciplinaInput
    tbl_disciplina_topico?: tbl_disciplina_topicoCreateNestedManyWithoutTbl_disciplinaInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaUncheckedCreateInput = {
    id?: number
    nome: string
    tbl_cronograma?: tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cronograma?: tbl_cronogramaUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_disciplinaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cronograma?: tbl_cronogramaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_disciplinaCreateManyInput = {
    id?: number
    nome: string
  }

  export type tbl_disciplinaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_disciplinaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_disciplina_topicoCreateInput = {
    tbl_disciplina: tbl_disciplinaCreateNestedOneWithoutTbl_disciplina_topicoInput
    tbl_topicos: tbl_topicosCreateNestedOneWithoutTbl_disciplina_topicoInput
  }

  export type tbl_disciplina_topicoUncheckedCreateInput = {
    id?: number
    disciplina_id: number
    topico_id: number
  }

  export type tbl_disciplina_topicoUpdateInput = {
    tbl_disciplina?: tbl_disciplinaUpdateOneRequiredWithoutTbl_disciplina_topicoNestedInput
    tbl_topicos?: tbl_topicosUpdateOneRequiredWithoutTbl_disciplina_topicoNestedInput
  }

  export type tbl_disciplina_topicoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
    topico_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_disciplina_topicoCreateManyInput = {
    id?: number
    disciplina_id: number
    topico_id: number
  }

  export type tbl_disciplina_topicoUpdateManyMutationInput = {

  }

  export type tbl_disciplina_topicoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
    topico_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_exercicioCreateInput = {
    questao?: string | null
    status?: boolean | null
    tbl_alternativas?: tbl_alternativasCreateNestedManyWithoutTbl_exercicioInput
  }

  export type tbl_exercicioUncheckedCreateInput = {
    id?: number
    questao?: string | null
    status?: boolean | null
    tbl_alternativas?: tbl_alternativasUncheckedCreateNestedManyWithoutTbl_exercicioInput
  }

  export type tbl_exercicioUpdateInput = {
    questao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_alternativas?: tbl_alternativasUpdateManyWithoutTbl_exercicioNestedInput
  }

  export type tbl_exercicioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    questao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_alternativas?: tbl_alternativasUncheckedUpdateManyWithoutTbl_exercicioNestedInput
  }

  export type tbl_exercicioCreateManyInput = {
    id?: number
    questao?: string | null
    status?: boolean | null
  }

  export type tbl_exercicioUpdateManyMutationInput = {
    questao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_exercicioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    questao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_fasesCreateInput = {
    fase?: number | null
    tbl_vest_fases?: tbl_vest_fasesCreateNestedManyWithoutTbl_fasesInput
  }

  export type tbl_fasesUncheckedCreateInput = {
    id?: number
    fase?: number | null
    tbl_vest_fases?: tbl_vest_fasesUncheckedCreateNestedManyWithoutTbl_fasesInput
  }

  export type tbl_fasesUpdateInput = {
    fase?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_vest_fases?: tbl_vest_fasesUpdateManyWithoutTbl_fasesNestedInput
  }

  export type tbl_fasesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fase?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_vest_fases?: tbl_vest_fasesUncheckedUpdateManyWithoutTbl_fasesNestedInput
  }

  export type tbl_fasesCreateManyInput = {
    id?: number
    fase?: number | null
  }

  export type tbl_fasesUpdateManyMutationInput = {
    fase?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_fasesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fase?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_horariosCreateInput = {
    horas: Date | string
  }

  export type tbl_horariosUncheckedCreateInput = {
    id?: number
    horas: Date | string
  }

  export type tbl_horariosUpdateInput = {
    horas?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_horariosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_horariosCreateManyInput = {
    id?: number
    horas: Date | string
  }

  export type tbl_horariosUpdateManyMutationInput = {
    horas?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_horariosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tbl_iconesCreateInput = {
    url: string
    status?: boolean | null
    tbl_aluno?: tbl_alunoCreateNestedManyWithoutTbl_iconesInput
    tbl_professor?: tbl_professorCreateNestedManyWithoutTbl_iconesInput
  }

  export type tbl_iconesUncheckedCreateInput = {
    id?: number
    url: string
    status?: boolean | null
    tbl_aluno?: tbl_alunoUncheckedCreateNestedManyWithoutTbl_iconesInput
    tbl_professor?: tbl_professorUncheckedCreateNestedManyWithoutTbl_iconesInput
  }

  export type tbl_iconesUpdateInput = {
    url?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_aluno?: tbl_alunoUpdateManyWithoutTbl_iconesNestedInput
    tbl_professor?: tbl_professorUpdateManyWithoutTbl_iconesNestedInput
  }

  export type tbl_iconesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_aluno?: tbl_alunoUncheckedUpdateManyWithoutTbl_iconesNestedInput
    tbl_professor?: tbl_professorUncheckedUpdateManyWithoutTbl_iconesNestedInput
  }

  export type tbl_iconesCreateManyInput = {
    id?: number
    url: string
    status?: boolean | null
  }

  export type tbl_iconesUpdateManyMutationInput = {
    url?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_iconesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_intituicoesCreateInput = {
    nome: string
    tbl_vestibulares?: tbl_vestibularesCreateNestedManyWithoutTbl_intituicoesInput
  }

  export type tbl_intituicoesUncheckedCreateInput = {
    id?: number
    nome: string
    tbl_vestibulares?: tbl_vestibularesUncheckedCreateNestedManyWithoutTbl_intituicoesInput
  }

  export type tbl_intituicoesUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_vestibulares?: tbl_vestibularesUpdateManyWithoutTbl_intituicoesNestedInput
  }

  export type tbl_intituicoesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_vestibulares?: tbl_vestibularesUncheckedUpdateManyWithoutTbl_intituicoesNestedInput
  }

  export type tbl_intituicoesCreateManyInput = {
    id?: number
    nome: string
  }

  export type tbl_intituicoesUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_intituicoesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_prof_agendaCreateInput = {
    carga_horaria: number
    tbl_semana: tbl_semanaCreateNestedOneWithoutTbl_prof_agendaInput
    tbl_professor: tbl_professorCreateNestedOneWithoutTbl_prof_agendaInput
  }

  export type tbl_prof_agendaUncheckedCreateInput = {
    id?: number
    carga_horaria: number
    semana_id: number
    professor_id: number
  }

  export type tbl_prof_agendaUpdateInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
    tbl_semana?: tbl_semanaUpdateOneRequiredWithoutTbl_prof_agendaNestedInput
    tbl_professor?: tbl_professorUpdateOneRequiredWithoutTbl_prof_agendaNestedInput
  }

  export type tbl_prof_agendaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
    professor_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_agendaCreateManyInput = {
    id?: number
    carga_horaria: number
    semana_id: number
    professor_id: number
  }

  export type tbl_prof_agendaUpdateManyMutationInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_agendaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
    professor_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_disciplinasCreateInput = {
    tbl_disciplina: tbl_disciplinaCreateNestedOneWithoutTbl_prof_disciplinasInput
    tbl_professor: tbl_professorCreateNestedOneWithoutTbl_prof_disciplinasInput
  }

  export type tbl_prof_disciplinasUncheckedCreateInput = {
    id?: number
    disciplina_id: number
    professor_id: number
  }

  export type tbl_prof_disciplinasUpdateInput = {
    tbl_disciplina?: tbl_disciplinaUpdateOneRequiredWithoutTbl_prof_disciplinasNestedInput
    tbl_professor?: tbl_professorUpdateOneRequiredWithoutTbl_prof_disciplinasNestedInput
  }

  export type tbl_prof_disciplinasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
    professor_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_disciplinasCreateManyInput = {
    id?: number
    disciplina_id: number
    professor_id: number
  }

  export type tbl_prof_disciplinasUpdateManyMutationInput = {

  }

  export type tbl_prof_disciplinasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
    professor_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_professorCreateInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    tbl_prof_agenda?: tbl_prof_agendaCreateNestedManyWithoutTbl_professorInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasCreateNestedManyWithoutTbl_professorInput
    tbl_icones: tbl_iconesCreateNestedOneWithoutTbl_professorInput
  }

  export type tbl_professorUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    status?: boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUncheckedCreateNestedManyWithoutTbl_professorInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_professorInput
  }

  export type tbl_professorUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUpdateManyWithoutTbl_professorNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUpdateManyWithoutTbl_professorNestedInput
    tbl_icones?: tbl_iconesUpdateOneRequiredWithoutTbl_professorNestedInput
  }

  export type tbl_professorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUncheckedUpdateManyWithoutTbl_professorNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_professorNestedInput
  }

  export type tbl_professorCreateManyInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    status?: boolean | null
  }

  export type tbl_professorUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_professorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_redacaoCreateInput = {
    titulo: string
    texto: string
    status?: boolean | null
    tbl_tema: tbl_temaCreateNestedOneWithoutTbl_redacaoInput
  }

  export type tbl_redacaoUncheckedCreateInput = {
    id?: number
    titulo: string
    texto: string
    tema_id: number
    status?: boolean | null
  }

  export type tbl_redacaoUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_tema?: tbl_temaUpdateOneRequiredWithoutTbl_redacaoNestedInput
  }

  export type tbl_redacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    tema_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_redacaoCreateManyInput = {
    id?: number
    titulo: string
    texto: string
    tema_id: number
    status?: boolean | null
  }

  export type tbl_redacaoUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_redacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    tema_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_semanaCreateInput = {
    nome: string
    tbl_aluno_agenda?: tbl_aluno_agendaCreateNestedManyWithoutTbl_semanaInput
    tbl_prof_agenda?: tbl_prof_agendaCreateNestedManyWithoutTbl_semanaInput
  }

  export type tbl_semanaUncheckedCreateInput = {
    id?: number
    nome: string
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedCreateNestedManyWithoutTbl_semanaInput
    tbl_prof_agenda?: tbl_prof_agendaUncheckedCreateNestedManyWithoutTbl_semanaInput
  }

  export type tbl_semanaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_aluno_agenda?: tbl_aluno_agendaUpdateManyWithoutTbl_semanaNestedInput
    tbl_prof_agenda?: tbl_prof_agendaUpdateManyWithoutTbl_semanaNestedInput
  }

  export type tbl_semanaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_semanaNestedInput
    tbl_prof_agenda?: tbl_prof_agendaUncheckedUpdateManyWithoutTbl_semanaNestedInput
  }

  export type tbl_semanaCreateManyInput = {
    id?: number
    nome: string
  }

  export type tbl_semanaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_semanaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_temaCreateInput = {
    nome: string
    descricao: string
    tbl_redacao?: tbl_redacaoCreateNestedManyWithoutTbl_temaInput
  }

  export type tbl_temaUncheckedCreateInput = {
    id?: number
    nome: string
    descricao: string
    tbl_redacao?: tbl_redacaoUncheckedCreateNestedManyWithoutTbl_temaInput
  }

  export type tbl_temaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    tbl_redacao?: tbl_redacaoUpdateManyWithoutTbl_temaNestedInput
  }

  export type tbl_temaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    tbl_redacao?: tbl_redacaoUncheckedUpdateManyWithoutTbl_temaNestedInput
  }

  export type tbl_temaCreateManyInput = {
    id?: number
    nome: string
    descricao: string
  }

  export type tbl_temaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_temaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_topicosCreateInput = {
    nome: string
    tbl_disciplina_topico?: tbl_disciplina_topicoCreateNestedManyWithoutTbl_topicosInput
    tbl_videoaulas?: tbl_videoaulasCreateNestedManyWithoutTbl_topicosInput
  }

  export type tbl_topicosUncheckedCreateInput = {
    id?: number
    nome: string
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedCreateNestedManyWithoutTbl_topicosInput
    tbl_videoaulas?: tbl_videoaulasUncheckedCreateNestedManyWithoutTbl_topicosInput
  }

  export type tbl_topicosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_disciplina_topico?: tbl_disciplina_topicoUpdateManyWithoutTbl_topicosNestedInput
    tbl_videoaulas?: tbl_videoaulasUpdateManyWithoutTbl_topicosNestedInput
  }

  export type tbl_topicosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_topicosNestedInput
    tbl_videoaulas?: tbl_videoaulasUncheckedUpdateManyWithoutTbl_topicosNestedInput
  }

  export type tbl_topicosCreateManyInput = {
    id?: number
    nome: string
  }

  export type tbl_topicosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_topicosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_vest_fasesCreateInput = {
    tbl_vestibulares: tbl_vestibularesCreateNestedOneWithoutTbl_vest_fasesInput
    tbl_fases: tbl_fasesCreateNestedOneWithoutTbl_vest_fasesInput
  }

  export type tbl_vest_fasesUncheckedCreateInput = {
    id?: number
    vestibular_id: number
    fase_id: number
  }

  export type tbl_vest_fasesUpdateInput = {
    tbl_vestibulares?: tbl_vestibularesUpdateOneRequiredWithoutTbl_vest_fasesNestedInput
    tbl_fases?: tbl_fasesUpdateOneRequiredWithoutTbl_vest_fasesNestedInput
  }

  export type tbl_vest_fasesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    vestibular_id?: IntFieldUpdateOperationsInput | number
    fase_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_vest_fasesCreateManyInput = {
    id?: number
    vestibular_id: number
    fase_id: number
  }

  export type tbl_vest_fasesUpdateManyMutationInput = {

  }

  export type tbl_vest_fasesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    vestibular_id?: IntFieldUpdateOperationsInput | number
    fase_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_vestibularesCreateInput = {
    nome: string
    data_prova: Date | string
    status?: boolean | null
    tbl_vest_fases?: tbl_vest_fasesCreateNestedManyWithoutTbl_vestibularesInput
    tbl_intituicoes: tbl_intituicoesCreateNestedOneWithoutTbl_vestibularesInput
  }

  export type tbl_vestibularesUncheckedCreateInput = {
    id?: number
    nome: string
    data_prova: Date | string
    instituicao_id: number
    status?: boolean | null
    tbl_vest_fases?: tbl_vest_fasesUncheckedCreateNestedManyWithoutTbl_vestibularesInput
  }

  export type tbl_vestibularesUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_vest_fases?: tbl_vest_fasesUpdateManyWithoutTbl_vestibularesNestedInput
    tbl_intituicoes?: tbl_intituicoesUpdateOneRequiredWithoutTbl_vestibularesNestedInput
  }

  export type tbl_vestibularesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    instituicao_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_vest_fases?: tbl_vest_fasesUncheckedUpdateManyWithoutTbl_vestibularesNestedInput
  }

  export type tbl_vestibularesCreateManyInput = {
    id?: number
    nome: string
    data_prova: Date | string
    instituicao_id: number
    status?: boolean | null
  }

  export type tbl_vestibularesUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_vestibularesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    instituicao_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_videoaulasCreateInput = {
    titulo: string
    duracao: Date | string
    status?: boolean | null
    tbl_topicos: tbl_topicosCreateNestedOneWithoutTbl_videoaulasInput
  }

  export type tbl_videoaulasUncheckedCreateInput = {
    id?: number
    titulo: string
    duracao: Date | string
    topico_id: number
    status?: boolean | null
  }

  export type tbl_videoaulasUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_topicos?: tbl_topicosUpdateOneRequiredWithoutTbl_videoaulasNestedInput
  }

  export type tbl_videoaulasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    topico_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_videoaulasCreateManyInput = {
    id?: number
    titulo: string
    duracao: Date | string
    topico_id: number
    status?: boolean | null
  }

  export type tbl_videoaulasUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_videoaulasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    topico_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Tbl_alunoRelationFilter = {
    is?: tbl_alunoWhereInput
    isNot?: tbl_alunoWhereInput
  }

  export type caderno_alunoCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    aluno_id?: SortOrder
  }

  export type caderno_alunoAvgOrderByAggregateInput = {
    id?: SortOrder
    aluno_id?: SortOrder
  }

  export type caderno_alunoMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    aluno_id?: SortOrder
  }

  export type caderno_alunoMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    aluno_id?: SortOrder
  }

  export type caderno_alunoSumOrderByAggregateInput = {
    id?: SortOrder
    aluno_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type Tbl_exercicioRelationFilter = {
    is?: tbl_exercicioWhereInput
    isNot?: tbl_exercicioWhereInput
  }

  export type tbl_alternativasCountOrderByAggregateInput = {
    id?: SortOrder
    opcao?: SortOrder
    resposta?: SortOrder
    questao_id?: SortOrder
  }

  export type tbl_alternativasAvgOrderByAggregateInput = {
    id?: SortOrder
    questao_id?: SortOrder
  }

  export type tbl_alternativasMaxOrderByAggregateInput = {
    id?: SortOrder
    opcao?: SortOrder
    resposta?: SortOrder
    questao_id?: SortOrder
  }

  export type tbl_alternativasMinOrderByAggregateInput = {
    id?: SortOrder
    opcao?: SortOrder
    resposta?: SortOrder
    questao_id?: SortOrder
  }

  export type tbl_alternativasSumOrderByAggregateInput = {
    id?: SortOrder
    questao_id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Caderno_alunoListRelationFilter = {
    every?: caderno_alunoWhereInput
    some?: caderno_alunoWhereInput
    none?: caderno_alunoWhereInput
  }

  export type Tbl_iconesRelationFilter = {
    is?: tbl_iconesWhereInput
    isNot?: tbl_iconesWhereInput
  }

  export type Tbl_cursosRelationFilter = {
    is?: tbl_cursosWhereInput
    isNot?: tbl_cursosWhereInput
  }

  export type Tbl_aluno_agendaListRelationFilter = {
    every?: tbl_aluno_agendaWhereInput
    some?: tbl_aluno_agendaWhereInput
    none?: tbl_aluno_agendaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type caderno_alunoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_aluno_agendaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_alunoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    icone_id?: SortOrder
    curso_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_alunoAvgOrderByAggregateInput = {
    id?: SortOrder
    icone_id?: SortOrder
    curso_id?: SortOrder
  }

  export type tbl_alunoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    icone_id?: SortOrder
    curso_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_alunoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    icone_id?: SortOrder
    curso_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_alunoSumOrderByAggregateInput = {
    id?: SortOrder
    icone_id?: SortOrder
    curso_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Tbl_semanaRelationFilter = {
    is?: tbl_semanaWhereInput
    isNot?: tbl_semanaWhereInput
  }

  export type Tbl_cronogramaListRelationFilter = {
    every?: tbl_cronogramaWhereInput
    some?: tbl_cronogramaWhereInput
    none?: tbl_cronogramaWhereInput
  }

  export type tbl_cronogramaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_aluno_agendaCountOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    aluno_id?: SortOrder
  }

  export type tbl_aluno_agendaAvgOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    aluno_id?: SortOrder
  }

  export type tbl_aluno_agendaMaxOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    aluno_id?: SortOrder
  }

  export type tbl_aluno_agendaMinOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    aluno_id?: SortOrder
  }

  export type tbl_aluno_agendaSumOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    aluno_id?: SortOrder
  }

  export type Tbl_aluno_agendaRelationFilter = {
    is?: tbl_aluno_agendaWhereInput
    isNot?: tbl_aluno_agendaWhereInput
  }

  export type Tbl_disciplinaRelationFilter = {
    is?: tbl_disciplinaWhereInput
    isNot?: tbl_disciplinaWhereInput
  }

  export type tbl_cronogramaCountOrderByAggregateInput = {
    id?: SortOrder
    agenda_aluno_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type tbl_cronogramaAvgOrderByAggregateInput = {
    id?: SortOrder
    agenda_aluno_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type tbl_cronogramaMaxOrderByAggregateInput = {
    id?: SortOrder
    agenda_aluno_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type tbl_cronogramaMinOrderByAggregateInput = {
    id?: SortOrder
    agenda_aluno_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type tbl_cronogramaSumOrderByAggregateInput = {
    id?: SortOrder
    agenda_aluno_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type Tbl_alunoListRelationFilter = {
    every?: tbl_alunoWhereInput
    some?: tbl_alunoWhereInput
    none?: tbl_alunoWhereInput
  }

  export type Tbl_cursos_disciplinaListRelationFilter = {
    every?: tbl_cursos_disciplinaWhereInput
    some?: tbl_cursos_disciplinaWhereInput
    none?: tbl_cursos_disciplinaWhereInput
  }

  export type tbl_alunoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_cursos_disciplinaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_cursosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_cursosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_cursosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_cursosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_cursosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_cursos_disciplinaCountOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type tbl_cursos_disciplinaAvgOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type tbl_cursos_disciplinaMaxOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type tbl_cursos_disciplinaMinOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type tbl_cursos_disciplinaSumOrderByAggregateInput = {
    id?: SortOrder
    curso_id?: SortOrder
    disciplina_id?: SortOrder
  }

  export type Tbl_disciplina_topicoListRelationFilter = {
    every?: tbl_disciplina_topicoWhereInput
    some?: tbl_disciplina_topicoWhereInput
    none?: tbl_disciplina_topicoWhereInput
  }

  export type Tbl_prof_disciplinasListRelationFilter = {
    every?: tbl_prof_disciplinasWhereInput
    some?: tbl_prof_disciplinasWhereInput
    none?: tbl_prof_disciplinasWhereInput
  }

  export type tbl_disciplina_topicoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_prof_disciplinasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_disciplinaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_disciplinaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_disciplinaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_disciplinaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_disciplinaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_topicosRelationFilter = {
    is?: tbl_topicosWhereInput
    isNot?: tbl_topicosWhereInput
  }

  export type tbl_disciplina_topicoCountOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    topico_id?: SortOrder
  }

  export type tbl_disciplina_topicoAvgOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    topico_id?: SortOrder
  }

  export type tbl_disciplina_topicoMaxOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    topico_id?: SortOrder
  }

  export type tbl_disciplina_topicoMinOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    topico_id?: SortOrder
  }

  export type tbl_disciplina_topicoSumOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    topico_id?: SortOrder
  }

  export type Tbl_alternativasListRelationFilter = {
    every?: tbl_alternativasWhereInput
    some?: tbl_alternativasWhereInput
    none?: tbl_alternativasWhereInput
  }

  export type tbl_alternativasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_exercicioCountOrderByAggregateInput = {
    id?: SortOrder
    questao?: SortOrder
    status?: SortOrder
  }

  export type tbl_exercicioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_exercicioMaxOrderByAggregateInput = {
    id?: SortOrder
    questao?: SortOrder
    status?: SortOrder
  }

  export type tbl_exercicioMinOrderByAggregateInput = {
    id?: SortOrder
    questao?: SortOrder
    status?: SortOrder
  }

  export type tbl_exercicioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Tbl_vest_fasesListRelationFilter = {
    every?: tbl_vest_fasesWhereInput
    some?: tbl_vest_fasesWhereInput
    none?: tbl_vest_fasesWhereInput
  }

  export type tbl_vest_fasesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_fasesCountOrderByAggregateInput = {
    id?: SortOrder
    fase?: SortOrder
  }

  export type tbl_fasesAvgOrderByAggregateInput = {
    id?: SortOrder
    fase?: SortOrder
  }

  export type tbl_fasesMaxOrderByAggregateInput = {
    id?: SortOrder
    fase?: SortOrder
  }

  export type tbl_fasesMinOrderByAggregateInput = {
    id?: SortOrder
    fase?: SortOrder
  }

  export type tbl_fasesSumOrderByAggregateInput = {
    id?: SortOrder
    fase?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type tbl_horariosCountOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
  }

  export type tbl_horariosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_horariosMaxOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
  }

  export type tbl_horariosMinOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
  }

  export type tbl_horariosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Tbl_professorListRelationFilter = {
    every?: tbl_professorWhereInput
    some?: tbl_professorWhereInput
    none?: tbl_professorWhereInput
  }

  export type tbl_professorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_iconesCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrder
  }

  export type tbl_iconesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_iconesMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrder
  }

  export type tbl_iconesMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrder
  }

  export type tbl_iconesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_vestibularesListRelationFilter = {
    every?: tbl_vestibularesWhereInput
    some?: tbl_vestibularesWhereInput
    none?: tbl_vestibularesWhereInput
  }

  export type tbl_vestibularesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_intituicoesCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_intituicoesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_intituicoesMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_intituicoesMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_intituicoesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_professorRelationFilter = {
    is?: tbl_professorWhereInput
    isNot?: tbl_professorWhereInput
  }

  export type tbl_prof_agendaCountOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_agendaAvgOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_agendaMaxOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_agendaMinOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_agendaSumOrderByAggregateInput = {
    id?: SortOrder
    carga_horaria?: SortOrder
    semana_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_disciplinasCountOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_disciplinasAvgOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_disciplinasMaxOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_disciplinasMinOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    professor_id?: SortOrder
  }

  export type tbl_prof_disciplinasSumOrderByAggregateInput = {
    id?: SortOrder
    disciplina_id?: SortOrder
    professor_id?: SortOrder
  }

  export type Tbl_prof_agendaListRelationFilter = {
    every?: tbl_prof_agendaWhereInput
    some?: tbl_prof_agendaWhereInput
    none?: tbl_prof_agendaWhereInput
  }

  export type tbl_prof_agendaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_professorCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    icone_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_professorAvgOrderByAggregateInput = {
    id?: SortOrder
    icone_id?: SortOrder
  }

  export type tbl_professorMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    icone_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_professorMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    icone_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_professorSumOrderByAggregateInput = {
    id?: SortOrder
    icone_id?: SortOrder
  }

  export type Tbl_temaRelationFilter = {
    is?: tbl_temaWhereInput
    isNot?: tbl_temaWhereInput
  }

  export type tbl_redacaoCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    tema_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_redacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    tema_id?: SortOrder
  }

  export type tbl_redacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    tema_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_redacaoMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    texto?: SortOrder
    tema_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_redacaoSumOrderByAggregateInput = {
    id?: SortOrder
    tema_id?: SortOrder
  }

  export type tbl_semanaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_semanaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_semanaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_semanaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_semanaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_redacaoListRelationFilter = {
    every?: tbl_redacaoWhereInput
    some?: tbl_redacaoWhereInput
    none?: tbl_redacaoWhereInput
  }

  export type tbl_redacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_temaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_temaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_temaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_temaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_temaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_videoaulasListRelationFilter = {
    every?: tbl_videoaulasWhereInput
    some?: tbl_videoaulasWhereInput
    none?: tbl_videoaulasWhereInput
  }

  export type tbl_videoaulasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_topicosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_topicosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_topicosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_topicosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_topicosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_vestibularesRelationFilter = {
    is?: tbl_vestibularesWhereInput
    isNot?: tbl_vestibularesWhereInput
  }

  export type Tbl_fasesRelationFilter = {
    is?: tbl_fasesWhereInput
    isNot?: tbl_fasesWhereInput
  }

  export type tbl_vest_fasesCountOrderByAggregateInput = {
    id?: SortOrder
    vestibular_id?: SortOrder
    fase_id?: SortOrder
  }

  export type tbl_vest_fasesAvgOrderByAggregateInput = {
    id?: SortOrder
    vestibular_id?: SortOrder
    fase_id?: SortOrder
  }

  export type tbl_vest_fasesMaxOrderByAggregateInput = {
    id?: SortOrder
    vestibular_id?: SortOrder
    fase_id?: SortOrder
  }

  export type tbl_vest_fasesMinOrderByAggregateInput = {
    id?: SortOrder
    vestibular_id?: SortOrder
    fase_id?: SortOrder
  }

  export type tbl_vest_fasesSumOrderByAggregateInput = {
    id?: SortOrder
    vestibular_id?: SortOrder
    fase_id?: SortOrder
  }

  export type Tbl_intituicoesRelationFilter = {
    is?: tbl_intituicoesWhereInput
    isNot?: tbl_intituicoesWhereInput
  }

  export type tbl_vestibularesCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    data_prova?: SortOrder
    instituicao_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_vestibularesAvgOrderByAggregateInput = {
    id?: SortOrder
    instituicao_id?: SortOrder
  }

  export type tbl_vestibularesMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    data_prova?: SortOrder
    instituicao_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_vestibularesMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    data_prova?: SortOrder
    instituicao_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_vestibularesSumOrderByAggregateInput = {
    id?: SortOrder
    instituicao_id?: SortOrder
  }

  export type tbl_videoaulasCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    duracao?: SortOrder
    topico_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_videoaulasAvgOrderByAggregateInput = {
    id?: SortOrder
    topico_id?: SortOrder
  }

  export type tbl_videoaulasMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    duracao?: SortOrder
    topico_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_videoaulasMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    duracao?: SortOrder
    topico_id?: SortOrder
    status?: SortOrder
  }

  export type tbl_videoaulasSumOrderByAggregateInput = {
    id?: SortOrder
    topico_id?: SortOrder
  }

  export type tbl_alunoCreateNestedOneWithoutCaderno_alunoInput = {
    create?: XOR<tbl_alunoCreateWithoutCaderno_alunoInput, tbl_alunoUncheckedCreateWithoutCaderno_alunoInput>
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutCaderno_alunoInput
    connect?: tbl_alunoWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type tbl_alunoUpdateOneRequiredWithoutCaderno_alunoNestedInput = {
    create?: XOR<tbl_alunoCreateWithoutCaderno_alunoInput, tbl_alunoUncheckedCreateWithoutCaderno_alunoInput>
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutCaderno_alunoInput
    upsert?: tbl_alunoUpsertWithoutCaderno_alunoInput
    connect?: tbl_alunoWhereUniqueInput
    update?: XOR<XOR<tbl_alunoUpdateToOneWithWhereWithoutCaderno_alunoInput, tbl_alunoUpdateWithoutCaderno_alunoInput>, tbl_alunoUncheckedUpdateWithoutCaderno_alunoInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbl_exercicioCreateNestedOneWithoutTbl_alternativasInput = {
    create?: XOR<tbl_exercicioCreateWithoutTbl_alternativasInput, tbl_exercicioUncheckedCreateWithoutTbl_alternativasInput>
    connectOrCreate?: tbl_exercicioCreateOrConnectWithoutTbl_alternativasInput
    connect?: tbl_exercicioWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type tbl_exercicioUpdateOneRequiredWithoutTbl_alternativasNestedInput = {
    create?: XOR<tbl_exercicioCreateWithoutTbl_alternativasInput, tbl_exercicioUncheckedCreateWithoutTbl_alternativasInput>
    connectOrCreate?: tbl_exercicioCreateOrConnectWithoutTbl_alternativasInput
    upsert?: tbl_exercicioUpsertWithoutTbl_alternativasInput
    connect?: tbl_exercicioWhereUniqueInput
    update?: XOR<XOR<tbl_exercicioUpdateToOneWithWhereWithoutTbl_alternativasInput, tbl_exercicioUpdateWithoutTbl_alternativasInput>, tbl_exercicioUncheckedUpdateWithoutTbl_alternativasInput>
  }

  export type caderno_alunoCreateNestedManyWithoutTbl_alunoInput = {
    create?: XOR<caderno_alunoCreateWithoutTbl_alunoInput, caderno_alunoUncheckedCreateWithoutTbl_alunoInput> | caderno_alunoCreateWithoutTbl_alunoInput[] | caderno_alunoUncheckedCreateWithoutTbl_alunoInput[]
    connectOrCreate?: caderno_alunoCreateOrConnectWithoutTbl_alunoInput | caderno_alunoCreateOrConnectWithoutTbl_alunoInput[]
    createMany?: caderno_alunoCreateManyTbl_alunoInputEnvelope
    connect?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
  }

  export type tbl_iconesCreateNestedOneWithoutTbl_alunoInput = {
    create?: XOR<tbl_iconesCreateWithoutTbl_alunoInput, tbl_iconesUncheckedCreateWithoutTbl_alunoInput>
    connectOrCreate?: tbl_iconesCreateOrConnectWithoutTbl_alunoInput
    connect?: tbl_iconesWhereUniqueInput
  }

  export type tbl_cursosCreateNestedOneWithoutTbl_alunoInput = {
    create?: XOR<tbl_cursosCreateWithoutTbl_alunoInput, tbl_cursosUncheckedCreateWithoutTbl_alunoInput>
    connectOrCreate?: tbl_cursosCreateOrConnectWithoutTbl_alunoInput
    connect?: tbl_cursosWhereUniqueInput
  }

  export type tbl_aluno_agendaCreateNestedManyWithoutTbl_alunoInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_alunoInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput> | tbl_aluno_agendaCreateWithoutTbl_alunoInput[] | tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput[]
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput | tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput[]
    createMany?: tbl_aluno_agendaCreateManyTbl_alunoInputEnvelope
    connect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
  }

  export type caderno_alunoUncheckedCreateNestedManyWithoutTbl_alunoInput = {
    create?: XOR<caderno_alunoCreateWithoutTbl_alunoInput, caderno_alunoUncheckedCreateWithoutTbl_alunoInput> | caderno_alunoCreateWithoutTbl_alunoInput[] | caderno_alunoUncheckedCreateWithoutTbl_alunoInput[]
    connectOrCreate?: caderno_alunoCreateOrConnectWithoutTbl_alunoInput | caderno_alunoCreateOrConnectWithoutTbl_alunoInput[]
    createMany?: caderno_alunoCreateManyTbl_alunoInputEnvelope
    connect?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
  }

  export type tbl_aluno_agendaUncheckedCreateNestedManyWithoutTbl_alunoInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_alunoInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput> | tbl_aluno_agendaCreateWithoutTbl_alunoInput[] | tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput[]
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput | tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput[]
    createMany?: tbl_aluno_agendaCreateManyTbl_alunoInputEnvelope
    connect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type caderno_alunoUpdateManyWithoutTbl_alunoNestedInput = {
    create?: XOR<caderno_alunoCreateWithoutTbl_alunoInput, caderno_alunoUncheckedCreateWithoutTbl_alunoInput> | caderno_alunoCreateWithoutTbl_alunoInput[] | caderno_alunoUncheckedCreateWithoutTbl_alunoInput[]
    connectOrCreate?: caderno_alunoCreateOrConnectWithoutTbl_alunoInput | caderno_alunoCreateOrConnectWithoutTbl_alunoInput[]
    upsert?: caderno_alunoUpsertWithWhereUniqueWithoutTbl_alunoInput | caderno_alunoUpsertWithWhereUniqueWithoutTbl_alunoInput[]
    createMany?: caderno_alunoCreateManyTbl_alunoInputEnvelope
    set?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
    disconnect?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
    delete?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
    connect?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
    update?: caderno_alunoUpdateWithWhereUniqueWithoutTbl_alunoInput | caderno_alunoUpdateWithWhereUniqueWithoutTbl_alunoInput[]
    updateMany?: caderno_alunoUpdateManyWithWhereWithoutTbl_alunoInput | caderno_alunoUpdateManyWithWhereWithoutTbl_alunoInput[]
    deleteMany?: caderno_alunoScalarWhereInput | caderno_alunoScalarWhereInput[]
  }

  export type tbl_iconesUpdateOneRequiredWithoutTbl_alunoNestedInput = {
    create?: XOR<tbl_iconesCreateWithoutTbl_alunoInput, tbl_iconesUncheckedCreateWithoutTbl_alunoInput>
    connectOrCreate?: tbl_iconesCreateOrConnectWithoutTbl_alunoInput
    upsert?: tbl_iconesUpsertWithoutTbl_alunoInput
    connect?: tbl_iconesWhereUniqueInput
    update?: XOR<XOR<tbl_iconesUpdateToOneWithWhereWithoutTbl_alunoInput, tbl_iconesUpdateWithoutTbl_alunoInput>, tbl_iconesUncheckedUpdateWithoutTbl_alunoInput>
  }

  export type tbl_cursosUpdateOneRequiredWithoutTbl_alunoNestedInput = {
    create?: XOR<tbl_cursosCreateWithoutTbl_alunoInput, tbl_cursosUncheckedCreateWithoutTbl_alunoInput>
    connectOrCreate?: tbl_cursosCreateOrConnectWithoutTbl_alunoInput
    upsert?: tbl_cursosUpsertWithoutTbl_alunoInput
    connect?: tbl_cursosWhereUniqueInput
    update?: XOR<XOR<tbl_cursosUpdateToOneWithWhereWithoutTbl_alunoInput, tbl_cursosUpdateWithoutTbl_alunoInput>, tbl_cursosUncheckedUpdateWithoutTbl_alunoInput>
  }

  export type tbl_aluno_agendaUpdateManyWithoutTbl_alunoNestedInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_alunoInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput> | tbl_aluno_agendaCreateWithoutTbl_alunoInput[] | tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput[]
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput | tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput[]
    upsert?: tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_alunoInput | tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_alunoInput[]
    createMany?: tbl_aluno_agendaCreateManyTbl_alunoInputEnvelope
    set?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    disconnect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    delete?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    connect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    update?: tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_alunoInput | tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_alunoInput[]
    updateMany?: tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_alunoInput | tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_alunoInput[]
    deleteMany?: tbl_aluno_agendaScalarWhereInput | tbl_aluno_agendaScalarWhereInput[]
  }

  export type caderno_alunoUncheckedUpdateManyWithoutTbl_alunoNestedInput = {
    create?: XOR<caderno_alunoCreateWithoutTbl_alunoInput, caderno_alunoUncheckedCreateWithoutTbl_alunoInput> | caderno_alunoCreateWithoutTbl_alunoInput[] | caderno_alunoUncheckedCreateWithoutTbl_alunoInput[]
    connectOrCreate?: caderno_alunoCreateOrConnectWithoutTbl_alunoInput | caderno_alunoCreateOrConnectWithoutTbl_alunoInput[]
    upsert?: caderno_alunoUpsertWithWhereUniqueWithoutTbl_alunoInput | caderno_alunoUpsertWithWhereUniqueWithoutTbl_alunoInput[]
    createMany?: caderno_alunoCreateManyTbl_alunoInputEnvelope
    set?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
    disconnect?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
    delete?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
    connect?: caderno_alunoWhereUniqueInput | caderno_alunoWhereUniqueInput[]
    update?: caderno_alunoUpdateWithWhereUniqueWithoutTbl_alunoInput | caderno_alunoUpdateWithWhereUniqueWithoutTbl_alunoInput[]
    updateMany?: caderno_alunoUpdateManyWithWhereWithoutTbl_alunoInput | caderno_alunoUpdateManyWithWhereWithoutTbl_alunoInput[]
    deleteMany?: caderno_alunoScalarWhereInput | caderno_alunoScalarWhereInput[]
  }

  export type tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_alunoNestedInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_alunoInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput> | tbl_aluno_agendaCreateWithoutTbl_alunoInput[] | tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput[]
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput | tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput[]
    upsert?: tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_alunoInput | tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_alunoInput[]
    createMany?: tbl_aluno_agendaCreateManyTbl_alunoInputEnvelope
    set?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    disconnect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    delete?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    connect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    update?: tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_alunoInput | tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_alunoInput[]
    updateMany?: tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_alunoInput | tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_alunoInput[]
    deleteMany?: tbl_aluno_agendaScalarWhereInput | tbl_aluno_agendaScalarWhereInput[]
  }

  export type tbl_semanaCreateNestedOneWithoutTbl_aluno_agendaInput = {
    create?: XOR<tbl_semanaCreateWithoutTbl_aluno_agendaInput, tbl_semanaUncheckedCreateWithoutTbl_aluno_agendaInput>
    connectOrCreate?: tbl_semanaCreateOrConnectWithoutTbl_aluno_agendaInput
    connect?: tbl_semanaWhereUniqueInput
  }

  export type tbl_alunoCreateNestedOneWithoutTbl_aluno_agendaInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_aluno_agendaInput, tbl_alunoUncheckedCreateWithoutTbl_aluno_agendaInput>
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_aluno_agendaInput
    connect?: tbl_alunoWhereUniqueInput
  }

  export type tbl_cronogramaCreateNestedManyWithoutTbl_aluno_agendaInput = {
    create?: XOR<tbl_cronogramaCreateWithoutTbl_aluno_agendaInput, tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput> | tbl_cronogramaCreateWithoutTbl_aluno_agendaInput[] | tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput[]
    connectOrCreate?: tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput | tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput[]
    createMany?: tbl_cronogramaCreateManyTbl_aluno_agendaInputEnvelope
    connect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
  }

  export type tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_aluno_agendaInput = {
    create?: XOR<tbl_cronogramaCreateWithoutTbl_aluno_agendaInput, tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput> | tbl_cronogramaCreateWithoutTbl_aluno_agendaInput[] | tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput[]
    connectOrCreate?: tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput | tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput[]
    createMany?: tbl_cronogramaCreateManyTbl_aluno_agendaInputEnvelope
    connect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
  }

  export type tbl_semanaUpdateOneRequiredWithoutTbl_aluno_agendaNestedInput = {
    create?: XOR<tbl_semanaCreateWithoutTbl_aluno_agendaInput, tbl_semanaUncheckedCreateWithoutTbl_aluno_agendaInput>
    connectOrCreate?: tbl_semanaCreateOrConnectWithoutTbl_aluno_agendaInput
    upsert?: tbl_semanaUpsertWithoutTbl_aluno_agendaInput
    connect?: tbl_semanaWhereUniqueInput
    update?: XOR<XOR<tbl_semanaUpdateToOneWithWhereWithoutTbl_aluno_agendaInput, tbl_semanaUpdateWithoutTbl_aluno_agendaInput>, tbl_semanaUncheckedUpdateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_alunoUpdateOneRequiredWithoutTbl_aluno_agendaNestedInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_aluno_agendaInput, tbl_alunoUncheckedCreateWithoutTbl_aluno_agendaInput>
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_aluno_agendaInput
    upsert?: tbl_alunoUpsertWithoutTbl_aluno_agendaInput
    connect?: tbl_alunoWhereUniqueInput
    update?: XOR<XOR<tbl_alunoUpdateToOneWithWhereWithoutTbl_aluno_agendaInput, tbl_alunoUpdateWithoutTbl_aluno_agendaInput>, tbl_alunoUncheckedUpdateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_cronogramaUpdateManyWithoutTbl_aluno_agendaNestedInput = {
    create?: XOR<tbl_cronogramaCreateWithoutTbl_aluno_agendaInput, tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput> | tbl_cronogramaCreateWithoutTbl_aluno_agendaInput[] | tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput[]
    connectOrCreate?: tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput | tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput[]
    upsert?: tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_aluno_agendaInput | tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_aluno_agendaInput[]
    createMany?: tbl_cronogramaCreateManyTbl_aluno_agendaInputEnvelope
    set?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    disconnect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    delete?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    connect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    update?: tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_aluno_agendaInput | tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_aluno_agendaInput[]
    updateMany?: tbl_cronogramaUpdateManyWithWhereWithoutTbl_aluno_agendaInput | tbl_cronogramaUpdateManyWithWhereWithoutTbl_aluno_agendaInput[]
    deleteMany?: tbl_cronogramaScalarWhereInput | tbl_cronogramaScalarWhereInput[]
  }

  export type tbl_cronogramaUncheckedUpdateManyWithoutTbl_aluno_agendaNestedInput = {
    create?: XOR<tbl_cronogramaCreateWithoutTbl_aluno_agendaInput, tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput> | tbl_cronogramaCreateWithoutTbl_aluno_agendaInput[] | tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput[]
    connectOrCreate?: tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput | tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput[]
    upsert?: tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_aluno_agendaInput | tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_aluno_agendaInput[]
    createMany?: tbl_cronogramaCreateManyTbl_aluno_agendaInputEnvelope
    set?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    disconnect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    delete?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    connect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    update?: tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_aluno_agendaInput | tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_aluno_agendaInput[]
    updateMany?: tbl_cronogramaUpdateManyWithWhereWithoutTbl_aluno_agendaInput | tbl_cronogramaUpdateManyWithWhereWithoutTbl_aluno_agendaInput[]
    deleteMany?: tbl_cronogramaScalarWhereInput | tbl_cronogramaScalarWhereInput[]
  }

  export type tbl_aluno_agendaCreateNestedOneWithoutTbl_cronogramaInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_cronogramaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_cronogramaInput>
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_cronogramaInput
    connect?: tbl_aluno_agendaWhereUniqueInput
  }

  export type tbl_disciplinaCreateNestedOneWithoutTbl_cronogramaInput = {
    create?: XOR<tbl_disciplinaCreateWithoutTbl_cronogramaInput, tbl_disciplinaUncheckedCreateWithoutTbl_cronogramaInput>
    connectOrCreate?: tbl_disciplinaCreateOrConnectWithoutTbl_cronogramaInput
    connect?: tbl_disciplinaWhereUniqueInput
  }

  export type tbl_aluno_agendaUpdateOneRequiredWithoutTbl_cronogramaNestedInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_cronogramaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_cronogramaInput>
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_cronogramaInput
    upsert?: tbl_aluno_agendaUpsertWithoutTbl_cronogramaInput
    connect?: tbl_aluno_agendaWhereUniqueInput
    update?: XOR<XOR<tbl_aluno_agendaUpdateToOneWithWhereWithoutTbl_cronogramaInput, tbl_aluno_agendaUpdateWithoutTbl_cronogramaInput>, tbl_aluno_agendaUncheckedUpdateWithoutTbl_cronogramaInput>
  }

  export type tbl_disciplinaUpdateOneRequiredWithoutTbl_cronogramaNestedInput = {
    create?: XOR<tbl_disciplinaCreateWithoutTbl_cronogramaInput, tbl_disciplinaUncheckedCreateWithoutTbl_cronogramaInput>
    connectOrCreate?: tbl_disciplinaCreateOrConnectWithoutTbl_cronogramaInput
    upsert?: tbl_disciplinaUpsertWithoutTbl_cronogramaInput
    connect?: tbl_disciplinaWhereUniqueInput
    update?: XOR<XOR<tbl_disciplinaUpdateToOneWithWhereWithoutTbl_cronogramaInput, tbl_disciplinaUpdateWithoutTbl_cronogramaInput>, tbl_disciplinaUncheckedUpdateWithoutTbl_cronogramaInput>
  }

  export type tbl_alunoCreateNestedManyWithoutTbl_cursosInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_cursosInput, tbl_alunoUncheckedCreateWithoutTbl_cursosInput> | tbl_alunoCreateWithoutTbl_cursosInput[] | tbl_alunoUncheckedCreateWithoutTbl_cursosInput[]
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_cursosInput | tbl_alunoCreateOrConnectWithoutTbl_cursosInput[]
    createMany?: tbl_alunoCreateManyTbl_cursosInputEnvelope
    connect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
  }

  export type tbl_cursos_disciplinaCreateNestedManyWithoutTbl_cursosInput = {
    create?: XOR<tbl_cursos_disciplinaCreateWithoutTbl_cursosInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput> | tbl_cursos_disciplinaCreateWithoutTbl_cursosInput[] | tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput[]
    connectOrCreate?: tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput | tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput[]
    createMany?: tbl_cursos_disciplinaCreateManyTbl_cursosInputEnvelope
    connect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
  }

  export type tbl_alunoUncheckedCreateNestedManyWithoutTbl_cursosInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_cursosInput, tbl_alunoUncheckedCreateWithoutTbl_cursosInput> | tbl_alunoCreateWithoutTbl_cursosInput[] | tbl_alunoUncheckedCreateWithoutTbl_cursosInput[]
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_cursosInput | tbl_alunoCreateOrConnectWithoutTbl_cursosInput[]
    createMany?: tbl_alunoCreateManyTbl_cursosInputEnvelope
    connect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
  }

  export type tbl_cursos_disciplinaUncheckedCreateNestedManyWithoutTbl_cursosInput = {
    create?: XOR<tbl_cursos_disciplinaCreateWithoutTbl_cursosInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput> | tbl_cursos_disciplinaCreateWithoutTbl_cursosInput[] | tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput[]
    connectOrCreate?: tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput | tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput[]
    createMany?: tbl_cursos_disciplinaCreateManyTbl_cursosInputEnvelope
    connect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
  }

  export type tbl_alunoUpdateManyWithoutTbl_cursosNestedInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_cursosInput, tbl_alunoUncheckedCreateWithoutTbl_cursosInput> | tbl_alunoCreateWithoutTbl_cursosInput[] | tbl_alunoUncheckedCreateWithoutTbl_cursosInput[]
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_cursosInput | tbl_alunoCreateOrConnectWithoutTbl_cursosInput[]
    upsert?: tbl_alunoUpsertWithWhereUniqueWithoutTbl_cursosInput | tbl_alunoUpsertWithWhereUniqueWithoutTbl_cursosInput[]
    createMany?: tbl_alunoCreateManyTbl_cursosInputEnvelope
    set?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    disconnect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    delete?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    connect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    update?: tbl_alunoUpdateWithWhereUniqueWithoutTbl_cursosInput | tbl_alunoUpdateWithWhereUniqueWithoutTbl_cursosInput[]
    updateMany?: tbl_alunoUpdateManyWithWhereWithoutTbl_cursosInput | tbl_alunoUpdateManyWithWhereWithoutTbl_cursosInput[]
    deleteMany?: tbl_alunoScalarWhereInput | tbl_alunoScalarWhereInput[]
  }

  export type tbl_cursos_disciplinaUpdateManyWithoutTbl_cursosNestedInput = {
    create?: XOR<tbl_cursos_disciplinaCreateWithoutTbl_cursosInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput> | tbl_cursos_disciplinaCreateWithoutTbl_cursosInput[] | tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput[]
    connectOrCreate?: tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput | tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput[]
    upsert?: tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_cursosInput | tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_cursosInput[]
    createMany?: tbl_cursos_disciplinaCreateManyTbl_cursosInputEnvelope
    set?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    disconnect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    delete?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    connect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    update?: tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_cursosInput | tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_cursosInput[]
    updateMany?: tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_cursosInput | tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_cursosInput[]
    deleteMany?: tbl_cursos_disciplinaScalarWhereInput | tbl_cursos_disciplinaScalarWhereInput[]
  }

  export type tbl_alunoUncheckedUpdateManyWithoutTbl_cursosNestedInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_cursosInput, tbl_alunoUncheckedCreateWithoutTbl_cursosInput> | tbl_alunoCreateWithoutTbl_cursosInput[] | tbl_alunoUncheckedCreateWithoutTbl_cursosInput[]
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_cursosInput | tbl_alunoCreateOrConnectWithoutTbl_cursosInput[]
    upsert?: tbl_alunoUpsertWithWhereUniqueWithoutTbl_cursosInput | tbl_alunoUpsertWithWhereUniqueWithoutTbl_cursosInput[]
    createMany?: tbl_alunoCreateManyTbl_cursosInputEnvelope
    set?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    disconnect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    delete?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    connect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    update?: tbl_alunoUpdateWithWhereUniqueWithoutTbl_cursosInput | tbl_alunoUpdateWithWhereUniqueWithoutTbl_cursosInput[]
    updateMany?: tbl_alunoUpdateManyWithWhereWithoutTbl_cursosInput | tbl_alunoUpdateManyWithWhereWithoutTbl_cursosInput[]
    deleteMany?: tbl_alunoScalarWhereInput | tbl_alunoScalarWhereInput[]
  }

  export type tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_cursosNestedInput = {
    create?: XOR<tbl_cursos_disciplinaCreateWithoutTbl_cursosInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput> | tbl_cursos_disciplinaCreateWithoutTbl_cursosInput[] | tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput[]
    connectOrCreate?: tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput | tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput[]
    upsert?: tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_cursosInput | tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_cursosInput[]
    createMany?: tbl_cursos_disciplinaCreateManyTbl_cursosInputEnvelope
    set?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    disconnect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    delete?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    connect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    update?: tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_cursosInput | tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_cursosInput[]
    updateMany?: tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_cursosInput | tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_cursosInput[]
    deleteMany?: tbl_cursos_disciplinaScalarWhereInput | tbl_cursos_disciplinaScalarWhereInput[]
  }

  export type tbl_cursosCreateNestedOneWithoutTbl_cursos_disciplinaInput = {
    create?: XOR<tbl_cursosCreateWithoutTbl_cursos_disciplinaInput, tbl_cursosUncheckedCreateWithoutTbl_cursos_disciplinaInput>
    connectOrCreate?: tbl_cursosCreateOrConnectWithoutTbl_cursos_disciplinaInput
    connect?: tbl_cursosWhereUniqueInput
  }

  export type tbl_disciplinaCreateNestedOneWithoutTbl_cursos_disciplinaInput = {
    create?: XOR<tbl_disciplinaCreateWithoutTbl_cursos_disciplinaInput, tbl_disciplinaUncheckedCreateWithoutTbl_cursos_disciplinaInput>
    connectOrCreate?: tbl_disciplinaCreateOrConnectWithoutTbl_cursos_disciplinaInput
    connect?: tbl_disciplinaWhereUniqueInput
  }

  export type tbl_cursosUpdateOneRequiredWithoutTbl_cursos_disciplinaNestedInput = {
    create?: XOR<tbl_cursosCreateWithoutTbl_cursos_disciplinaInput, tbl_cursosUncheckedCreateWithoutTbl_cursos_disciplinaInput>
    connectOrCreate?: tbl_cursosCreateOrConnectWithoutTbl_cursos_disciplinaInput
    upsert?: tbl_cursosUpsertWithoutTbl_cursos_disciplinaInput
    connect?: tbl_cursosWhereUniqueInput
    update?: XOR<XOR<tbl_cursosUpdateToOneWithWhereWithoutTbl_cursos_disciplinaInput, tbl_cursosUpdateWithoutTbl_cursos_disciplinaInput>, tbl_cursosUncheckedUpdateWithoutTbl_cursos_disciplinaInput>
  }

  export type tbl_disciplinaUpdateOneRequiredWithoutTbl_cursos_disciplinaNestedInput = {
    create?: XOR<tbl_disciplinaCreateWithoutTbl_cursos_disciplinaInput, tbl_disciplinaUncheckedCreateWithoutTbl_cursos_disciplinaInput>
    connectOrCreate?: tbl_disciplinaCreateOrConnectWithoutTbl_cursos_disciplinaInput
    upsert?: tbl_disciplinaUpsertWithoutTbl_cursos_disciplinaInput
    connect?: tbl_disciplinaWhereUniqueInput
    update?: XOR<XOR<tbl_disciplinaUpdateToOneWithWhereWithoutTbl_cursos_disciplinaInput, tbl_disciplinaUpdateWithoutTbl_cursos_disciplinaInput>, tbl_disciplinaUncheckedUpdateWithoutTbl_cursos_disciplinaInput>
  }

  export type tbl_cronogramaCreateNestedManyWithoutTbl_disciplinaInput = {
    create?: XOR<tbl_cronogramaCreateWithoutTbl_disciplinaInput, tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput> | tbl_cronogramaCreateWithoutTbl_disciplinaInput[] | tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput | tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput[]
    createMany?: tbl_cronogramaCreateManyTbl_disciplinaInputEnvelope
    connect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
  }

  export type tbl_cursos_disciplinaCreateNestedManyWithoutTbl_disciplinaInput = {
    create?: XOR<tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput> | tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput[] | tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput | tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput[]
    createMany?: tbl_cursos_disciplinaCreateManyTbl_disciplinaInputEnvelope
    connect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
  }

  export type tbl_disciplina_topicoCreateNestedManyWithoutTbl_disciplinaInput = {
    create?: XOR<tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput> | tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput[] | tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput | tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput[]
    createMany?: tbl_disciplina_topicoCreateManyTbl_disciplinaInputEnvelope
    connect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
  }

  export type tbl_prof_disciplinasCreateNestedManyWithoutTbl_disciplinaInput = {
    create?: XOR<tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput> | tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput[] | tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput | tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput[]
    createMany?: tbl_prof_disciplinasCreateManyTbl_disciplinaInputEnvelope
    connect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
  }

  export type tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_disciplinaInput = {
    create?: XOR<tbl_cronogramaCreateWithoutTbl_disciplinaInput, tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput> | tbl_cronogramaCreateWithoutTbl_disciplinaInput[] | tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput | tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput[]
    createMany?: tbl_cronogramaCreateManyTbl_disciplinaInputEnvelope
    connect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
  }

  export type tbl_cursos_disciplinaUncheckedCreateNestedManyWithoutTbl_disciplinaInput = {
    create?: XOR<tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput> | tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput[] | tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput | tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput[]
    createMany?: tbl_cursos_disciplinaCreateManyTbl_disciplinaInputEnvelope
    connect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
  }

  export type tbl_disciplina_topicoUncheckedCreateNestedManyWithoutTbl_disciplinaInput = {
    create?: XOR<tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput> | tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput[] | tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput | tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput[]
    createMany?: tbl_disciplina_topicoCreateManyTbl_disciplinaInputEnvelope
    connect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
  }

  export type tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_disciplinaInput = {
    create?: XOR<tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput> | tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput[] | tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput | tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput[]
    createMany?: tbl_prof_disciplinasCreateManyTbl_disciplinaInputEnvelope
    connect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
  }

  export type tbl_cronogramaUpdateManyWithoutTbl_disciplinaNestedInput = {
    create?: XOR<tbl_cronogramaCreateWithoutTbl_disciplinaInput, tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput> | tbl_cronogramaCreateWithoutTbl_disciplinaInput[] | tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput | tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput[]
    upsert?: tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_disciplinaInput | tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_disciplinaInput[]
    createMany?: tbl_cronogramaCreateManyTbl_disciplinaInputEnvelope
    set?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    disconnect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    delete?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    connect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    update?: tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_disciplinaInput | tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_disciplinaInput[]
    updateMany?: tbl_cronogramaUpdateManyWithWhereWithoutTbl_disciplinaInput | tbl_cronogramaUpdateManyWithWhereWithoutTbl_disciplinaInput[]
    deleteMany?: tbl_cronogramaScalarWhereInput | tbl_cronogramaScalarWhereInput[]
  }

  export type tbl_cursos_disciplinaUpdateManyWithoutTbl_disciplinaNestedInput = {
    create?: XOR<tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput> | tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput[] | tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput | tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput[]
    upsert?: tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_disciplinaInput | tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_disciplinaInput[]
    createMany?: tbl_cursos_disciplinaCreateManyTbl_disciplinaInputEnvelope
    set?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    disconnect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    delete?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    connect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    update?: tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_disciplinaInput | tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_disciplinaInput[]
    updateMany?: tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_disciplinaInput | tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_disciplinaInput[]
    deleteMany?: tbl_cursos_disciplinaScalarWhereInput | tbl_cursos_disciplinaScalarWhereInput[]
  }

  export type tbl_disciplina_topicoUpdateManyWithoutTbl_disciplinaNestedInput = {
    create?: XOR<tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput> | tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput[] | tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput | tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput[]
    upsert?: tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_disciplinaInput | tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_disciplinaInput[]
    createMany?: tbl_disciplina_topicoCreateManyTbl_disciplinaInputEnvelope
    set?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    disconnect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    delete?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    connect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    update?: tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_disciplinaInput | tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_disciplinaInput[]
    updateMany?: tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_disciplinaInput | tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_disciplinaInput[]
    deleteMany?: tbl_disciplina_topicoScalarWhereInput | tbl_disciplina_topicoScalarWhereInput[]
  }

  export type tbl_prof_disciplinasUpdateManyWithoutTbl_disciplinaNestedInput = {
    create?: XOR<tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput> | tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput[] | tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput | tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput[]
    upsert?: tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_disciplinaInput | tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_disciplinaInput[]
    createMany?: tbl_prof_disciplinasCreateManyTbl_disciplinaInputEnvelope
    set?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    disconnect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    delete?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    connect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    update?: tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_disciplinaInput | tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_disciplinaInput[]
    updateMany?: tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_disciplinaInput | tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_disciplinaInput[]
    deleteMany?: tbl_prof_disciplinasScalarWhereInput | tbl_prof_disciplinasScalarWhereInput[]
  }

  export type tbl_cronogramaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput = {
    create?: XOR<tbl_cronogramaCreateWithoutTbl_disciplinaInput, tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput> | tbl_cronogramaCreateWithoutTbl_disciplinaInput[] | tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput | tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput[]
    upsert?: tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_disciplinaInput | tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_disciplinaInput[]
    createMany?: tbl_cronogramaCreateManyTbl_disciplinaInputEnvelope
    set?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    disconnect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    delete?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    connect?: tbl_cronogramaWhereUniqueInput | tbl_cronogramaWhereUniqueInput[]
    update?: tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_disciplinaInput | tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_disciplinaInput[]
    updateMany?: tbl_cronogramaUpdateManyWithWhereWithoutTbl_disciplinaInput | tbl_cronogramaUpdateManyWithWhereWithoutTbl_disciplinaInput[]
    deleteMany?: tbl_cronogramaScalarWhereInput | tbl_cronogramaScalarWhereInput[]
  }

  export type tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput = {
    create?: XOR<tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput> | tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput[] | tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput | tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput[]
    upsert?: tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_disciplinaInput | tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_disciplinaInput[]
    createMany?: tbl_cursos_disciplinaCreateManyTbl_disciplinaInputEnvelope
    set?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    disconnect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    delete?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    connect?: tbl_cursos_disciplinaWhereUniqueInput | tbl_cursos_disciplinaWhereUniqueInput[]
    update?: tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_disciplinaInput | tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_disciplinaInput[]
    updateMany?: tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_disciplinaInput | tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_disciplinaInput[]
    deleteMany?: tbl_cursos_disciplinaScalarWhereInput | tbl_cursos_disciplinaScalarWhereInput[]
  }

  export type tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_disciplinaNestedInput = {
    create?: XOR<tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput> | tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput[] | tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput | tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput[]
    upsert?: tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_disciplinaInput | tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_disciplinaInput[]
    createMany?: tbl_disciplina_topicoCreateManyTbl_disciplinaInputEnvelope
    set?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    disconnect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    delete?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    connect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    update?: tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_disciplinaInput | tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_disciplinaInput[]
    updateMany?: tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_disciplinaInput | tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_disciplinaInput[]
    deleteMany?: tbl_disciplina_topicoScalarWhereInput | tbl_disciplina_topicoScalarWhereInput[]
  }

  export type tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_disciplinaNestedInput = {
    create?: XOR<tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput> | tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput[] | tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput[]
    connectOrCreate?: tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput | tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput[]
    upsert?: tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_disciplinaInput | tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_disciplinaInput[]
    createMany?: tbl_prof_disciplinasCreateManyTbl_disciplinaInputEnvelope
    set?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    disconnect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    delete?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    connect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    update?: tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_disciplinaInput | tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_disciplinaInput[]
    updateMany?: tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_disciplinaInput | tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_disciplinaInput[]
    deleteMany?: tbl_prof_disciplinasScalarWhereInput | tbl_prof_disciplinasScalarWhereInput[]
  }

  export type tbl_disciplinaCreateNestedOneWithoutTbl_disciplina_topicoInput = {
    create?: XOR<tbl_disciplinaCreateWithoutTbl_disciplina_topicoInput, tbl_disciplinaUncheckedCreateWithoutTbl_disciplina_topicoInput>
    connectOrCreate?: tbl_disciplinaCreateOrConnectWithoutTbl_disciplina_topicoInput
    connect?: tbl_disciplinaWhereUniqueInput
  }

  export type tbl_topicosCreateNestedOneWithoutTbl_disciplina_topicoInput = {
    create?: XOR<tbl_topicosCreateWithoutTbl_disciplina_topicoInput, tbl_topicosUncheckedCreateWithoutTbl_disciplina_topicoInput>
    connectOrCreate?: tbl_topicosCreateOrConnectWithoutTbl_disciplina_topicoInput
    connect?: tbl_topicosWhereUniqueInput
  }

  export type tbl_disciplinaUpdateOneRequiredWithoutTbl_disciplina_topicoNestedInput = {
    create?: XOR<tbl_disciplinaCreateWithoutTbl_disciplina_topicoInput, tbl_disciplinaUncheckedCreateWithoutTbl_disciplina_topicoInput>
    connectOrCreate?: tbl_disciplinaCreateOrConnectWithoutTbl_disciplina_topicoInput
    upsert?: tbl_disciplinaUpsertWithoutTbl_disciplina_topicoInput
    connect?: tbl_disciplinaWhereUniqueInput
    update?: XOR<XOR<tbl_disciplinaUpdateToOneWithWhereWithoutTbl_disciplina_topicoInput, tbl_disciplinaUpdateWithoutTbl_disciplina_topicoInput>, tbl_disciplinaUncheckedUpdateWithoutTbl_disciplina_topicoInput>
  }

  export type tbl_topicosUpdateOneRequiredWithoutTbl_disciplina_topicoNestedInput = {
    create?: XOR<tbl_topicosCreateWithoutTbl_disciplina_topicoInput, tbl_topicosUncheckedCreateWithoutTbl_disciplina_topicoInput>
    connectOrCreate?: tbl_topicosCreateOrConnectWithoutTbl_disciplina_topicoInput
    upsert?: tbl_topicosUpsertWithoutTbl_disciplina_topicoInput
    connect?: tbl_topicosWhereUniqueInput
    update?: XOR<XOR<tbl_topicosUpdateToOneWithWhereWithoutTbl_disciplina_topicoInput, tbl_topicosUpdateWithoutTbl_disciplina_topicoInput>, tbl_topicosUncheckedUpdateWithoutTbl_disciplina_topicoInput>
  }

  export type tbl_alternativasCreateNestedManyWithoutTbl_exercicioInput = {
    create?: XOR<tbl_alternativasCreateWithoutTbl_exercicioInput, tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput> | tbl_alternativasCreateWithoutTbl_exercicioInput[] | tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput[]
    connectOrCreate?: tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput | tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput[]
    createMany?: tbl_alternativasCreateManyTbl_exercicioInputEnvelope
    connect?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
  }

  export type tbl_alternativasUncheckedCreateNestedManyWithoutTbl_exercicioInput = {
    create?: XOR<tbl_alternativasCreateWithoutTbl_exercicioInput, tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput> | tbl_alternativasCreateWithoutTbl_exercicioInput[] | tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput[]
    connectOrCreate?: tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput | tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput[]
    createMany?: tbl_alternativasCreateManyTbl_exercicioInputEnvelope
    connect?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
  }

  export type tbl_alternativasUpdateManyWithoutTbl_exercicioNestedInput = {
    create?: XOR<tbl_alternativasCreateWithoutTbl_exercicioInput, tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput> | tbl_alternativasCreateWithoutTbl_exercicioInput[] | tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput[]
    connectOrCreate?: tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput | tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput[]
    upsert?: tbl_alternativasUpsertWithWhereUniqueWithoutTbl_exercicioInput | tbl_alternativasUpsertWithWhereUniqueWithoutTbl_exercicioInput[]
    createMany?: tbl_alternativasCreateManyTbl_exercicioInputEnvelope
    set?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
    disconnect?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
    delete?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
    connect?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
    update?: tbl_alternativasUpdateWithWhereUniqueWithoutTbl_exercicioInput | tbl_alternativasUpdateWithWhereUniqueWithoutTbl_exercicioInput[]
    updateMany?: tbl_alternativasUpdateManyWithWhereWithoutTbl_exercicioInput | tbl_alternativasUpdateManyWithWhereWithoutTbl_exercicioInput[]
    deleteMany?: tbl_alternativasScalarWhereInput | tbl_alternativasScalarWhereInput[]
  }

  export type tbl_alternativasUncheckedUpdateManyWithoutTbl_exercicioNestedInput = {
    create?: XOR<tbl_alternativasCreateWithoutTbl_exercicioInput, tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput> | tbl_alternativasCreateWithoutTbl_exercicioInput[] | tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput[]
    connectOrCreate?: tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput | tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput[]
    upsert?: tbl_alternativasUpsertWithWhereUniqueWithoutTbl_exercicioInput | tbl_alternativasUpsertWithWhereUniqueWithoutTbl_exercicioInput[]
    createMany?: tbl_alternativasCreateManyTbl_exercicioInputEnvelope
    set?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
    disconnect?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
    delete?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
    connect?: tbl_alternativasWhereUniqueInput | tbl_alternativasWhereUniqueInput[]
    update?: tbl_alternativasUpdateWithWhereUniqueWithoutTbl_exercicioInput | tbl_alternativasUpdateWithWhereUniqueWithoutTbl_exercicioInput[]
    updateMany?: tbl_alternativasUpdateManyWithWhereWithoutTbl_exercicioInput | tbl_alternativasUpdateManyWithWhereWithoutTbl_exercicioInput[]
    deleteMany?: tbl_alternativasScalarWhereInput | tbl_alternativasScalarWhereInput[]
  }

  export type tbl_vest_fasesCreateNestedManyWithoutTbl_fasesInput = {
    create?: XOR<tbl_vest_fasesCreateWithoutTbl_fasesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput> | tbl_vest_fasesCreateWithoutTbl_fasesInput[] | tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput[]
    connectOrCreate?: tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput | tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput[]
    createMany?: tbl_vest_fasesCreateManyTbl_fasesInputEnvelope
    connect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
  }

  export type tbl_vest_fasesUncheckedCreateNestedManyWithoutTbl_fasesInput = {
    create?: XOR<tbl_vest_fasesCreateWithoutTbl_fasesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput> | tbl_vest_fasesCreateWithoutTbl_fasesInput[] | tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput[]
    connectOrCreate?: tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput | tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput[]
    createMany?: tbl_vest_fasesCreateManyTbl_fasesInputEnvelope
    connect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbl_vest_fasesUpdateManyWithoutTbl_fasesNestedInput = {
    create?: XOR<tbl_vest_fasesCreateWithoutTbl_fasesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput> | tbl_vest_fasesCreateWithoutTbl_fasesInput[] | tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput[]
    connectOrCreate?: tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput | tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput[]
    upsert?: tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_fasesInput | tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_fasesInput[]
    createMany?: tbl_vest_fasesCreateManyTbl_fasesInputEnvelope
    set?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    disconnect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    delete?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    connect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    update?: tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_fasesInput | tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_fasesInput[]
    updateMany?: tbl_vest_fasesUpdateManyWithWhereWithoutTbl_fasesInput | tbl_vest_fasesUpdateManyWithWhereWithoutTbl_fasesInput[]
    deleteMany?: tbl_vest_fasesScalarWhereInput | tbl_vest_fasesScalarWhereInput[]
  }

  export type tbl_vest_fasesUncheckedUpdateManyWithoutTbl_fasesNestedInput = {
    create?: XOR<tbl_vest_fasesCreateWithoutTbl_fasesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput> | tbl_vest_fasesCreateWithoutTbl_fasesInput[] | tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput[]
    connectOrCreate?: tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput | tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput[]
    upsert?: tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_fasesInput | tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_fasesInput[]
    createMany?: tbl_vest_fasesCreateManyTbl_fasesInputEnvelope
    set?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    disconnect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    delete?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    connect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    update?: tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_fasesInput | tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_fasesInput[]
    updateMany?: tbl_vest_fasesUpdateManyWithWhereWithoutTbl_fasesInput | tbl_vest_fasesUpdateManyWithWhereWithoutTbl_fasesInput[]
    deleteMany?: tbl_vest_fasesScalarWhereInput | tbl_vest_fasesScalarWhereInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type tbl_alunoCreateNestedManyWithoutTbl_iconesInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_iconesInput, tbl_alunoUncheckedCreateWithoutTbl_iconesInput> | tbl_alunoCreateWithoutTbl_iconesInput[] | tbl_alunoUncheckedCreateWithoutTbl_iconesInput[]
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_iconesInput | tbl_alunoCreateOrConnectWithoutTbl_iconesInput[]
    createMany?: tbl_alunoCreateManyTbl_iconesInputEnvelope
    connect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
  }

  export type tbl_professorCreateNestedManyWithoutTbl_iconesInput = {
    create?: XOR<tbl_professorCreateWithoutTbl_iconesInput, tbl_professorUncheckedCreateWithoutTbl_iconesInput> | tbl_professorCreateWithoutTbl_iconesInput[] | tbl_professorUncheckedCreateWithoutTbl_iconesInput[]
    connectOrCreate?: tbl_professorCreateOrConnectWithoutTbl_iconesInput | tbl_professorCreateOrConnectWithoutTbl_iconesInput[]
    createMany?: tbl_professorCreateManyTbl_iconesInputEnvelope
    connect?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
  }

  export type tbl_alunoUncheckedCreateNestedManyWithoutTbl_iconesInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_iconesInput, tbl_alunoUncheckedCreateWithoutTbl_iconesInput> | tbl_alunoCreateWithoutTbl_iconesInput[] | tbl_alunoUncheckedCreateWithoutTbl_iconesInput[]
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_iconesInput | tbl_alunoCreateOrConnectWithoutTbl_iconesInput[]
    createMany?: tbl_alunoCreateManyTbl_iconesInputEnvelope
    connect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
  }

  export type tbl_professorUncheckedCreateNestedManyWithoutTbl_iconesInput = {
    create?: XOR<tbl_professorCreateWithoutTbl_iconesInput, tbl_professorUncheckedCreateWithoutTbl_iconesInput> | tbl_professorCreateWithoutTbl_iconesInput[] | tbl_professorUncheckedCreateWithoutTbl_iconesInput[]
    connectOrCreate?: tbl_professorCreateOrConnectWithoutTbl_iconesInput | tbl_professorCreateOrConnectWithoutTbl_iconesInput[]
    createMany?: tbl_professorCreateManyTbl_iconesInputEnvelope
    connect?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
  }

  export type tbl_alunoUpdateManyWithoutTbl_iconesNestedInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_iconesInput, tbl_alunoUncheckedCreateWithoutTbl_iconesInput> | tbl_alunoCreateWithoutTbl_iconesInput[] | tbl_alunoUncheckedCreateWithoutTbl_iconesInput[]
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_iconesInput | tbl_alunoCreateOrConnectWithoutTbl_iconesInput[]
    upsert?: tbl_alunoUpsertWithWhereUniqueWithoutTbl_iconesInput | tbl_alunoUpsertWithWhereUniqueWithoutTbl_iconesInput[]
    createMany?: tbl_alunoCreateManyTbl_iconesInputEnvelope
    set?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    disconnect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    delete?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    connect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    update?: tbl_alunoUpdateWithWhereUniqueWithoutTbl_iconesInput | tbl_alunoUpdateWithWhereUniqueWithoutTbl_iconesInput[]
    updateMany?: tbl_alunoUpdateManyWithWhereWithoutTbl_iconesInput | tbl_alunoUpdateManyWithWhereWithoutTbl_iconesInput[]
    deleteMany?: tbl_alunoScalarWhereInput | tbl_alunoScalarWhereInput[]
  }

  export type tbl_professorUpdateManyWithoutTbl_iconesNestedInput = {
    create?: XOR<tbl_professorCreateWithoutTbl_iconesInput, tbl_professorUncheckedCreateWithoutTbl_iconesInput> | tbl_professorCreateWithoutTbl_iconesInput[] | tbl_professorUncheckedCreateWithoutTbl_iconesInput[]
    connectOrCreate?: tbl_professorCreateOrConnectWithoutTbl_iconesInput | tbl_professorCreateOrConnectWithoutTbl_iconesInput[]
    upsert?: tbl_professorUpsertWithWhereUniqueWithoutTbl_iconesInput | tbl_professorUpsertWithWhereUniqueWithoutTbl_iconesInput[]
    createMany?: tbl_professorCreateManyTbl_iconesInputEnvelope
    set?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
    disconnect?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
    delete?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
    connect?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
    update?: tbl_professorUpdateWithWhereUniqueWithoutTbl_iconesInput | tbl_professorUpdateWithWhereUniqueWithoutTbl_iconesInput[]
    updateMany?: tbl_professorUpdateManyWithWhereWithoutTbl_iconesInput | tbl_professorUpdateManyWithWhereWithoutTbl_iconesInput[]
    deleteMany?: tbl_professorScalarWhereInput | tbl_professorScalarWhereInput[]
  }

  export type tbl_alunoUncheckedUpdateManyWithoutTbl_iconesNestedInput = {
    create?: XOR<tbl_alunoCreateWithoutTbl_iconesInput, tbl_alunoUncheckedCreateWithoutTbl_iconesInput> | tbl_alunoCreateWithoutTbl_iconesInput[] | tbl_alunoUncheckedCreateWithoutTbl_iconesInput[]
    connectOrCreate?: tbl_alunoCreateOrConnectWithoutTbl_iconesInput | tbl_alunoCreateOrConnectWithoutTbl_iconesInput[]
    upsert?: tbl_alunoUpsertWithWhereUniqueWithoutTbl_iconesInput | tbl_alunoUpsertWithWhereUniqueWithoutTbl_iconesInput[]
    createMany?: tbl_alunoCreateManyTbl_iconesInputEnvelope
    set?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    disconnect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    delete?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    connect?: tbl_alunoWhereUniqueInput | tbl_alunoWhereUniqueInput[]
    update?: tbl_alunoUpdateWithWhereUniqueWithoutTbl_iconesInput | tbl_alunoUpdateWithWhereUniqueWithoutTbl_iconesInput[]
    updateMany?: tbl_alunoUpdateManyWithWhereWithoutTbl_iconesInput | tbl_alunoUpdateManyWithWhereWithoutTbl_iconesInput[]
    deleteMany?: tbl_alunoScalarWhereInput | tbl_alunoScalarWhereInput[]
  }

  export type tbl_professorUncheckedUpdateManyWithoutTbl_iconesNestedInput = {
    create?: XOR<tbl_professorCreateWithoutTbl_iconesInput, tbl_professorUncheckedCreateWithoutTbl_iconesInput> | tbl_professorCreateWithoutTbl_iconesInput[] | tbl_professorUncheckedCreateWithoutTbl_iconesInput[]
    connectOrCreate?: tbl_professorCreateOrConnectWithoutTbl_iconesInput | tbl_professorCreateOrConnectWithoutTbl_iconesInput[]
    upsert?: tbl_professorUpsertWithWhereUniqueWithoutTbl_iconesInput | tbl_professorUpsertWithWhereUniqueWithoutTbl_iconesInput[]
    createMany?: tbl_professorCreateManyTbl_iconesInputEnvelope
    set?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
    disconnect?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
    delete?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
    connect?: tbl_professorWhereUniqueInput | tbl_professorWhereUniqueInput[]
    update?: tbl_professorUpdateWithWhereUniqueWithoutTbl_iconesInput | tbl_professorUpdateWithWhereUniqueWithoutTbl_iconesInput[]
    updateMany?: tbl_professorUpdateManyWithWhereWithoutTbl_iconesInput | tbl_professorUpdateManyWithWhereWithoutTbl_iconesInput[]
    deleteMany?: tbl_professorScalarWhereInput | tbl_professorScalarWhereInput[]
  }

  export type tbl_vestibularesCreateNestedManyWithoutTbl_intituicoesInput = {
    create?: XOR<tbl_vestibularesCreateWithoutTbl_intituicoesInput, tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput> | tbl_vestibularesCreateWithoutTbl_intituicoesInput[] | tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput[]
    connectOrCreate?: tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput | tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput[]
    createMany?: tbl_vestibularesCreateManyTbl_intituicoesInputEnvelope
    connect?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
  }

  export type tbl_vestibularesUncheckedCreateNestedManyWithoutTbl_intituicoesInput = {
    create?: XOR<tbl_vestibularesCreateWithoutTbl_intituicoesInput, tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput> | tbl_vestibularesCreateWithoutTbl_intituicoesInput[] | tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput[]
    connectOrCreate?: tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput | tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput[]
    createMany?: tbl_vestibularesCreateManyTbl_intituicoesInputEnvelope
    connect?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
  }

  export type tbl_vestibularesUpdateManyWithoutTbl_intituicoesNestedInput = {
    create?: XOR<tbl_vestibularesCreateWithoutTbl_intituicoesInput, tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput> | tbl_vestibularesCreateWithoutTbl_intituicoesInput[] | tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput[]
    connectOrCreate?: tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput | tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput[]
    upsert?: tbl_vestibularesUpsertWithWhereUniqueWithoutTbl_intituicoesInput | tbl_vestibularesUpsertWithWhereUniqueWithoutTbl_intituicoesInput[]
    createMany?: tbl_vestibularesCreateManyTbl_intituicoesInputEnvelope
    set?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
    disconnect?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
    delete?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
    connect?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
    update?: tbl_vestibularesUpdateWithWhereUniqueWithoutTbl_intituicoesInput | tbl_vestibularesUpdateWithWhereUniqueWithoutTbl_intituicoesInput[]
    updateMany?: tbl_vestibularesUpdateManyWithWhereWithoutTbl_intituicoesInput | tbl_vestibularesUpdateManyWithWhereWithoutTbl_intituicoesInput[]
    deleteMany?: tbl_vestibularesScalarWhereInput | tbl_vestibularesScalarWhereInput[]
  }

  export type tbl_vestibularesUncheckedUpdateManyWithoutTbl_intituicoesNestedInput = {
    create?: XOR<tbl_vestibularesCreateWithoutTbl_intituicoesInput, tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput> | tbl_vestibularesCreateWithoutTbl_intituicoesInput[] | tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput[]
    connectOrCreate?: tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput | tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput[]
    upsert?: tbl_vestibularesUpsertWithWhereUniqueWithoutTbl_intituicoesInput | tbl_vestibularesUpsertWithWhereUniqueWithoutTbl_intituicoesInput[]
    createMany?: tbl_vestibularesCreateManyTbl_intituicoesInputEnvelope
    set?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
    disconnect?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
    delete?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
    connect?: tbl_vestibularesWhereUniqueInput | tbl_vestibularesWhereUniqueInput[]
    update?: tbl_vestibularesUpdateWithWhereUniqueWithoutTbl_intituicoesInput | tbl_vestibularesUpdateWithWhereUniqueWithoutTbl_intituicoesInput[]
    updateMany?: tbl_vestibularesUpdateManyWithWhereWithoutTbl_intituicoesInput | tbl_vestibularesUpdateManyWithWhereWithoutTbl_intituicoesInput[]
    deleteMany?: tbl_vestibularesScalarWhereInput | tbl_vestibularesScalarWhereInput[]
  }

  export type tbl_semanaCreateNestedOneWithoutTbl_prof_agendaInput = {
    create?: XOR<tbl_semanaCreateWithoutTbl_prof_agendaInput, tbl_semanaUncheckedCreateWithoutTbl_prof_agendaInput>
    connectOrCreate?: tbl_semanaCreateOrConnectWithoutTbl_prof_agendaInput
    connect?: tbl_semanaWhereUniqueInput
  }

  export type tbl_professorCreateNestedOneWithoutTbl_prof_agendaInput = {
    create?: XOR<tbl_professorCreateWithoutTbl_prof_agendaInput, tbl_professorUncheckedCreateWithoutTbl_prof_agendaInput>
    connectOrCreate?: tbl_professorCreateOrConnectWithoutTbl_prof_agendaInput
    connect?: tbl_professorWhereUniqueInput
  }

  export type tbl_semanaUpdateOneRequiredWithoutTbl_prof_agendaNestedInput = {
    create?: XOR<tbl_semanaCreateWithoutTbl_prof_agendaInput, tbl_semanaUncheckedCreateWithoutTbl_prof_agendaInput>
    connectOrCreate?: tbl_semanaCreateOrConnectWithoutTbl_prof_agendaInput
    upsert?: tbl_semanaUpsertWithoutTbl_prof_agendaInput
    connect?: tbl_semanaWhereUniqueInput
    update?: XOR<XOR<tbl_semanaUpdateToOneWithWhereWithoutTbl_prof_agendaInput, tbl_semanaUpdateWithoutTbl_prof_agendaInput>, tbl_semanaUncheckedUpdateWithoutTbl_prof_agendaInput>
  }

  export type tbl_professorUpdateOneRequiredWithoutTbl_prof_agendaNestedInput = {
    create?: XOR<tbl_professorCreateWithoutTbl_prof_agendaInput, tbl_professorUncheckedCreateWithoutTbl_prof_agendaInput>
    connectOrCreate?: tbl_professorCreateOrConnectWithoutTbl_prof_agendaInput
    upsert?: tbl_professorUpsertWithoutTbl_prof_agendaInput
    connect?: tbl_professorWhereUniqueInput
    update?: XOR<XOR<tbl_professorUpdateToOneWithWhereWithoutTbl_prof_agendaInput, tbl_professorUpdateWithoutTbl_prof_agendaInput>, tbl_professorUncheckedUpdateWithoutTbl_prof_agendaInput>
  }

  export type tbl_disciplinaCreateNestedOneWithoutTbl_prof_disciplinasInput = {
    create?: XOR<tbl_disciplinaCreateWithoutTbl_prof_disciplinasInput, tbl_disciplinaUncheckedCreateWithoutTbl_prof_disciplinasInput>
    connectOrCreate?: tbl_disciplinaCreateOrConnectWithoutTbl_prof_disciplinasInput
    connect?: tbl_disciplinaWhereUniqueInput
  }

  export type tbl_professorCreateNestedOneWithoutTbl_prof_disciplinasInput = {
    create?: XOR<tbl_professorCreateWithoutTbl_prof_disciplinasInput, tbl_professorUncheckedCreateWithoutTbl_prof_disciplinasInput>
    connectOrCreate?: tbl_professorCreateOrConnectWithoutTbl_prof_disciplinasInput
    connect?: tbl_professorWhereUniqueInput
  }

  export type tbl_disciplinaUpdateOneRequiredWithoutTbl_prof_disciplinasNestedInput = {
    create?: XOR<tbl_disciplinaCreateWithoutTbl_prof_disciplinasInput, tbl_disciplinaUncheckedCreateWithoutTbl_prof_disciplinasInput>
    connectOrCreate?: tbl_disciplinaCreateOrConnectWithoutTbl_prof_disciplinasInput
    upsert?: tbl_disciplinaUpsertWithoutTbl_prof_disciplinasInput
    connect?: tbl_disciplinaWhereUniqueInput
    update?: XOR<XOR<tbl_disciplinaUpdateToOneWithWhereWithoutTbl_prof_disciplinasInput, tbl_disciplinaUpdateWithoutTbl_prof_disciplinasInput>, tbl_disciplinaUncheckedUpdateWithoutTbl_prof_disciplinasInput>
  }

  export type tbl_professorUpdateOneRequiredWithoutTbl_prof_disciplinasNestedInput = {
    create?: XOR<tbl_professorCreateWithoutTbl_prof_disciplinasInput, tbl_professorUncheckedCreateWithoutTbl_prof_disciplinasInput>
    connectOrCreate?: tbl_professorCreateOrConnectWithoutTbl_prof_disciplinasInput
    upsert?: tbl_professorUpsertWithoutTbl_prof_disciplinasInput
    connect?: tbl_professorWhereUniqueInput
    update?: XOR<XOR<tbl_professorUpdateToOneWithWhereWithoutTbl_prof_disciplinasInput, tbl_professorUpdateWithoutTbl_prof_disciplinasInput>, tbl_professorUncheckedUpdateWithoutTbl_prof_disciplinasInput>
  }

  export type tbl_prof_agendaCreateNestedManyWithoutTbl_professorInput = {
    create?: XOR<tbl_prof_agendaCreateWithoutTbl_professorInput, tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput> | tbl_prof_agendaCreateWithoutTbl_professorInput[] | tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput[]
    connectOrCreate?: tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput | tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput[]
    createMany?: tbl_prof_agendaCreateManyTbl_professorInputEnvelope
    connect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
  }

  export type tbl_prof_disciplinasCreateNestedManyWithoutTbl_professorInput = {
    create?: XOR<tbl_prof_disciplinasCreateWithoutTbl_professorInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput> | tbl_prof_disciplinasCreateWithoutTbl_professorInput[] | tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput[]
    connectOrCreate?: tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput | tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput[]
    createMany?: tbl_prof_disciplinasCreateManyTbl_professorInputEnvelope
    connect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
  }

  export type tbl_iconesCreateNestedOneWithoutTbl_professorInput = {
    create?: XOR<tbl_iconesCreateWithoutTbl_professorInput, tbl_iconesUncheckedCreateWithoutTbl_professorInput>
    connectOrCreate?: tbl_iconesCreateOrConnectWithoutTbl_professorInput
    connect?: tbl_iconesWhereUniqueInput
  }

  export type tbl_prof_agendaUncheckedCreateNestedManyWithoutTbl_professorInput = {
    create?: XOR<tbl_prof_agendaCreateWithoutTbl_professorInput, tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput> | tbl_prof_agendaCreateWithoutTbl_professorInput[] | tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput[]
    connectOrCreate?: tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput | tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput[]
    createMany?: tbl_prof_agendaCreateManyTbl_professorInputEnvelope
    connect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
  }

  export type tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_professorInput = {
    create?: XOR<tbl_prof_disciplinasCreateWithoutTbl_professorInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput> | tbl_prof_disciplinasCreateWithoutTbl_professorInput[] | tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput[]
    connectOrCreate?: tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput | tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput[]
    createMany?: tbl_prof_disciplinasCreateManyTbl_professorInputEnvelope
    connect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
  }

  export type tbl_prof_agendaUpdateManyWithoutTbl_professorNestedInput = {
    create?: XOR<tbl_prof_agendaCreateWithoutTbl_professorInput, tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput> | tbl_prof_agendaCreateWithoutTbl_professorInput[] | tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput[]
    connectOrCreate?: tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput | tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput[]
    upsert?: tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_professorInput | tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_professorInput[]
    createMany?: tbl_prof_agendaCreateManyTbl_professorInputEnvelope
    set?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    disconnect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    delete?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    connect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    update?: tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_professorInput | tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_professorInput[]
    updateMany?: tbl_prof_agendaUpdateManyWithWhereWithoutTbl_professorInput | tbl_prof_agendaUpdateManyWithWhereWithoutTbl_professorInput[]
    deleteMany?: tbl_prof_agendaScalarWhereInput | tbl_prof_agendaScalarWhereInput[]
  }

  export type tbl_prof_disciplinasUpdateManyWithoutTbl_professorNestedInput = {
    create?: XOR<tbl_prof_disciplinasCreateWithoutTbl_professorInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput> | tbl_prof_disciplinasCreateWithoutTbl_professorInput[] | tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput[]
    connectOrCreate?: tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput | tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput[]
    upsert?: tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_professorInput | tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_professorInput[]
    createMany?: tbl_prof_disciplinasCreateManyTbl_professorInputEnvelope
    set?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    disconnect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    delete?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    connect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    update?: tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_professorInput | tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_professorInput[]
    updateMany?: tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_professorInput | tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_professorInput[]
    deleteMany?: tbl_prof_disciplinasScalarWhereInput | tbl_prof_disciplinasScalarWhereInput[]
  }

  export type tbl_iconesUpdateOneRequiredWithoutTbl_professorNestedInput = {
    create?: XOR<tbl_iconesCreateWithoutTbl_professorInput, tbl_iconesUncheckedCreateWithoutTbl_professorInput>
    connectOrCreate?: tbl_iconesCreateOrConnectWithoutTbl_professorInput
    upsert?: tbl_iconesUpsertWithoutTbl_professorInput
    connect?: tbl_iconesWhereUniqueInput
    update?: XOR<XOR<tbl_iconesUpdateToOneWithWhereWithoutTbl_professorInput, tbl_iconesUpdateWithoutTbl_professorInput>, tbl_iconesUncheckedUpdateWithoutTbl_professorInput>
  }

  export type tbl_prof_agendaUncheckedUpdateManyWithoutTbl_professorNestedInput = {
    create?: XOR<tbl_prof_agendaCreateWithoutTbl_professorInput, tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput> | tbl_prof_agendaCreateWithoutTbl_professorInput[] | tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput[]
    connectOrCreate?: tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput | tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput[]
    upsert?: tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_professorInput | tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_professorInput[]
    createMany?: tbl_prof_agendaCreateManyTbl_professorInputEnvelope
    set?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    disconnect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    delete?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    connect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    update?: tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_professorInput | tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_professorInput[]
    updateMany?: tbl_prof_agendaUpdateManyWithWhereWithoutTbl_professorInput | tbl_prof_agendaUpdateManyWithWhereWithoutTbl_professorInput[]
    deleteMany?: tbl_prof_agendaScalarWhereInput | tbl_prof_agendaScalarWhereInput[]
  }

  export type tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_professorNestedInput = {
    create?: XOR<tbl_prof_disciplinasCreateWithoutTbl_professorInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput> | tbl_prof_disciplinasCreateWithoutTbl_professorInput[] | tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput[]
    connectOrCreate?: tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput | tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput[]
    upsert?: tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_professorInput | tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_professorInput[]
    createMany?: tbl_prof_disciplinasCreateManyTbl_professorInputEnvelope
    set?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    disconnect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    delete?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    connect?: tbl_prof_disciplinasWhereUniqueInput | tbl_prof_disciplinasWhereUniqueInput[]
    update?: tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_professorInput | tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_professorInput[]
    updateMany?: tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_professorInput | tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_professorInput[]
    deleteMany?: tbl_prof_disciplinasScalarWhereInput | tbl_prof_disciplinasScalarWhereInput[]
  }

  export type tbl_temaCreateNestedOneWithoutTbl_redacaoInput = {
    create?: XOR<tbl_temaCreateWithoutTbl_redacaoInput, tbl_temaUncheckedCreateWithoutTbl_redacaoInput>
    connectOrCreate?: tbl_temaCreateOrConnectWithoutTbl_redacaoInput
    connect?: tbl_temaWhereUniqueInput
  }

  export type tbl_temaUpdateOneRequiredWithoutTbl_redacaoNestedInput = {
    create?: XOR<tbl_temaCreateWithoutTbl_redacaoInput, tbl_temaUncheckedCreateWithoutTbl_redacaoInput>
    connectOrCreate?: tbl_temaCreateOrConnectWithoutTbl_redacaoInput
    upsert?: tbl_temaUpsertWithoutTbl_redacaoInput
    connect?: tbl_temaWhereUniqueInput
    update?: XOR<XOR<tbl_temaUpdateToOneWithWhereWithoutTbl_redacaoInput, tbl_temaUpdateWithoutTbl_redacaoInput>, tbl_temaUncheckedUpdateWithoutTbl_redacaoInput>
  }

  export type tbl_aluno_agendaCreateNestedManyWithoutTbl_semanaInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_semanaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput> | tbl_aluno_agendaCreateWithoutTbl_semanaInput[] | tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput[]
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput | tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput[]
    createMany?: tbl_aluno_agendaCreateManyTbl_semanaInputEnvelope
    connect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
  }

  export type tbl_prof_agendaCreateNestedManyWithoutTbl_semanaInput = {
    create?: XOR<tbl_prof_agendaCreateWithoutTbl_semanaInput, tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput> | tbl_prof_agendaCreateWithoutTbl_semanaInput[] | tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput[]
    connectOrCreate?: tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput | tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput[]
    createMany?: tbl_prof_agendaCreateManyTbl_semanaInputEnvelope
    connect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
  }

  export type tbl_aluno_agendaUncheckedCreateNestedManyWithoutTbl_semanaInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_semanaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput> | tbl_aluno_agendaCreateWithoutTbl_semanaInput[] | tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput[]
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput | tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput[]
    createMany?: tbl_aluno_agendaCreateManyTbl_semanaInputEnvelope
    connect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
  }

  export type tbl_prof_agendaUncheckedCreateNestedManyWithoutTbl_semanaInput = {
    create?: XOR<tbl_prof_agendaCreateWithoutTbl_semanaInput, tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput> | tbl_prof_agendaCreateWithoutTbl_semanaInput[] | tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput[]
    connectOrCreate?: tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput | tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput[]
    createMany?: tbl_prof_agendaCreateManyTbl_semanaInputEnvelope
    connect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
  }

  export type tbl_aluno_agendaUpdateManyWithoutTbl_semanaNestedInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_semanaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput> | tbl_aluno_agendaCreateWithoutTbl_semanaInput[] | tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput[]
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput | tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput[]
    upsert?: tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput | tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput[]
    createMany?: tbl_aluno_agendaCreateManyTbl_semanaInputEnvelope
    set?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    disconnect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    delete?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    connect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    update?: tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput | tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput[]
    updateMany?: tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_semanaInput | tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_semanaInput[]
    deleteMany?: tbl_aluno_agendaScalarWhereInput | tbl_aluno_agendaScalarWhereInput[]
  }

  export type tbl_prof_agendaUpdateManyWithoutTbl_semanaNestedInput = {
    create?: XOR<tbl_prof_agendaCreateWithoutTbl_semanaInput, tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput> | tbl_prof_agendaCreateWithoutTbl_semanaInput[] | tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput[]
    connectOrCreate?: tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput | tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput[]
    upsert?: tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput | tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput[]
    createMany?: tbl_prof_agendaCreateManyTbl_semanaInputEnvelope
    set?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    disconnect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    delete?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    connect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    update?: tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput | tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput[]
    updateMany?: tbl_prof_agendaUpdateManyWithWhereWithoutTbl_semanaInput | tbl_prof_agendaUpdateManyWithWhereWithoutTbl_semanaInput[]
    deleteMany?: tbl_prof_agendaScalarWhereInput | tbl_prof_agendaScalarWhereInput[]
  }

  export type tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_semanaNestedInput = {
    create?: XOR<tbl_aluno_agendaCreateWithoutTbl_semanaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput> | tbl_aluno_agendaCreateWithoutTbl_semanaInput[] | tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput[]
    connectOrCreate?: tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput | tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput[]
    upsert?: tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput | tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput[]
    createMany?: tbl_aluno_agendaCreateManyTbl_semanaInputEnvelope
    set?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    disconnect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    delete?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    connect?: tbl_aluno_agendaWhereUniqueInput | tbl_aluno_agendaWhereUniqueInput[]
    update?: tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput | tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput[]
    updateMany?: tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_semanaInput | tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_semanaInput[]
    deleteMany?: tbl_aluno_agendaScalarWhereInput | tbl_aluno_agendaScalarWhereInput[]
  }

  export type tbl_prof_agendaUncheckedUpdateManyWithoutTbl_semanaNestedInput = {
    create?: XOR<tbl_prof_agendaCreateWithoutTbl_semanaInput, tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput> | tbl_prof_agendaCreateWithoutTbl_semanaInput[] | tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput[]
    connectOrCreate?: tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput | tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput[]
    upsert?: tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput | tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput[]
    createMany?: tbl_prof_agendaCreateManyTbl_semanaInputEnvelope
    set?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    disconnect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    delete?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    connect?: tbl_prof_agendaWhereUniqueInput | tbl_prof_agendaWhereUniqueInput[]
    update?: tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput | tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput[]
    updateMany?: tbl_prof_agendaUpdateManyWithWhereWithoutTbl_semanaInput | tbl_prof_agendaUpdateManyWithWhereWithoutTbl_semanaInput[]
    deleteMany?: tbl_prof_agendaScalarWhereInput | tbl_prof_agendaScalarWhereInput[]
  }

  export type tbl_redacaoCreateNestedManyWithoutTbl_temaInput = {
    create?: XOR<tbl_redacaoCreateWithoutTbl_temaInput, tbl_redacaoUncheckedCreateWithoutTbl_temaInput> | tbl_redacaoCreateWithoutTbl_temaInput[] | tbl_redacaoUncheckedCreateWithoutTbl_temaInput[]
    connectOrCreate?: tbl_redacaoCreateOrConnectWithoutTbl_temaInput | tbl_redacaoCreateOrConnectWithoutTbl_temaInput[]
    createMany?: tbl_redacaoCreateManyTbl_temaInputEnvelope
    connect?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
  }

  export type tbl_redacaoUncheckedCreateNestedManyWithoutTbl_temaInput = {
    create?: XOR<tbl_redacaoCreateWithoutTbl_temaInput, tbl_redacaoUncheckedCreateWithoutTbl_temaInput> | tbl_redacaoCreateWithoutTbl_temaInput[] | tbl_redacaoUncheckedCreateWithoutTbl_temaInput[]
    connectOrCreate?: tbl_redacaoCreateOrConnectWithoutTbl_temaInput | tbl_redacaoCreateOrConnectWithoutTbl_temaInput[]
    createMany?: tbl_redacaoCreateManyTbl_temaInputEnvelope
    connect?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
  }

  export type tbl_redacaoUpdateManyWithoutTbl_temaNestedInput = {
    create?: XOR<tbl_redacaoCreateWithoutTbl_temaInput, tbl_redacaoUncheckedCreateWithoutTbl_temaInput> | tbl_redacaoCreateWithoutTbl_temaInput[] | tbl_redacaoUncheckedCreateWithoutTbl_temaInput[]
    connectOrCreate?: tbl_redacaoCreateOrConnectWithoutTbl_temaInput | tbl_redacaoCreateOrConnectWithoutTbl_temaInput[]
    upsert?: tbl_redacaoUpsertWithWhereUniqueWithoutTbl_temaInput | tbl_redacaoUpsertWithWhereUniqueWithoutTbl_temaInput[]
    createMany?: tbl_redacaoCreateManyTbl_temaInputEnvelope
    set?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
    disconnect?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
    delete?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
    connect?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
    update?: tbl_redacaoUpdateWithWhereUniqueWithoutTbl_temaInput | tbl_redacaoUpdateWithWhereUniqueWithoutTbl_temaInput[]
    updateMany?: tbl_redacaoUpdateManyWithWhereWithoutTbl_temaInput | tbl_redacaoUpdateManyWithWhereWithoutTbl_temaInput[]
    deleteMany?: tbl_redacaoScalarWhereInput | tbl_redacaoScalarWhereInput[]
  }

  export type tbl_redacaoUncheckedUpdateManyWithoutTbl_temaNestedInput = {
    create?: XOR<tbl_redacaoCreateWithoutTbl_temaInput, tbl_redacaoUncheckedCreateWithoutTbl_temaInput> | tbl_redacaoCreateWithoutTbl_temaInput[] | tbl_redacaoUncheckedCreateWithoutTbl_temaInput[]
    connectOrCreate?: tbl_redacaoCreateOrConnectWithoutTbl_temaInput | tbl_redacaoCreateOrConnectWithoutTbl_temaInput[]
    upsert?: tbl_redacaoUpsertWithWhereUniqueWithoutTbl_temaInput | tbl_redacaoUpsertWithWhereUniqueWithoutTbl_temaInput[]
    createMany?: tbl_redacaoCreateManyTbl_temaInputEnvelope
    set?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
    disconnect?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
    delete?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
    connect?: tbl_redacaoWhereUniqueInput | tbl_redacaoWhereUniqueInput[]
    update?: tbl_redacaoUpdateWithWhereUniqueWithoutTbl_temaInput | tbl_redacaoUpdateWithWhereUniqueWithoutTbl_temaInput[]
    updateMany?: tbl_redacaoUpdateManyWithWhereWithoutTbl_temaInput | tbl_redacaoUpdateManyWithWhereWithoutTbl_temaInput[]
    deleteMany?: tbl_redacaoScalarWhereInput | tbl_redacaoScalarWhereInput[]
  }

  export type tbl_disciplina_topicoCreateNestedManyWithoutTbl_topicosInput = {
    create?: XOR<tbl_disciplina_topicoCreateWithoutTbl_topicosInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput> | tbl_disciplina_topicoCreateWithoutTbl_topicosInput[] | tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput[]
    connectOrCreate?: tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput | tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput[]
    createMany?: tbl_disciplina_topicoCreateManyTbl_topicosInputEnvelope
    connect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
  }

  export type tbl_videoaulasCreateNestedManyWithoutTbl_topicosInput = {
    create?: XOR<tbl_videoaulasCreateWithoutTbl_topicosInput, tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput> | tbl_videoaulasCreateWithoutTbl_topicosInput[] | tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput[]
    connectOrCreate?: tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput | tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput[]
    createMany?: tbl_videoaulasCreateManyTbl_topicosInputEnvelope
    connect?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
  }

  export type tbl_disciplina_topicoUncheckedCreateNestedManyWithoutTbl_topicosInput = {
    create?: XOR<tbl_disciplina_topicoCreateWithoutTbl_topicosInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput> | tbl_disciplina_topicoCreateWithoutTbl_topicosInput[] | tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput[]
    connectOrCreate?: tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput | tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput[]
    createMany?: tbl_disciplina_topicoCreateManyTbl_topicosInputEnvelope
    connect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
  }

  export type tbl_videoaulasUncheckedCreateNestedManyWithoutTbl_topicosInput = {
    create?: XOR<tbl_videoaulasCreateWithoutTbl_topicosInput, tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput> | tbl_videoaulasCreateWithoutTbl_topicosInput[] | tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput[]
    connectOrCreate?: tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput | tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput[]
    createMany?: tbl_videoaulasCreateManyTbl_topicosInputEnvelope
    connect?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
  }

  export type tbl_disciplina_topicoUpdateManyWithoutTbl_topicosNestedInput = {
    create?: XOR<tbl_disciplina_topicoCreateWithoutTbl_topicosInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput> | tbl_disciplina_topicoCreateWithoutTbl_topicosInput[] | tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput[]
    connectOrCreate?: tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput | tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput[]
    upsert?: tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_topicosInput | tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_topicosInput[]
    createMany?: tbl_disciplina_topicoCreateManyTbl_topicosInputEnvelope
    set?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    disconnect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    delete?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    connect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    update?: tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_topicosInput | tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_topicosInput[]
    updateMany?: tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_topicosInput | tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_topicosInput[]
    deleteMany?: tbl_disciplina_topicoScalarWhereInput | tbl_disciplina_topicoScalarWhereInput[]
  }

  export type tbl_videoaulasUpdateManyWithoutTbl_topicosNestedInput = {
    create?: XOR<tbl_videoaulasCreateWithoutTbl_topicosInput, tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput> | tbl_videoaulasCreateWithoutTbl_topicosInput[] | tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput[]
    connectOrCreate?: tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput | tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput[]
    upsert?: tbl_videoaulasUpsertWithWhereUniqueWithoutTbl_topicosInput | tbl_videoaulasUpsertWithWhereUniqueWithoutTbl_topicosInput[]
    createMany?: tbl_videoaulasCreateManyTbl_topicosInputEnvelope
    set?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
    disconnect?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
    delete?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
    connect?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
    update?: tbl_videoaulasUpdateWithWhereUniqueWithoutTbl_topicosInput | tbl_videoaulasUpdateWithWhereUniqueWithoutTbl_topicosInput[]
    updateMany?: tbl_videoaulasUpdateManyWithWhereWithoutTbl_topicosInput | tbl_videoaulasUpdateManyWithWhereWithoutTbl_topicosInput[]
    deleteMany?: tbl_videoaulasScalarWhereInput | tbl_videoaulasScalarWhereInput[]
  }

  export type tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_topicosNestedInput = {
    create?: XOR<tbl_disciplina_topicoCreateWithoutTbl_topicosInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput> | tbl_disciplina_topicoCreateWithoutTbl_topicosInput[] | tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput[]
    connectOrCreate?: tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput | tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput[]
    upsert?: tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_topicosInput | tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_topicosInput[]
    createMany?: tbl_disciplina_topicoCreateManyTbl_topicosInputEnvelope
    set?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    disconnect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    delete?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    connect?: tbl_disciplina_topicoWhereUniqueInput | tbl_disciplina_topicoWhereUniqueInput[]
    update?: tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_topicosInput | tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_topicosInput[]
    updateMany?: tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_topicosInput | tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_topicosInput[]
    deleteMany?: tbl_disciplina_topicoScalarWhereInput | tbl_disciplina_topicoScalarWhereInput[]
  }

  export type tbl_videoaulasUncheckedUpdateManyWithoutTbl_topicosNestedInput = {
    create?: XOR<tbl_videoaulasCreateWithoutTbl_topicosInput, tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput> | tbl_videoaulasCreateWithoutTbl_topicosInput[] | tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput[]
    connectOrCreate?: tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput | tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput[]
    upsert?: tbl_videoaulasUpsertWithWhereUniqueWithoutTbl_topicosInput | tbl_videoaulasUpsertWithWhereUniqueWithoutTbl_topicosInput[]
    createMany?: tbl_videoaulasCreateManyTbl_topicosInputEnvelope
    set?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
    disconnect?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
    delete?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
    connect?: tbl_videoaulasWhereUniqueInput | tbl_videoaulasWhereUniqueInput[]
    update?: tbl_videoaulasUpdateWithWhereUniqueWithoutTbl_topicosInput | tbl_videoaulasUpdateWithWhereUniqueWithoutTbl_topicosInput[]
    updateMany?: tbl_videoaulasUpdateManyWithWhereWithoutTbl_topicosInput | tbl_videoaulasUpdateManyWithWhereWithoutTbl_topicosInput[]
    deleteMany?: tbl_videoaulasScalarWhereInput | tbl_videoaulasScalarWhereInput[]
  }

  export type tbl_vestibularesCreateNestedOneWithoutTbl_vest_fasesInput = {
    create?: XOR<tbl_vestibularesCreateWithoutTbl_vest_fasesInput, tbl_vestibularesUncheckedCreateWithoutTbl_vest_fasesInput>
    connectOrCreate?: tbl_vestibularesCreateOrConnectWithoutTbl_vest_fasesInput
    connect?: tbl_vestibularesWhereUniqueInput
  }

  export type tbl_fasesCreateNestedOneWithoutTbl_vest_fasesInput = {
    create?: XOR<tbl_fasesCreateWithoutTbl_vest_fasesInput, tbl_fasesUncheckedCreateWithoutTbl_vest_fasesInput>
    connectOrCreate?: tbl_fasesCreateOrConnectWithoutTbl_vest_fasesInput
    connect?: tbl_fasesWhereUniqueInput
  }

  export type tbl_vestibularesUpdateOneRequiredWithoutTbl_vest_fasesNestedInput = {
    create?: XOR<tbl_vestibularesCreateWithoutTbl_vest_fasesInput, tbl_vestibularesUncheckedCreateWithoutTbl_vest_fasesInput>
    connectOrCreate?: tbl_vestibularesCreateOrConnectWithoutTbl_vest_fasesInput
    upsert?: tbl_vestibularesUpsertWithoutTbl_vest_fasesInput
    connect?: tbl_vestibularesWhereUniqueInput
    update?: XOR<XOR<tbl_vestibularesUpdateToOneWithWhereWithoutTbl_vest_fasesInput, tbl_vestibularesUpdateWithoutTbl_vest_fasesInput>, tbl_vestibularesUncheckedUpdateWithoutTbl_vest_fasesInput>
  }

  export type tbl_fasesUpdateOneRequiredWithoutTbl_vest_fasesNestedInput = {
    create?: XOR<tbl_fasesCreateWithoutTbl_vest_fasesInput, tbl_fasesUncheckedCreateWithoutTbl_vest_fasesInput>
    connectOrCreate?: tbl_fasesCreateOrConnectWithoutTbl_vest_fasesInput
    upsert?: tbl_fasesUpsertWithoutTbl_vest_fasesInput
    connect?: tbl_fasesWhereUniqueInput
    update?: XOR<XOR<tbl_fasesUpdateToOneWithWhereWithoutTbl_vest_fasesInput, tbl_fasesUpdateWithoutTbl_vest_fasesInput>, tbl_fasesUncheckedUpdateWithoutTbl_vest_fasesInput>
  }

  export type tbl_vest_fasesCreateNestedManyWithoutTbl_vestibularesInput = {
    create?: XOR<tbl_vest_fasesCreateWithoutTbl_vestibularesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput> | tbl_vest_fasesCreateWithoutTbl_vestibularesInput[] | tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput[]
    connectOrCreate?: tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput | tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput[]
    createMany?: tbl_vest_fasesCreateManyTbl_vestibularesInputEnvelope
    connect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
  }

  export type tbl_intituicoesCreateNestedOneWithoutTbl_vestibularesInput = {
    create?: XOR<tbl_intituicoesCreateWithoutTbl_vestibularesInput, tbl_intituicoesUncheckedCreateWithoutTbl_vestibularesInput>
    connectOrCreate?: tbl_intituicoesCreateOrConnectWithoutTbl_vestibularesInput
    connect?: tbl_intituicoesWhereUniqueInput
  }

  export type tbl_vest_fasesUncheckedCreateNestedManyWithoutTbl_vestibularesInput = {
    create?: XOR<tbl_vest_fasesCreateWithoutTbl_vestibularesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput> | tbl_vest_fasesCreateWithoutTbl_vestibularesInput[] | tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput[]
    connectOrCreate?: tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput | tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput[]
    createMany?: tbl_vest_fasesCreateManyTbl_vestibularesInputEnvelope
    connect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
  }

  export type tbl_vest_fasesUpdateManyWithoutTbl_vestibularesNestedInput = {
    create?: XOR<tbl_vest_fasesCreateWithoutTbl_vestibularesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput> | tbl_vest_fasesCreateWithoutTbl_vestibularesInput[] | tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput[]
    connectOrCreate?: tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput | tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput[]
    upsert?: tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_vestibularesInput | tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_vestibularesInput[]
    createMany?: tbl_vest_fasesCreateManyTbl_vestibularesInputEnvelope
    set?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    disconnect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    delete?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    connect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    update?: tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_vestibularesInput | tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_vestibularesInput[]
    updateMany?: tbl_vest_fasesUpdateManyWithWhereWithoutTbl_vestibularesInput | tbl_vest_fasesUpdateManyWithWhereWithoutTbl_vestibularesInput[]
    deleteMany?: tbl_vest_fasesScalarWhereInput | tbl_vest_fasesScalarWhereInput[]
  }

  export type tbl_intituicoesUpdateOneRequiredWithoutTbl_vestibularesNestedInput = {
    create?: XOR<tbl_intituicoesCreateWithoutTbl_vestibularesInput, tbl_intituicoesUncheckedCreateWithoutTbl_vestibularesInput>
    connectOrCreate?: tbl_intituicoesCreateOrConnectWithoutTbl_vestibularesInput
    upsert?: tbl_intituicoesUpsertWithoutTbl_vestibularesInput
    connect?: tbl_intituicoesWhereUniqueInput
    update?: XOR<XOR<tbl_intituicoesUpdateToOneWithWhereWithoutTbl_vestibularesInput, tbl_intituicoesUpdateWithoutTbl_vestibularesInput>, tbl_intituicoesUncheckedUpdateWithoutTbl_vestibularesInput>
  }

  export type tbl_vest_fasesUncheckedUpdateManyWithoutTbl_vestibularesNestedInput = {
    create?: XOR<tbl_vest_fasesCreateWithoutTbl_vestibularesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput> | tbl_vest_fasesCreateWithoutTbl_vestibularesInput[] | tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput[]
    connectOrCreate?: tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput | tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput[]
    upsert?: tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_vestibularesInput | tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_vestibularesInput[]
    createMany?: tbl_vest_fasesCreateManyTbl_vestibularesInputEnvelope
    set?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    disconnect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    delete?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    connect?: tbl_vest_fasesWhereUniqueInput | tbl_vest_fasesWhereUniqueInput[]
    update?: tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_vestibularesInput | tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_vestibularesInput[]
    updateMany?: tbl_vest_fasesUpdateManyWithWhereWithoutTbl_vestibularesInput | tbl_vest_fasesUpdateManyWithWhereWithoutTbl_vestibularesInput[]
    deleteMany?: tbl_vest_fasesScalarWhereInput | tbl_vest_fasesScalarWhereInput[]
  }

  export type tbl_topicosCreateNestedOneWithoutTbl_videoaulasInput = {
    create?: XOR<tbl_topicosCreateWithoutTbl_videoaulasInput, tbl_topicosUncheckedCreateWithoutTbl_videoaulasInput>
    connectOrCreate?: tbl_topicosCreateOrConnectWithoutTbl_videoaulasInput
    connect?: tbl_topicosWhereUniqueInput
  }

  export type tbl_topicosUpdateOneRequiredWithoutTbl_videoaulasNestedInput = {
    create?: XOR<tbl_topicosCreateWithoutTbl_videoaulasInput, tbl_topicosUncheckedCreateWithoutTbl_videoaulasInput>
    connectOrCreate?: tbl_topicosCreateOrConnectWithoutTbl_videoaulasInput
    upsert?: tbl_topicosUpsertWithoutTbl_videoaulasInput
    connect?: tbl_topicosWhereUniqueInput
    update?: XOR<XOR<tbl_topicosUpdateToOneWithWhereWithoutTbl_videoaulasInput, tbl_topicosUpdateWithoutTbl_videoaulasInput>, tbl_topicosUncheckedUpdateWithoutTbl_videoaulasInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type tbl_alunoCreateWithoutCaderno_alunoInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    tbl_icones: tbl_iconesCreateNestedOneWithoutTbl_alunoInput
    tbl_cursos: tbl_cursosCreateNestedOneWithoutTbl_alunoInput
    tbl_aluno_agenda?: tbl_aluno_agendaCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoUncheckedCreateWithoutCaderno_alunoInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    curso_id: number
    status?: boolean | null
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoCreateOrConnectWithoutCaderno_alunoInput = {
    where: tbl_alunoWhereUniqueInput
    create: XOR<tbl_alunoCreateWithoutCaderno_alunoInput, tbl_alunoUncheckedCreateWithoutCaderno_alunoInput>
  }

  export type tbl_alunoUpsertWithoutCaderno_alunoInput = {
    update: XOR<tbl_alunoUpdateWithoutCaderno_alunoInput, tbl_alunoUncheckedUpdateWithoutCaderno_alunoInput>
    create: XOR<tbl_alunoCreateWithoutCaderno_alunoInput, tbl_alunoUncheckedCreateWithoutCaderno_alunoInput>
    where?: tbl_alunoWhereInput
  }

  export type tbl_alunoUpdateToOneWithWhereWithoutCaderno_alunoInput = {
    where?: tbl_alunoWhereInput
    data: XOR<tbl_alunoUpdateWithoutCaderno_alunoInput, tbl_alunoUncheckedUpdateWithoutCaderno_alunoInput>
  }

  export type tbl_alunoUpdateWithoutCaderno_alunoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_icones?: tbl_iconesUpdateOneRequiredWithoutTbl_alunoNestedInput
    tbl_cursos?: tbl_cursosUpdateOneRequiredWithoutTbl_alunoNestedInput
    tbl_aluno_agenda?: tbl_aluno_agendaUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_alunoUncheckedUpdateWithoutCaderno_alunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    curso_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_exercicioCreateWithoutTbl_alternativasInput = {
    questao?: string | null
    status?: boolean | null
  }

  export type tbl_exercicioUncheckedCreateWithoutTbl_alternativasInput = {
    id?: number
    questao?: string | null
    status?: boolean | null
  }

  export type tbl_exercicioCreateOrConnectWithoutTbl_alternativasInput = {
    where: tbl_exercicioWhereUniqueInput
    create: XOR<tbl_exercicioCreateWithoutTbl_alternativasInput, tbl_exercicioUncheckedCreateWithoutTbl_alternativasInput>
  }

  export type tbl_exercicioUpsertWithoutTbl_alternativasInput = {
    update: XOR<tbl_exercicioUpdateWithoutTbl_alternativasInput, tbl_exercicioUncheckedUpdateWithoutTbl_alternativasInput>
    create: XOR<tbl_exercicioCreateWithoutTbl_alternativasInput, tbl_exercicioUncheckedCreateWithoutTbl_alternativasInput>
    where?: tbl_exercicioWhereInput
  }

  export type tbl_exercicioUpdateToOneWithWhereWithoutTbl_alternativasInput = {
    where?: tbl_exercicioWhereInput
    data: XOR<tbl_exercicioUpdateWithoutTbl_alternativasInput, tbl_exercicioUncheckedUpdateWithoutTbl_alternativasInput>
  }

  export type tbl_exercicioUpdateWithoutTbl_alternativasInput = {
    questao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_exercicioUncheckedUpdateWithoutTbl_alternativasInput = {
    id?: IntFieldUpdateOperationsInput | number
    questao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type caderno_alunoCreateWithoutTbl_alunoInput = {
    titulo: string
    texto: string
  }

  export type caderno_alunoUncheckedCreateWithoutTbl_alunoInput = {
    id?: number
    titulo: string
    texto: string
  }

  export type caderno_alunoCreateOrConnectWithoutTbl_alunoInput = {
    where: caderno_alunoWhereUniqueInput
    create: XOR<caderno_alunoCreateWithoutTbl_alunoInput, caderno_alunoUncheckedCreateWithoutTbl_alunoInput>
  }

  export type caderno_alunoCreateManyTbl_alunoInputEnvelope = {
    data: caderno_alunoCreateManyTbl_alunoInput | caderno_alunoCreateManyTbl_alunoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_iconesCreateWithoutTbl_alunoInput = {
    url: string
    status?: boolean | null
    tbl_professor?: tbl_professorCreateNestedManyWithoutTbl_iconesInput
  }

  export type tbl_iconesUncheckedCreateWithoutTbl_alunoInput = {
    id?: number
    url: string
    status?: boolean | null
    tbl_professor?: tbl_professorUncheckedCreateNestedManyWithoutTbl_iconesInput
  }

  export type tbl_iconesCreateOrConnectWithoutTbl_alunoInput = {
    where: tbl_iconesWhereUniqueInput
    create: XOR<tbl_iconesCreateWithoutTbl_alunoInput, tbl_iconesUncheckedCreateWithoutTbl_alunoInput>
  }

  export type tbl_cursosCreateWithoutTbl_alunoInput = {
    nome: string
    tbl_cursos_disciplina?: tbl_cursos_disciplinaCreateNestedManyWithoutTbl_cursosInput
  }

  export type tbl_cursosUncheckedCreateWithoutTbl_alunoInput = {
    id?: number
    nome: string
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedCreateNestedManyWithoutTbl_cursosInput
  }

  export type tbl_cursosCreateOrConnectWithoutTbl_alunoInput = {
    where: tbl_cursosWhereUniqueInput
    create: XOR<tbl_cursosCreateWithoutTbl_alunoInput, tbl_cursosUncheckedCreateWithoutTbl_alunoInput>
  }

  export type tbl_aluno_agendaCreateWithoutTbl_alunoInput = {
    carga_horaria: number
    tbl_semana: tbl_semanaCreateNestedOneWithoutTbl_aluno_agendaInput
    tbl_cronograma?: tbl_cronogramaCreateNestedManyWithoutTbl_aluno_agendaInput
  }

  export type tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput = {
    id?: number
    carga_horaria: number
    semana_id: number
    tbl_cronograma?: tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_aluno_agendaInput
  }

  export type tbl_aluno_agendaCreateOrConnectWithoutTbl_alunoInput = {
    where: tbl_aluno_agendaWhereUniqueInput
    create: XOR<tbl_aluno_agendaCreateWithoutTbl_alunoInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput>
  }

  export type tbl_aluno_agendaCreateManyTbl_alunoInputEnvelope = {
    data: tbl_aluno_agendaCreateManyTbl_alunoInput | tbl_aluno_agendaCreateManyTbl_alunoInput[]
    skipDuplicates?: boolean
  }

  export type caderno_alunoUpsertWithWhereUniqueWithoutTbl_alunoInput = {
    where: caderno_alunoWhereUniqueInput
    update: XOR<caderno_alunoUpdateWithoutTbl_alunoInput, caderno_alunoUncheckedUpdateWithoutTbl_alunoInput>
    create: XOR<caderno_alunoCreateWithoutTbl_alunoInput, caderno_alunoUncheckedCreateWithoutTbl_alunoInput>
  }

  export type caderno_alunoUpdateWithWhereUniqueWithoutTbl_alunoInput = {
    where: caderno_alunoWhereUniqueInput
    data: XOR<caderno_alunoUpdateWithoutTbl_alunoInput, caderno_alunoUncheckedUpdateWithoutTbl_alunoInput>
  }

  export type caderno_alunoUpdateManyWithWhereWithoutTbl_alunoInput = {
    where: caderno_alunoScalarWhereInput
    data: XOR<caderno_alunoUpdateManyMutationInput, caderno_alunoUncheckedUpdateManyWithoutTbl_alunoInput>
  }

  export type caderno_alunoScalarWhereInput = {
    AND?: caderno_alunoScalarWhereInput | caderno_alunoScalarWhereInput[]
    OR?: caderno_alunoScalarWhereInput[]
    NOT?: caderno_alunoScalarWhereInput | caderno_alunoScalarWhereInput[]
    id?: IntFilter<"caderno_aluno"> | number
    titulo?: StringFilter<"caderno_aluno"> | string
    texto?: StringFilter<"caderno_aluno"> | string
    aluno_id?: IntFilter<"caderno_aluno"> | number
  }

  export type tbl_iconesUpsertWithoutTbl_alunoInput = {
    update: XOR<tbl_iconesUpdateWithoutTbl_alunoInput, tbl_iconesUncheckedUpdateWithoutTbl_alunoInput>
    create: XOR<tbl_iconesCreateWithoutTbl_alunoInput, tbl_iconesUncheckedCreateWithoutTbl_alunoInput>
    where?: tbl_iconesWhereInput
  }

  export type tbl_iconesUpdateToOneWithWhereWithoutTbl_alunoInput = {
    where?: tbl_iconesWhereInput
    data: XOR<tbl_iconesUpdateWithoutTbl_alunoInput, tbl_iconesUncheckedUpdateWithoutTbl_alunoInput>
  }

  export type tbl_iconesUpdateWithoutTbl_alunoInput = {
    url?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_professor?: tbl_professorUpdateManyWithoutTbl_iconesNestedInput
  }

  export type tbl_iconesUncheckedUpdateWithoutTbl_alunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_professor?: tbl_professorUncheckedUpdateManyWithoutTbl_iconesNestedInput
  }

  export type tbl_cursosUpsertWithoutTbl_alunoInput = {
    update: XOR<tbl_cursosUpdateWithoutTbl_alunoInput, tbl_cursosUncheckedUpdateWithoutTbl_alunoInput>
    create: XOR<tbl_cursosCreateWithoutTbl_alunoInput, tbl_cursosUncheckedCreateWithoutTbl_alunoInput>
    where?: tbl_cursosWhereInput
  }

  export type tbl_cursosUpdateToOneWithWhereWithoutTbl_alunoInput = {
    where?: tbl_cursosWhereInput
    data: XOR<tbl_cursosUpdateWithoutTbl_alunoInput, tbl_cursosUncheckedUpdateWithoutTbl_alunoInput>
  }

  export type tbl_cursosUpdateWithoutTbl_alunoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUpdateManyWithoutTbl_cursosNestedInput
  }

  export type tbl_cursosUncheckedUpdateWithoutTbl_alunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_cursosNestedInput
  }

  export type tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_alunoInput = {
    where: tbl_aluno_agendaWhereUniqueInput
    update: XOR<tbl_aluno_agendaUpdateWithoutTbl_alunoInput, tbl_aluno_agendaUncheckedUpdateWithoutTbl_alunoInput>
    create: XOR<tbl_aluno_agendaCreateWithoutTbl_alunoInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_alunoInput>
  }

  export type tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_alunoInput = {
    where: tbl_aluno_agendaWhereUniqueInput
    data: XOR<tbl_aluno_agendaUpdateWithoutTbl_alunoInput, tbl_aluno_agendaUncheckedUpdateWithoutTbl_alunoInput>
  }

  export type tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_alunoInput = {
    where: tbl_aluno_agendaScalarWhereInput
    data: XOR<tbl_aluno_agendaUpdateManyMutationInput, tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_alunoInput>
  }

  export type tbl_aluno_agendaScalarWhereInput = {
    AND?: tbl_aluno_agendaScalarWhereInput | tbl_aluno_agendaScalarWhereInput[]
    OR?: tbl_aluno_agendaScalarWhereInput[]
    NOT?: tbl_aluno_agendaScalarWhereInput | tbl_aluno_agendaScalarWhereInput[]
    id?: IntFilter<"tbl_aluno_agenda"> | number
    carga_horaria?: IntFilter<"tbl_aluno_agenda"> | number
    semana_id?: IntFilter<"tbl_aluno_agenda"> | number
    aluno_id?: IntFilter<"tbl_aluno_agenda"> | number
  }

  export type tbl_semanaCreateWithoutTbl_aluno_agendaInput = {
    nome: string
    tbl_prof_agenda?: tbl_prof_agendaCreateNestedManyWithoutTbl_semanaInput
  }

  export type tbl_semanaUncheckedCreateWithoutTbl_aluno_agendaInput = {
    id?: number
    nome: string
    tbl_prof_agenda?: tbl_prof_agendaUncheckedCreateNestedManyWithoutTbl_semanaInput
  }

  export type tbl_semanaCreateOrConnectWithoutTbl_aluno_agendaInput = {
    where: tbl_semanaWhereUniqueInput
    create: XOR<tbl_semanaCreateWithoutTbl_aluno_agendaInput, tbl_semanaUncheckedCreateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_alunoCreateWithoutTbl_aluno_agendaInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    caderno_aluno?: caderno_alunoCreateNestedManyWithoutTbl_alunoInput
    tbl_icones: tbl_iconesCreateNestedOneWithoutTbl_alunoInput
    tbl_cursos: tbl_cursosCreateNestedOneWithoutTbl_alunoInput
  }

  export type tbl_alunoUncheckedCreateWithoutTbl_aluno_agendaInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    curso_id: number
    status?: boolean | null
    caderno_aluno?: caderno_alunoUncheckedCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoCreateOrConnectWithoutTbl_aluno_agendaInput = {
    where: tbl_alunoWhereUniqueInput
    create: XOR<tbl_alunoCreateWithoutTbl_aluno_agendaInput, tbl_alunoUncheckedCreateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_cronogramaCreateWithoutTbl_aluno_agendaInput = {
    tbl_disciplina: tbl_disciplinaCreateNestedOneWithoutTbl_cronogramaInput
  }

  export type tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput = {
    id?: number
    disciplina_id: number
  }

  export type tbl_cronogramaCreateOrConnectWithoutTbl_aluno_agendaInput = {
    where: tbl_cronogramaWhereUniqueInput
    create: XOR<tbl_cronogramaCreateWithoutTbl_aluno_agendaInput, tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_cronogramaCreateManyTbl_aluno_agendaInputEnvelope = {
    data: tbl_cronogramaCreateManyTbl_aluno_agendaInput | tbl_cronogramaCreateManyTbl_aluno_agendaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_semanaUpsertWithoutTbl_aluno_agendaInput = {
    update: XOR<tbl_semanaUpdateWithoutTbl_aluno_agendaInput, tbl_semanaUncheckedUpdateWithoutTbl_aluno_agendaInput>
    create: XOR<tbl_semanaCreateWithoutTbl_aluno_agendaInput, tbl_semanaUncheckedCreateWithoutTbl_aluno_agendaInput>
    where?: tbl_semanaWhereInput
  }

  export type tbl_semanaUpdateToOneWithWhereWithoutTbl_aluno_agendaInput = {
    where?: tbl_semanaWhereInput
    data: XOR<tbl_semanaUpdateWithoutTbl_aluno_agendaInput, tbl_semanaUncheckedUpdateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_semanaUpdateWithoutTbl_aluno_agendaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_prof_agenda?: tbl_prof_agendaUpdateManyWithoutTbl_semanaNestedInput
  }

  export type tbl_semanaUncheckedUpdateWithoutTbl_aluno_agendaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_prof_agenda?: tbl_prof_agendaUncheckedUpdateManyWithoutTbl_semanaNestedInput
  }

  export type tbl_alunoUpsertWithoutTbl_aluno_agendaInput = {
    update: XOR<tbl_alunoUpdateWithoutTbl_aluno_agendaInput, tbl_alunoUncheckedUpdateWithoutTbl_aluno_agendaInput>
    create: XOR<tbl_alunoCreateWithoutTbl_aluno_agendaInput, tbl_alunoUncheckedCreateWithoutTbl_aluno_agendaInput>
    where?: tbl_alunoWhereInput
  }

  export type tbl_alunoUpdateToOneWithWhereWithoutTbl_aluno_agendaInput = {
    where?: tbl_alunoWhereInput
    data: XOR<tbl_alunoUpdateWithoutTbl_aluno_agendaInput, tbl_alunoUncheckedUpdateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_alunoUpdateWithoutTbl_aluno_agendaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    caderno_aluno?: caderno_alunoUpdateManyWithoutTbl_alunoNestedInput
    tbl_icones?: tbl_iconesUpdateOneRequiredWithoutTbl_alunoNestedInput
    tbl_cursos?: tbl_cursosUpdateOneRequiredWithoutTbl_alunoNestedInput
  }

  export type tbl_alunoUncheckedUpdateWithoutTbl_aluno_agendaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    curso_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    caderno_aluno?: caderno_alunoUncheckedUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_aluno_agendaInput = {
    where: tbl_cronogramaWhereUniqueInput
    update: XOR<tbl_cronogramaUpdateWithoutTbl_aluno_agendaInput, tbl_cronogramaUncheckedUpdateWithoutTbl_aluno_agendaInput>
    create: XOR<tbl_cronogramaCreateWithoutTbl_aluno_agendaInput, tbl_cronogramaUncheckedCreateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_aluno_agendaInput = {
    where: tbl_cronogramaWhereUniqueInput
    data: XOR<tbl_cronogramaUpdateWithoutTbl_aluno_agendaInput, tbl_cronogramaUncheckedUpdateWithoutTbl_aluno_agendaInput>
  }

  export type tbl_cronogramaUpdateManyWithWhereWithoutTbl_aluno_agendaInput = {
    where: tbl_cronogramaScalarWhereInput
    data: XOR<tbl_cronogramaUpdateManyMutationInput, tbl_cronogramaUncheckedUpdateManyWithoutTbl_aluno_agendaInput>
  }

  export type tbl_cronogramaScalarWhereInput = {
    AND?: tbl_cronogramaScalarWhereInput | tbl_cronogramaScalarWhereInput[]
    OR?: tbl_cronogramaScalarWhereInput[]
    NOT?: tbl_cronogramaScalarWhereInput | tbl_cronogramaScalarWhereInput[]
    id?: IntFilter<"tbl_cronograma"> | number
    agenda_aluno_id?: IntFilter<"tbl_cronograma"> | number
    disciplina_id?: IntFilter<"tbl_cronograma"> | number
  }

  export type tbl_aluno_agendaCreateWithoutTbl_cronogramaInput = {
    carga_horaria: number
    tbl_semana: tbl_semanaCreateNestedOneWithoutTbl_aluno_agendaInput
    tbl_aluno: tbl_alunoCreateNestedOneWithoutTbl_aluno_agendaInput
  }

  export type tbl_aluno_agendaUncheckedCreateWithoutTbl_cronogramaInput = {
    id?: number
    carga_horaria: number
    semana_id: number
    aluno_id: number
  }

  export type tbl_aluno_agendaCreateOrConnectWithoutTbl_cronogramaInput = {
    where: tbl_aluno_agendaWhereUniqueInput
    create: XOR<tbl_aluno_agendaCreateWithoutTbl_cronogramaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_cronogramaInput>
  }

  export type tbl_disciplinaCreateWithoutTbl_cronogramaInput = {
    nome: string
    tbl_cursos_disciplina?: tbl_cursos_disciplinaCreateNestedManyWithoutTbl_disciplinaInput
    tbl_disciplina_topico?: tbl_disciplina_topicoCreateNestedManyWithoutTbl_disciplinaInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaUncheckedCreateWithoutTbl_cronogramaInput = {
    id?: number
    nome: string
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaCreateOrConnectWithoutTbl_cronogramaInput = {
    where: tbl_disciplinaWhereUniqueInput
    create: XOR<tbl_disciplinaCreateWithoutTbl_cronogramaInput, tbl_disciplinaUncheckedCreateWithoutTbl_cronogramaInput>
  }

  export type tbl_aluno_agendaUpsertWithoutTbl_cronogramaInput = {
    update: XOR<tbl_aluno_agendaUpdateWithoutTbl_cronogramaInput, tbl_aluno_agendaUncheckedUpdateWithoutTbl_cronogramaInput>
    create: XOR<tbl_aluno_agendaCreateWithoutTbl_cronogramaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_cronogramaInput>
    where?: tbl_aluno_agendaWhereInput
  }

  export type tbl_aluno_agendaUpdateToOneWithWhereWithoutTbl_cronogramaInput = {
    where?: tbl_aluno_agendaWhereInput
    data: XOR<tbl_aluno_agendaUpdateWithoutTbl_cronogramaInput, tbl_aluno_agendaUncheckedUpdateWithoutTbl_cronogramaInput>
  }

  export type tbl_aluno_agendaUpdateWithoutTbl_cronogramaInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
    tbl_semana?: tbl_semanaUpdateOneRequiredWithoutTbl_aluno_agendaNestedInput
    tbl_aluno?: tbl_alunoUpdateOneRequiredWithoutTbl_aluno_agendaNestedInput
  }

  export type tbl_aluno_agendaUncheckedUpdateWithoutTbl_cronogramaInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
    aluno_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_disciplinaUpsertWithoutTbl_cronogramaInput = {
    update: XOR<tbl_disciplinaUpdateWithoutTbl_cronogramaInput, tbl_disciplinaUncheckedUpdateWithoutTbl_cronogramaInput>
    create: XOR<tbl_disciplinaCreateWithoutTbl_cronogramaInput, tbl_disciplinaUncheckedCreateWithoutTbl_cronogramaInput>
    where?: tbl_disciplinaWhereInput
  }

  export type tbl_disciplinaUpdateToOneWithWhereWithoutTbl_cronogramaInput = {
    where?: tbl_disciplinaWhereInput
    data: XOR<tbl_disciplinaUpdateWithoutTbl_cronogramaInput, tbl_disciplinaUncheckedUpdateWithoutTbl_cronogramaInput>
  }

  export type tbl_disciplinaUpdateWithoutTbl_cronogramaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_disciplinaUncheckedUpdateWithoutTbl_cronogramaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_alunoCreateWithoutTbl_cursosInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    caderno_aluno?: caderno_alunoCreateNestedManyWithoutTbl_alunoInput
    tbl_icones: tbl_iconesCreateNestedOneWithoutTbl_alunoInput
    tbl_aluno_agenda?: tbl_aluno_agendaCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoUncheckedCreateWithoutTbl_cursosInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    status?: boolean | null
    caderno_aluno?: caderno_alunoUncheckedCreateNestedManyWithoutTbl_alunoInput
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoCreateOrConnectWithoutTbl_cursosInput = {
    where: tbl_alunoWhereUniqueInput
    create: XOR<tbl_alunoCreateWithoutTbl_cursosInput, tbl_alunoUncheckedCreateWithoutTbl_cursosInput>
  }

  export type tbl_alunoCreateManyTbl_cursosInputEnvelope = {
    data: tbl_alunoCreateManyTbl_cursosInput | tbl_alunoCreateManyTbl_cursosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_cursos_disciplinaCreateWithoutTbl_cursosInput = {
    tbl_disciplina: tbl_disciplinaCreateNestedOneWithoutTbl_cursos_disciplinaInput
  }

  export type tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput = {
    id?: number
    disciplina_id: number
  }

  export type tbl_cursos_disciplinaCreateOrConnectWithoutTbl_cursosInput = {
    where: tbl_cursos_disciplinaWhereUniqueInput
    create: XOR<tbl_cursos_disciplinaCreateWithoutTbl_cursosInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput>
  }

  export type tbl_cursos_disciplinaCreateManyTbl_cursosInputEnvelope = {
    data: tbl_cursos_disciplinaCreateManyTbl_cursosInput | tbl_cursos_disciplinaCreateManyTbl_cursosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_alunoUpsertWithWhereUniqueWithoutTbl_cursosInput = {
    where: tbl_alunoWhereUniqueInput
    update: XOR<tbl_alunoUpdateWithoutTbl_cursosInput, tbl_alunoUncheckedUpdateWithoutTbl_cursosInput>
    create: XOR<tbl_alunoCreateWithoutTbl_cursosInput, tbl_alunoUncheckedCreateWithoutTbl_cursosInput>
  }

  export type tbl_alunoUpdateWithWhereUniqueWithoutTbl_cursosInput = {
    where: tbl_alunoWhereUniqueInput
    data: XOR<tbl_alunoUpdateWithoutTbl_cursosInput, tbl_alunoUncheckedUpdateWithoutTbl_cursosInput>
  }

  export type tbl_alunoUpdateManyWithWhereWithoutTbl_cursosInput = {
    where: tbl_alunoScalarWhereInput
    data: XOR<tbl_alunoUpdateManyMutationInput, tbl_alunoUncheckedUpdateManyWithoutTbl_cursosInput>
  }

  export type tbl_alunoScalarWhereInput = {
    AND?: tbl_alunoScalarWhereInput | tbl_alunoScalarWhereInput[]
    OR?: tbl_alunoScalarWhereInput[]
    NOT?: tbl_alunoScalarWhereInput | tbl_alunoScalarWhereInput[]
    id?: IntFilter<"tbl_aluno"> | number
    nome?: StringFilter<"tbl_aluno"> | string
    email?: StringFilter<"tbl_aluno"> | string
    senha?: StringNullableFilter<"tbl_aluno"> | string | null
    icone_id?: IntFilter<"tbl_aluno"> | number
    curso_id?: IntFilter<"tbl_aluno"> | number
    status?: BoolNullableFilter<"tbl_aluno"> | boolean | null
  }

  export type tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_cursosInput = {
    where: tbl_cursos_disciplinaWhereUniqueInput
    update: XOR<tbl_cursos_disciplinaUpdateWithoutTbl_cursosInput, tbl_cursos_disciplinaUncheckedUpdateWithoutTbl_cursosInput>
    create: XOR<tbl_cursos_disciplinaCreateWithoutTbl_cursosInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_cursosInput>
  }

  export type tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_cursosInput = {
    where: tbl_cursos_disciplinaWhereUniqueInput
    data: XOR<tbl_cursos_disciplinaUpdateWithoutTbl_cursosInput, tbl_cursos_disciplinaUncheckedUpdateWithoutTbl_cursosInput>
  }

  export type tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_cursosInput = {
    where: tbl_cursos_disciplinaScalarWhereInput
    data: XOR<tbl_cursos_disciplinaUpdateManyMutationInput, tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_cursosInput>
  }

  export type tbl_cursos_disciplinaScalarWhereInput = {
    AND?: tbl_cursos_disciplinaScalarWhereInput | tbl_cursos_disciplinaScalarWhereInput[]
    OR?: tbl_cursos_disciplinaScalarWhereInput[]
    NOT?: tbl_cursos_disciplinaScalarWhereInput | tbl_cursos_disciplinaScalarWhereInput[]
    id?: IntFilter<"tbl_cursos_disciplina"> | number
    curso_id?: IntFilter<"tbl_cursos_disciplina"> | number
    disciplina_id?: IntFilter<"tbl_cursos_disciplina"> | number
  }

  export type tbl_cursosCreateWithoutTbl_cursos_disciplinaInput = {
    nome: string
    tbl_aluno?: tbl_alunoCreateNestedManyWithoutTbl_cursosInput
  }

  export type tbl_cursosUncheckedCreateWithoutTbl_cursos_disciplinaInput = {
    id?: number
    nome: string
    tbl_aluno?: tbl_alunoUncheckedCreateNestedManyWithoutTbl_cursosInput
  }

  export type tbl_cursosCreateOrConnectWithoutTbl_cursos_disciplinaInput = {
    where: tbl_cursosWhereUniqueInput
    create: XOR<tbl_cursosCreateWithoutTbl_cursos_disciplinaInput, tbl_cursosUncheckedCreateWithoutTbl_cursos_disciplinaInput>
  }

  export type tbl_disciplinaCreateWithoutTbl_cursos_disciplinaInput = {
    nome: string
    tbl_cronograma?: tbl_cronogramaCreateNestedManyWithoutTbl_disciplinaInput
    tbl_disciplina_topico?: tbl_disciplina_topicoCreateNestedManyWithoutTbl_disciplinaInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaUncheckedCreateWithoutTbl_cursos_disciplinaInput = {
    id?: number
    nome: string
    tbl_cronograma?: tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaCreateOrConnectWithoutTbl_cursos_disciplinaInput = {
    where: tbl_disciplinaWhereUniqueInput
    create: XOR<tbl_disciplinaCreateWithoutTbl_cursos_disciplinaInput, tbl_disciplinaUncheckedCreateWithoutTbl_cursos_disciplinaInput>
  }

  export type tbl_cursosUpsertWithoutTbl_cursos_disciplinaInput = {
    update: XOR<tbl_cursosUpdateWithoutTbl_cursos_disciplinaInput, tbl_cursosUncheckedUpdateWithoutTbl_cursos_disciplinaInput>
    create: XOR<tbl_cursosCreateWithoutTbl_cursos_disciplinaInput, tbl_cursosUncheckedCreateWithoutTbl_cursos_disciplinaInput>
    where?: tbl_cursosWhereInput
  }

  export type tbl_cursosUpdateToOneWithWhereWithoutTbl_cursos_disciplinaInput = {
    where?: tbl_cursosWhereInput
    data: XOR<tbl_cursosUpdateWithoutTbl_cursos_disciplinaInput, tbl_cursosUncheckedUpdateWithoutTbl_cursos_disciplinaInput>
  }

  export type tbl_cursosUpdateWithoutTbl_cursos_disciplinaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_aluno?: tbl_alunoUpdateManyWithoutTbl_cursosNestedInput
  }

  export type tbl_cursosUncheckedUpdateWithoutTbl_cursos_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_aluno?: tbl_alunoUncheckedUpdateManyWithoutTbl_cursosNestedInput
  }

  export type tbl_disciplinaUpsertWithoutTbl_cursos_disciplinaInput = {
    update: XOR<tbl_disciplinaUpdateWithoutTbl_cursos_disciplinaInput, tbl_disciplinaUncheckedUpdateWithoutTbl_cursos_disciplinaInput>
    create: XOR<tbl_disciplinaCreateWithoutTbl_cursos_disciplinaInput, tbl_disciplinaUncheckedCreateWithoutTbl_cursos_disciplinaInput>
    where?: tbl_disciplinaWhereInput
  }

  export type tbl_disciplinaUpdateToOneWithWhereWithoutTbl_cursos_disciplinaInput = {
    where?: tbl_disciplinaWhereInput
    data: XOR<tbl_disciplinaUpdateWithoutTbl_cursos_disciplinaInput, tbl_disciplinaUncheckedUpdateWithoutTbl_cursos_disciplinaInput>
  }

  export type tbl_disciplinaUpdateWithoutTbl_cursos_disciplinaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cronograma?: tbl_cronogramaUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_disciplinaUncheckedUpdateWithoutTbl_cursos_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cronograma?: tbl_cronogramaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_cronogramaCreateWithoutTbl_disciplinaInput = {
    tbl_aluno_agenda: tbl_aluno_agendaCreateNestedOneWithoutTbl_cronogramaInput
  }

  export type tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput = {
    id?: number
    agenda_aluno_id: number
  }

  export type tbl_cronogramaCreateOrConnectWithoutTbl_disciplinaInput = {
    where: tbl_cronogramaWhereUniqueInput
    create: XOR<tbl_cronogramaCreateWithoutTbl_disciplinaInput, tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput>
  }

  export type tbl_cronogramaCreateManyTbl_disciplinaInputEnvelope = {
    data: tbl_cronogramaCreateManyTbl_disciplinaInput | tbl_cronogramaCreateManyTbl_disciplinaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput = {
    tbl_cursos: tbl_cursosCreateNestedOneWithoutTbl_cursos_disciplinaInput
  }

  export type tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput = {
    id?: number
    curso_id: number
  }

  export type tbl_cursos_disciplinaCreateOrConnectWithoutTbl_disciplinaInput = {
    where: tbl_cursos_disciplinaWhereUniqueInput
    create: XOR<tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput>
  }

  export type tbl_cursos_disciplinaCreateManyTbl_disciplinaInputEnvelope = {
    data: tbl_cursos_disciplinaCreateManyTbl_disciplinaInput | tbl_cursos_disciplinaCreateManyTbl_disciplinaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput = {
    tbl_topicos: tbl_topicosCreateNestedOneWithoutTbl_disciplina_topicoInput
  }

  export type tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput = {
    id?: number
    topico_id: number
  }

  export type tbl_disciplina_topicoCreateOrConnectWithoutTbl_disciplinaInput = {
    where: tbl_disciplina_topicoWhereUniqueInput
    create: XOR<tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput>
  }

  export type tbl_disciplina_topicoCreateManyTbl_disciplinaInputEnvelope = {
    data: tbl_disciplina_topicoCreateManyTbl_disciplinaInput | tbl_disciplina_topicoCreateManyTbl_disciplinaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput = {
    tbl_professor: tbl_professorCreateNestedOneWithoutTbl_prof_disciplinasInput
  }

  export type tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput = {
    id?: number
    professor_id: number
  }

  export type tbl_prof_disciplinasCreateOrConnectWithoutTbl_disciplinaInput = {
    where: tbl_prof_disciplinasWhereUniqueInput
    create: XOR<tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput>
  }

  export type tbl_prof_disciplinasCreateManyTbl_disciplinaInputEnvelope = {
    data: tbl_prof_disciplinasCreateManyTbl_disciplinaInput | tbl_prof_disciplinasCreateManyTbl_disciplinaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_cronogramaUpsertWithWhereUniqueWithoutTbl_disciplinaInput = {
    where: tbl_cronogramaWhereUniqueInput
    update: XOR<tbl_cronogramaUpdateWithoutTbl_disciplinaInput, tbl_cronogramaUncheckedUpdateWithoutTbl_disciplinaInput>
    create: XOR<tbl_cronogramaCreateWithoutTbl_disciplinaInput, tbl_cronogramaUncheckedCreateWithoutTbl_disciplinaInput>
  }

  export type tbl_cronogramaUpdateWithWhereUniqueWithoutTbl_disciplinaInput = {
    where: tbl_cronogramaWhereUniqueInput
    data: XOR<tbl_cronogramaUpdateWithoutTbl_disciplinaInput, tbl_cronogramaUncheckedUpdateWithoutTbl_disciplinaInput>
  }

  export type tbl_cronogramaUpdateManyWithWhereWithoutTbl_disciplinaInput = {
    where: tbl_cronogramaScalarWhereInput
    data: XOR<tbl_cronogramaUpdateManyMutationInput, tbl_cronogramaUncheckedUpdateManyWithoutTbl_disciplinaInput>
  }

  export type tbl_cursos_disciplinaUpsertWithWhereUniqueWithoutTbl_disciplinaInput = {
    where: tbl_cursos_disciplinaWhereUniqueInput
    update: XOR<tbl_cursos_disciplinaUpdateWithoutTbl_disciplinaInput, tbl_cursos_disciplinaUncheckedUpdateWithoutTbl_disciplinaInput>
    create: XOR<tbl_cursos_disciplinaCreateWithoutTbl_disciplinaInput, tbl_cursos_disciplinaUncheckedCreateWithoutTbl_disciplinaInput>
  }

  export type tbl_cursos_disciplinaUpdateWithWhereUniqueWithoutTbl_disciplinaInput = {
    where: tbl_cursos_disciplinaWhereUniqueInput
    data: XOR<tbl_cursos_disciplinaUpdateWithoutTbl_disciplinaInput, tbl_cursos_disciplinaUncheckedUpdateWithoutTbl_disciplinaInput>
  }

  export type tbl_cursos_disciplinaUpdateManyWithWhereWithoutTbl_disciplinaInput = {
    where: tbl_cursos_disciplinaScalarWhereInput
    data: XOR<tbl_cursos_disciplinaUpdateManyMutationInput, tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_disciplinaInput>
  }

  export type tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_disciplinaInput = {
    where: tbl_disciplina_topicoWhereUniqueInput
    update: XOR<tbl_disciplina_topicoUpdateWithoutTbl_disciplinaInput, tbl_disciplina_topicoUncheckedUpdateWithoutTbl_disciplinaInput>
    create: XOR<tbl_disciplina_topicoCreateWithoutTbl_disciplinaInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_disciplinaInput>
  }

  export type tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_disciplinaInput = {
    where: tbl_disciplina_topicoWhereUniqueInput
    data: XOR<tbl_disciplina_topicoUpdateWithoutTbl_disciplinaInput, tbl_disciplina_topicoUncheckedUpdateWithoutTbl_disciplinaInput>
  }

  export type tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_disciplinaInput = {
    where: tbl_disciplina_topicoScalarWhereInput
    data: XOR<tbl_disciplina_topicoUpdateManyMutationInput, tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_disciplinaInput>
  }

  export type tbl_disciplina_topicoScalarWhereInput = {
    AND?: tbl_disciplina_topicoScalarWhereInput | tbl_disciplina_topicoScalarWhereInput[]
    OR?: tbl_disciplina_topicoScalarWhereInput[]
    NOT?: tbl_disciplina_topicoScalarWhereInput | tbl_disciplina_topicoScalarWhereInput[]
    id?: IntFilter<"tbl_disciplina_topico"> | number
    disciplina_id?: IntFilter<"tbl_disciplina_topico"> | number
    topico_id?: IntFilter<"tbl_disciplina_topico"> | number
  }

  export type tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_disciplinaInput = {
    where: tbl_prof_disciplinasWhereUniqueInput
    update: XOR<tbl_prof_disciplinasUpdateWithoutTbl_disciplinaInput, tbl_prof_disciplinasUncheckedUpdateWithoutTbl_disciplinaInput>
    create: XOR<tbl_prof_disciplinasCreateWithoutTbl_disciplinaInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_disciplinaInput>
  }

  export type tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_disciplinaInput = {
    where: tbl_prof_disciplinasWhereUniqueInput
    data: XOR<tbl_prof_disciplinasUpdateWithoutTbl_disciplinaInput, tbl_prof_disciplinasUncheckedUpdateWithoutTbl_disciplinaInput>
  }

  export type tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_disciplinaInput = {
    where: tbl_prof_disciplinasScalarWhereInput
    data: XOR<tbl_prof_disciplinasUpdateManyMutationInput, tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_disciplinaInput>
  }

  export type tbl_prof_disciplinasScalarWhereInput = {
    AND?: tbl_prof_disciplinasScalarWhereInput | tbl_prof_disciplinasScalarWhereInput[]
    OR?: tbl_prof_disciplinasScalarWhereInput[]
    NOT?: tbl_prof_disciplinasScalarWhereInput | tbl_prof_disciplinasScalarWhereInput[]
    id?: IntFilter<"tbl_prof_disciplinas"> | number
    disciplina_id?: IntFilter<"tbl_prof_disciplinas"> | number
    professor_id?: IntFilter<"tbl_prof_disciplinas"> | number
  }

  export type tbl_disciplinaCreateWithoutTbl_disciplina_topicoInput = {
    nome: string
    tbl_cronograma?: tbl_cronogramaCreateNestedManyWithoutTbl_disciplinaInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaCreateNestedManyWithoutTbl_disciplinaInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaUncheckedCreateWithoutTbl_disciplina_topicoInput = {
    id?: number
    nome: string
    tbl_cronograma?: tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaCreateOrConnectWithoutTbl_disciplina_topicoInput = {
    where: tbl_disciplinaWhereUniqueInput
    create: XOR<tbl_disciplinaCreateWithoutTbl_disciplina_topicoInput, tbl_disciplinaUncheckedCreateWithoutTbl_disciplina_topicoInput>
  }

  export type tbl_topicosCreateWithoutTbl_disciplina_topicoInput = {
    nome: string
    tbl_videoaulas?: tbl_videoaulasCreateNestedManyWithoutTbl_topicosInput
  }

  export type tbl_topicosUncheckedCreateWithoutTbl_disciplina_topicoInput = {
    id?: number
    nome: string
    tbl_videoaulas?: tbl_videoaulasUncheckedCreateNestedManyWithoutTbl_topicosInput
  }

  export type tbl_topicosCreateOrConnectWithoutTbl_disciplina_topicoInput = {
    where: tbl_topicosWhereUniqueInput
    create: XOR<tbl_topicosCreateWithoutTbl_disciplina_topicoInput, tbl_topicosUncheckedCreateWithoutTbl_disciplina_topicoInput>
  }

  export type tbl_disciplinaUpsertWithoutTbl_disciplina_topicoInput = {
    update: XOR<tbl_disciplinaUpdateWithoutTbl_disciplina_topicoInput, tbl_disciplinaUncheckedUpdateWithoutTbl_disciplina_topicoInput>
    create: XOR<tbl_disciplinaCreateWithoutTbl_disciplina_topicoInput, tbl_disciplinaUncheckedCreateWithoutTbl_disciplina_topicoInput>
    where?: tbl_disciplinaWhereInput
  }

  export type tbl_disciplinaUpdateToOneWithWhereWithoutTbl_disciplina_topicoInput = {
    where?: tbl_disciplinaWhereInput
    data: XOR<tbl_disciplinaUpdateWithoutTbl_disciplina_topicoInput, tbl_disciplinaUncheckedUpdateWithoutTbl_disciplina_topicoInput>
  }

  export type tbl_disciplinaUpdateWithoutTbl_disciplina_topicoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cronograma?: tbl_cronogramaUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_disciplinaUncheckedUpdateWithoutTbl_disciplina_topicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cronograma?: tbl_cronogramaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_topicosUpsertWithoutTbl_disciplina_topicoInput = {
    update: XOR<tbl_topicosUpdateWithoutTbl_disciplina_topicoInput, tbl_topicosUncheckedUpdateWithoutTbl_disciplina_topicoInput>
    create: XOR<tbl_topicosCreateWithoutTbl_disciplina_topicoInput, tbl_topicosUncheckedCreateWithoutTbl_disciplina_topicoInput>
    where?: tbl_topicosWhereInput
  }

  export type tbl_topicosUpdateToOneWithWhereWithoutTbl_disciplina_topicoInput = {
    where?: tbl_topicosWhereInput
    data: XOR<tbl_topicosUpdateWithoutTbl_disciplina_topicoInput, tbl_topicosUncheckedUpdateWithoutTbl_disciplina_topicoInput>
  }

  export type tbl_topicosUpdateWithoutTbl_disciplina_topicoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_videoaulas?: tbl_videoaulasUpdateManyWithoutTbl_topicosNestedInput
  }

  export type tbl_topicosUncheckedUpdateWithoutTbl_disciplina_topicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_videoaulas?: tbl_videoaulasUncheckedUpdateManyWithoutTbl_topicosNestedInput
  }

  export type tbl_alternativasCreateWithoutTbl_exercicioInput = {
    opcao: string
    resposta: boolean
  }

  export type tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput = {
    id?: number
    opcao: string
    resposta: boolean
  }

  export type tbl_alternativasCreateOrConnectWithoutTbl_exercicioInput = {
    where: tbl_alternativasWhereUniqueInput
    create: XOR<tbl_alternativasCreateWithoutTbl_exercicioInput, tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput>
  }

  export type tbl_alternativasCreateManyTbl_exercicioInputEnvelope = {
    data: tbl_alternativasCreateManyTbl_exercicioInput | tbl_alternativasCreateManyTbl_exercicioInput[]
    skipDuplicates?: boolean
  }

  export type tbl_alternativasUpsertWithWhereUniqueWithoutTbl_exercicioInput = {
    where: tbl_alternativasWhereUniqueInput
    update: XOR<tbl_alternativasUpdateWithoutTbl_exercicioInput, tbl_alternativasUncheckedUpdateWithoutTbl_exercicioInput>
    create: XOR<tbl_alternativasCreateWithoutTbl_exercicioInput, tbl_alternativasUncheckedCreateWithoutTbl_exercicioInput>
  }

  export type tbl_alternativasUpdateWithWhereUniqueWithoutTbl_exercicioInput = {
    where: tbl_alternativasWhereUniqueInput
    data: XOR<tbl_alternativasUpdateWithoutTbl_exercicioInput, tbl_alternativasUncheckedUpdateWithoutTbl_exercicioInput>
  }

  export type tbl_alternativasUpdateManyWithWhereWithoutTbl_exercicioInput = {
    where: tbl_alternativasScalarWhereInput
    data: XOR<tbl_alternativasUpdateManyMutationInput, tbl_alternativasUncheckedUpdateManyWithoutTbl_exercicioInput>
  }

  export type tbl_alternativasScalarWhereInput = {
    AND?: tbl_alternativasScalarWhereInput | tbl_alternativasScalarWhereInput[]
    OR?: tbl_alternativasScalarWhereInput[]
    NOT?: tbl_alternativasScalarWhereInput | tbl_alternativasScalarWhereInput[]
    id?: IntFilter<"tbl_alternativas"> | number
    opcao?: StringFilter<"tbl_alternativas"> | string
    resposta?: BoolFilter<"tbl_alternativas"> | boolean
    questao_id?: IntFilter<"tbl_alternativas"> | number
  }

  export type tbl_vest_fasesCreateWithoutTbl_fasesInput = {
    tbl_vestibulares: tbl_vestibularesCreateNestedOneWithoutTbl_vest_fasesInput
  }

  export type tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput = {
    id?: number
    vestibular_id: number
  }

  export type tbl_vest_fasesCreateOrConnectWithoutTbl_fasesInput = {
    where: tbl_vest_fasesWhereUniqueInput
    create: XOR<tbl_vest_fasesCreateWithoutTbl_fasesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput>
  }

  export type tbl_vest_fasesCreateManyTbl_fasesInputEnvelope = {
    data: tbl_vest_fasesCreateManyTbl_fasesInput | tbl_vest_fasesCreateManyTbl_fasesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_fasesInput = {
    where: tbl_vest_fasesWhereUniqueInput
    update: XOR<tbl_vest_fasesUpdateWithoutTbl_fasesInput, tbl_vest_fasesUncheckedUpdateWithoutTbl_fasesInput>
    create: XOR<tbl_vest_fasesCreateWithoutTbl_fasesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_fasesInput>
  }

  export type tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_fasesInput = {
    where: tbl_vest_fasesWhereUniqueInput
    data: XOR<tbl_vest_fasesUpdateWithoutTbl_fasesInput, tbl_vest_fasesUncheckedUpdateWithoutTbl_fasesInput>
  }

  export type tbl_vest_fasesUpdateManyWithWhereWithoutTbl_fasesInput = {
    where: tbl_vest_fasesScalarWhereInput
    data: XOR<tbl_vest_fasesUpdateManyMutationInput, tbl_vest_fasesUncheckedUpdateManyWithoutTbl_fasesInput>
  }

  export type tbl_vest_fasesScalarWhereInput = {
    AND?: tbl_vest_fasesScalarWhereInput | tbl_vest_fasesScalarWhereInput[]
    OR?: tbl_vest_fasesScalarWhereInput[]
    NOT?: tbl_vest_fasesScalarWhereInput | tbl_vest_fasesScalarWhereInput[]
    id?: IntFilter<"tbl_vest_fases"> | number
    vestibular_id?: IntFilter<"tbl_vest_fases"> | number
    fase_id?: IntFilter<"tbl_vest_fases"> | number
  }

  export type tbl_alunoCreateWithoutTbl_iconesInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    caderno_aluno?: caderno_alunoCreateNestedManyWithoutTbl_alunoInput
    tbl_cursos: tbl_cursosCreateNestedOneWithoutTbl_alunoInput
    tbl_aluno_agenda?: tbl_aluno_agendaCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoUncheckedCreateWithoutTbl_iconesInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    curso_id: number
    status?: boolean | null
    caderno_aluno?: caderno_alunoUncheckedCreateNestedManyWithoutTbl_alunoInput
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedCreateNestedManyWithoutTbl_alunoInput
  }

  export type tbl_alunoCreateOrConnectWithoutTbl_iconesInput = {
    where: tbl_alunoWhereUniqueInput
    create: XOR<tbl_alunoCreateWithoutTbl_iconesInput, tbl_alunoUncheckedCreateWithoutTbl_iconesInput>
  }

  export type tbl_alunoCreateManyTbl_iconesInputEnvelope = {
    data: tbl_alunoCreateManyTbl_iconesInput | tbl_alunoCreateManyTbl_iconesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_professorCreateWithoutTbl_iconesInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    tbl_prof_agenda?: tbl_prof_agendaCreateNestedManyWithoutTbl_professorInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasCreateNestedManyWithoutTbl_professorInput
  }

  export type tbl_professorUncheckedCreateWithoutTbl_iconesInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUncheckedCreateNestedManyWithoutTbl_professorInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_professorInput
  }

  export type tbl_professorCreateOrConnectWithoutTbl_iconesInput = {
    where: tbl_professorWhereUniqueInput
    create: XOR<tbl_professorCreateWithoutTbl_iconesInput, tbl_professorUncheckedCreateWithoutTbl_iconesInput>
  }

  export type tbl_professorCreateManyTbl_iconesInputEnvelope = {
    data: tbl_professorCreateManyTbl_iconesInput | tbl_professorCreateManyTbl_iconesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_alunoUpsertWithWhereUniqueWithoutTbl_iconesInput = {
    where: tbl_alunoWhereUniqueInput
    update: XOR<tbl_alunoUpdateWithoutTbl_iconesInput, tbl_alunoUncheckedUpdateWithoutTbl_iconesInput>
    create: XOR<tbl_alunoCreateWithoutTbl_iconesInput, tbl_alunoUncheckedCreateWithoutTbl_iconesInput>
  }

  export type tbl_alunoUpdateWithWhereUniqueWithoutTbl_iconesInput = {
    where: tbl_alunoWhereUniqueInput
    data: XOR<tbl_alunoUpdateWithoutTbl_iconesInput, tbl_alunoUncheckedUpdateWithoutTbl_iconesInput>
  }

  export type tbl_alunoUpdateManyWithWhereWithoutTbl_iconesInput = {
    where: tbl_alunoScalarWhereInput
    data: XOR<tbl_alunoUpdateManyMutationInput, tbl_alunoUncheckedUpdateManyWithoutTbl_iconesInput>
  }

  export type tbl_professorUpsertWithWhereUniqueWithoutTbl_iconesInput = {
    where: tbl_professorWhereUniqueInput
    update: XOR<tbl_professorUpdateWithoutTbl_iconesInput, tbl_professorUncheckedUpdateWithoutTbl_iconesInput>
    create: XOR<tbl_professorCreateWithoutTbl_iconesInput, tbl_professorUncheckedCreateWithoutTbl_iconesInput>
  }

  export type tbl_professorUpdateWithWhereUniqueWithoutTbl_iconesInput = {
    where: tbl_professorWhereUniqueInput
    data: XOR<tbl_professorUpdateWithoutTbl_iconesInput, tbl_professorUncheckedUpdateWithoutTbl_iconesInput>
  }

  export type tbl_professorUpdateManyWithWhereWithoutTbl_iconesInput = {
    where: tbl_professorScalarWhereInput
    data: XOR<tbl_professorUpdateManyMutationInput, tbl_professorUncheckedUpdateManyWithoutTbl_iconesInput>
  }

  export type tbl_professorScalarWhereInput = {
    AND?: tbl_professorScalarWhereInput | tbl_professorScalarWhereInput[]
    OR?: tbl_professorScalarWhereInput[]
    NOT?: tbl_professorScalarWhereInput | tbl_professorScalarWhereInput[]
    id?: IntFilter<"tbl_professor"> | number
    nome?: StringFilter<"tbl_professor"> | string
    email?: StringFilter<"tbl_professor"> | string
    senha?: StringNullableFilter<"tbl_professor"> | string | null
    icone_id?: IntFilter<"tbl_professor"> | number
    status?: BoolNullableFilter<"tbl_professor"> | boolean | null
  }

  export type tbl_vestibularesCreateWithoutTbl_intituicoesInput = {
    nome: string
    data_prova: Date | string
    status?: boolean | null
    tbl_vest_fases?: tbl_vest_fasesCreateNestedManyWithoutTbl_vestibularesInput
  }

  export type tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput = {
    id?: number
    nome: string
    data_prova: Date | string
    status?: boolean | null
    tbl_vest_fases?: tbl_vest_fasesUncheckedCreateNestedManyWithoutTbl_vestibularesInput
  }

  export type tbl_vestibularesCreateOrConnectWithoutTbl_intituicoesInput = {
    where: tbl_vestibularesWhereUniqueInput
    create: XOR<tbl_vestibularesCreateWithoutTbl_intituicoesInput, tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput>
  }

  export type tbl_vestibularesCreateManyTbl_intituicoesInputEnvelope = {
    data: tbl_vestibularesCreateManyTbl_intituicoesInput | tbl_vestibularesCreateManyTbl_intituicoesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_vestibularesUpsertWithWhereUniqueWithoutTbl_intituicoesInput = {
    where: tbl_vestibularesWhereUniqueInput
    update: XOR<tbl_vestibularesUpdateWithoutTbl_intituicoesInput, tbl_vestibularesUncheckedUpdateWithoutTbl_intituicoesInput>
    create: XOR<tbl_vestibularesCreateWithoutTbl_intituicoesInput, tbl_vestibularesUncheckedCreateWithoutTbl_intituicoesInput>
  }

  export type tbl_vestibularesUpdateWithWhereUniqueWithoutTbl_intituicoesInput = {
    where: tbl_vestibularesWhereUniqueInput
    data: XOR<tbl_vestibularesUpdateWithoutTbl_intituicoesInput, tbl_vestibularesUncheckedUpdateWithoutTbl_intituicoesInput>
  }

  export type tbl_vestibularesUpdateManyWithWhereWithoutTbl_intituicoesInput = {
    where: tbl_vestibularesScalarWhereInput
    data: XOR<tbl_vestibularesUpdateManyMutationInput, tbl_vestibularesUncheckedUpdateManyWithoutTbl_intituicoesInput>
  }

  export type tbl_vestibularesScalarWhereInput = {
    AND?: tbl_vestibularesScalarWhereInput | tbl_vestibularesScalarWhereInput[]
    OR?: tbl_vestibularesScalarWhereInput[]
    NOT?: tbl_vestibularesScalarWhereInput | tbl_vestibularesScalarWhereInput[]
    id?: IntFilter<"tbl_vestibulares"> | number
    nome?: StringFilter<"tbl_vestibulares"> | string
    data_prova?: DateTimeFilter<"tbl_vestibulares"> | Date | string
    instituicao_id?: IntFilter<"tbl_vestibulares"> | number
    status?: BoolNullableFilter<"tbl_vestibulares"> | boolean | null
  }

  export type tbl_semanaCreateWithoutTbl_prof_agendaInput = {
    nome: string
    tbl_aluno_agenda?: tbl_aluno_agendaCreateNestedManyWithoutTbl_semanaInput
  }

  export type tbl_semanaUncheckedCreateWithoutTbl_prof_agendaInput = {
    id?: number
    nome: string
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedCreateNestedManyWithoutTbl_semanaInput
  }

  export type tbl_semanaCreateOrConnectWithoutTbl_prof_agendaInput = {
    where: tbl_semanaWhereUniqueInput
    create: XOR<tbl_semanaCreateWithoutTbl_prof_agendaInput, tbl_semanaUncheckedCreateWithoutTbl_prof_agendaInput>
  }

  export type tbl_professorCreateWithoutTbl_prof_agendaInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    tbl_prof_disciplinas?: tbl_prof_disciplinasCreateNestedManyWithoutTbl_professorInput
    tbl_icones: tbl_iconesCreateNestedOneWithoutTbl_professorInput
  }

  export type tbl_professorUncheckedCreateWithoutTbl_prof_agendaInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    status?: boolean | null
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedCreateNestedManyWithoutTbl_professorInput
  }

  export type tbl_professorCreateOrConnectWithoutTbl_prof_agendaInput = {
    where: tbl_professorWhereUniqueInput
    create: XOR<tbl_professorCreateWithoutTbl_prof_agendaInput, tbl_professorUncheckedCreateWithoutTbl_prof_agendaInput>
  }

  export type tbl_semanaUpsertWithoutTbl_prof_agendaInput = {
    update: XOR<tbl_semanaUpdateWithoutTbl_prof_agendaInput, tbl_semanaUncheckedUpdateWithoutTbl_prof_agendaInput>
    create: XOR<tbl_semanaCreateWithoutTbl_prof_agendaInput, tbl_semanaUncheckedCreateWithoutTbl_prof_agendaInput>
    where?: tbl_semanaWhereInput
  }

  export type tbl_semanaUpdateToOneWithWhereWithoutTbl_prof_agendaInput = {
    where?: tbl_semanaWhereInput
    data: XOR<tbl_semanaUpdateWithoutTbl_prof_agendaInput, tbl_semanaUncheckedUpdateWithoutTbl_prof_agendaInput>
  }

  export type tbl_semanaUpdateWithoutTbl_prof_agendaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_aluno_agenda?: tbl_aluno_agendaUpdateManyWithoutTbl_semanaNestedInput
  }

  export type tbl_semanaUncheckedUpdateWithoutTbl_prof_agendaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_semanaNestedInput
  }

  export type tbl_professorUpsertWithoutTbl_prof_agendaInput = {
    update: XOR<tbl_professorUpdateWithoutTbl_prof_agendaInput, tbl_professorUncheckedUpdateWithoutTbl_prof_agendaInput>
    create: XOR<tbl_professorCreateWithoutTbl_prof_agendaInput, tbl_professorUncheckedCreateWithoutTbl_prof_agendaInput>
    where?: tbl_professorWhereInput
  }

  export type tbl_professorUpdateToOneWithWhereWithoutTbl_prof_agendaInput = {
    where?: tbl_professorWhereInput
    data: XOR<tbl_professorUpdateWithoutTbl_prof_agendaInput, tbl_professorUncheckedUpdateWithoutTbl_prof_agendaInput>
  }

  export type tbl_professorUpdateWithoutTbl_prof_agendaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_prof_disciplinas?: tbl_prof_disciplinasUpdateManyWithoutTbl_professorNestedInput
    tbl_icones?: tbl_iconesUpdateOneRequiredWithoutTbl_professorNestedInput
  }

  export type tbl_professorUncheckedUpdateWithoutTbl_prof_agendaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_professorNestedInput
  }

  export type tbl_disciplinaCreateWithoutTbl_prof_disciplinasInput = {
    nome: string
    tbl_cronograma?: tbl_cronogramaCreateNestedManyWithoutTbl_disciplinaInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaCreateNestedManyWithoutTbl_disciplinaInput
    tbl_disciplina_topico?: tbl_disciplina_topicoCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaUncheckedCreateWithoutTbl_prof_disciplinasInput = {
    id?: number
    nome: string
    tbl_cronograma?: tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedCreateNestedManyWithoutTbl_disciplinaInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedCreateNestedManyWithoutTbl_disciplinaInput
  }

  export type tbl_disciplinaCreateOrConnectWithoutTbl_prof_disciplinasInput = {
    where: tbl_disciplinaWhereUniqueInput
    create: XOR<tbl_disciplinaCreateWithoutTbl_prof_disciplinasInput, tbl_disciplinaUncheckedCreateWithoutTbl_prof_disciplinasInput>
  }

  export type tbl_professorCreateWithoutTbl_prof_disciplinasInput = {
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
    tbl_prof_agenda?: tbl_prof_agendaCreateNestedManyWithoutTbl_professorInput
    tbl_icones: tbl_iconesCreateNestedOneWithoutTbl_professorInput
  }

  export type tbl_professorUncheckedCreateWithoutTbl_prof_disciplinasInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    status?: boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUncheckedCreateNestedManyWithoutTbl_professorInput
  }

  export type tbl_professorCreateOrConnectWithoutTbl_prof_disciplinasInput = {
    where: tbl_professorWhereUniqueInput
    create: XOR<tbl_professorCreateWithoutTbl_prof_disciplinasInput, tbl_professorUncheckedCreateWithoutTbl_prof_disciplinasInput>
  }

  export type tbl_disciplinaUpsertWithoutTbl_prof_disciplinasInput = {
    update: XOR<tbl_disciplinaUpdateWithoutTbl_prof_disciplinasInput, tbl_disciplinaUncheckedUpdateWithoutTbl_prof_disciplinasInput>
    create: XOR<tbl_disciplinaCreateWithoutTbl_prof_disciplinasInput, tbl_disciplinaUncheckedCreateWithoutTbl_prof_disciplinasInput>
    where?: tbl_disciplinaWhereInput
  }

  export type tbl_disciplinaUpdateToOneWithWhereWithoutTbl_prof_disciplinasInput = {
    where?: tbl_disciplinaWhereInput
    data: XOR<tbl_disciplinaUpdateWithoutTbl_prof_disciplinasInput, tbl_disciplinaUncheckedUpdateWithoutTbl_prof_disciplinasInput>
  }

  export type tbl_disciplinaUpdateWithoutTbl_prof_disciplinasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cronograma?: tbl_cronogramaUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_disciplinaUncheckedUpdateWithoutTbl_prof_disciplinasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_cronograma?: tbl_cronogramaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_cursos_disciplina?: tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_disciplinaNestedInput
  }

  export type tbl_professorUpsertWithoutTbl_prof_disciplinasInput = {
    update: XOR<tbl_professorUpdateWithoutTbl_prof_disciplinasInput, tbl_professorUncheckedUpdateWithoutTbl_prof_disciplinasInput>
    create: XOR<tbl_professorCreateWithoutTbl_prof_disciplinasInput, tbl_professorUncheckedCreateWithoutTbl_prof_disciplinasInput>
    where?: tbl_professorWhereInput
  }

  export type tbl_professorUpdateToOneWithWhereWithoutTbl_prof_disciplinasInput = {
    where?: tbl_professorWhereInput
    data: XOR<tbl_professorUpdateWithoutTbl_prof_disciplinasInput, tbl_professorUncheckedUpdateWithoutTbl_prof_disciplinasInput>
  }

  export type tbl_professorUpdateWithoutTbl_prof_disciplinasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUpdateManyWithoutTbl_professorNestedInput
    tbl_icones?: tbl_iconesUpdateOneRequiredWithoutTbl_professorNestedInput
  }

  export type tbl_professorUncheckedUpdateWithoutTbl_prof_disciplinasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUncheckedUpdateManyWithoutTbl_professorNestedInput
  }

  export type tbl_prof_agendaCreateWithoutTbl_professorInput = {
    carga_horaria: number
    tbl_semana: tbl_semanaCreateNestedOneWithoutTbl_prof_agendaInput
  }

  export type tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput = {
    id?: number
    carga_horaria: number
    semana_id: number
  }

  export type tbl_prof_agendaCreateOrConnectWithoutTbl_professorInput = {
    where: tbl_prof_agendaWhereUniqueInput
    create: XOR<tbl_prof_agendaCreateWithoutTbl_professorInput, tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput>
  }

  export type tbl_prof_agendaCreateManyTbl_professorInputEnvelope = {
    data: tbl_prof_agendaCreateManyTbl_professorInput | tbl_prof_agendaCreateManyTbl_professorInput[]
    skipDuplicates?: boolean
  }

  export type tbl_prof_disciplinasCreateWithoutTbl_professorInput = {
    tbl_disciplina: tbl_disciplinaCreateNestedOneWithoutTbl_prof_disciplinasInput
  }

  export type tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput = {
    id?: number
    disciplina_id: number
  }

  export type tbl_prof_disciplinasCreateOrConnectWithoutTbl_professorInput = {
    where: tbl_prof_disciplinasWhereUniqueInput
    create: XOR<tbl_prof_disciplinasCreateWithoutTbl_professorInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput>
  }

  export type tbl_prof_disciplinasCreateManyTbl_professorInputEnvelope = {
    data: tbl_prof_disciplinasCreateManyTbl_professorInput | tbl_prof_disciplinasCreateManyTbl_professorInput[]
    skipDuplicates?: boolean
  }

  export type tbl_iconesCreateWithoutTbl_professorInput = {
    url: string
    status?: boolean | null
    tbl_aluno?: tbl_alunoCreateNestedManyWithoutTbl_iconesInput
  }

  export type tbl_iconesUncheckedCreateWithoutTbl_professorInput = {
    id?: number
    url: string
    status?: boolean | null
    tbl_aluno?: tbl_alunoUncheckedCreateNestedManyWithoutTbl_iconesInput
  }

  export type tbl_iconesCreateOrConnectWithoutTbl_professorInput = {
    where: tbl_iconesWhereUniqueInput
    create: XOR<tbl_iconesCreateWithoutTbl_professorInput, tbl_iconesUncheckedCreateWithoutTbl_professorInput>
  }

  export type tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_professorInput = {
    where: tbl_prof_agendaWhereUniqueInput
    update: XOR<tbl_prof_agendaUpdateWithoutTbl_professorInput, tbl_prof_agendaUncheckedUpdateWithoutTbl_professorInput>
    create: XOR<tbl_prof_agendaCreateWithoutTbl_professorInput, tbl_prof_agendaUncheckedCreateWithoutTbl_professorInput>
  }

  export type tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_professorInput = {
    where: tbl_prof_agendaWhereUniqueInput
    data: XOR<tbl_prof_agendaUpdateWithoutTbl_professorInput, tbl_prof_agendaUncheckedUpdateWithoutTbl_professorInput>
  }

  export type tbl_prof_agendaUpdateManyWithWhereWithoutTbl_professorInput = {
    where: tbl_prof_agendaScalarWhereInput
    data: XOR<tbl_prof_agendaUpdateManyMutationInput, tbl_prof_agendaUncheckedUpdateManyWithoutTbl_professorInput>
  }

  export type tbl_prof_agendaScalarWhereInput = {
    AND?: tbl_prof_agendaScalarWhereInput | tbl_prof_agendaScalarWhereInput[]
    OR?: tbl_prof_agendaScalarWhereInput[]
    NOT?: tbl_prof_agendaScalarWhereInput | tbl_prof_agendaScalarWhereInput[]
    id?: IntFilter<"tbl_prof_agenda"> | number
    carga_horaria?: IntFilter<"tbl_prof_agenda"> | number
    semana_id?: IntFilter<"tbl_prof_agenda"> | number
    professor_id?: IntFilter<"tbl_prof_agenda"> | number
  }

  export type tbl_prof_disciplinasUpsertWithWhereUniqueWithoutTbl_professorInput = {
    where: tbl_prof_disciplinasWhereUniqueInput
    update: XOR<tbl_prof_disciplinasUpdateWithoutTbl_professorInput, tbl_prof_disciplinasUncheckedUpdateWithoutTbl_professorInput>
    create: XOR<tbl_prof_disciplinasCreateWithoutTbl_professorInput, tbl_prof_disciplinasUncheckedCreateWithoutTbl_professorInput>
  }

  export type tbl_prof_disciplinasUpdateWithWhereUniqueWithoutTbl_professorInput = {
    where: tbl_prof_disciplinasWhereUniqueInput
    data: XOR<tbl_prof_disciplinasUpdateWithoutTbl_professorInput, tbl_prof_disciplinasUncheckedUpdateWithoutTbl_professorInput>
  }

  export type tbl_prof_disciplinasUpdateManyWithWhereWithoutTbl_professorInput = {
    where: tbl_prof_disciplinasScalarWhereInput
    data: XOR<tbl_prof_disciplinasUpdateManyMutationInput, tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_professorInput>
  }

  export type tbl_iconesUpsertWithoutTbl_professorInput = {
    update: XOR<tbl_iconesUpdateWithoutTbl_professorInput, tbl_iconesUncheckedUpdateWithoutTbl_professorInput>
    create: XOR<tbl_iconesCreateWithoutTbl_professorInput, tbl_iconesUncheckedCreateWithoutTbl_professorInput>
    where?: tbl_iconesWhereInput
  }

  export type tbl_iconesUpdateToOneWithWhereWithoutTbl_professorInput = {
    where?: tbl_iconesWhereInput
    data: XOR<tbl_iconesUpdateWithoutTbl_professorInput, tbl_iconesUncheckedUpdateWithoutTbl_professorInput>
  }

  export type tbl_iconesUpdateWithoutTbl_professorInput = {
    url?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_aluno?: tbl_alunoUpdateManyWithoutTbl_iconesNestedInput
  }

  export type tbl_iconesUncheckedUpdateWithoutTbl_professorInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_aluno?: tbl_alunoUncheckedUpdateManyWithoutTbl_iconesNestedInput
  }

  export type tbl_temaCreateWithoutTbl_redacaoInput = {
    nome: string
    descricao: string
  }

  export type tbl_temaUncheckedCreateWithoutTbl_redacaoInput = {
    id?: number
    nome: string
    descricao: string
  }

  export type tbl_temaCreateOrConnectWithoutTbl_redacaoInput = {
    where: tbl_temaWhereUniqueInput
    create: XOR<tbl_temaCreateWithoutTbl_redacaoInput, tbl_temaUncheckedCreateWithoutTbl_redacaoInput>
  }

  export type tbl_temaUpsertWithoutTbl_redacaoInput = {
    update: XOR<tbl_temaUpdateWithoutTbl_redacaoInput, tbl_temaUncheckedUpdateWithoutTbl_redacaoInput>
    create: XOR<tbl_temaCreateWithoutTbl_redacaoInput, tbl_temaUncheckedCreateWithoutTbl_redacaoInput>
    where?: tbl_temaWhereInput
  }

  export type tbl_temaUpdateToOneWithWhereWithoutTbl_redacaoInput = {
    where?: tbl_temaWhereInput
    data: XOR<tbl_temaUpdateWithoutTbl_redacaoInput, tbl_temaUncheckedUpdateWithoutTbl_redacaoInput>
  }

  export type tbl_temaUpdateWithoutTbl_redacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_temaUncheckedUpdateWithoutTbl_redacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_aluno_agendaCreateWithoutTbl_semanaInput = {
    carga_horaria: number
    tbl_aluno: tbl_alunoCreateNestedOneWithoutTbl_aluno_agendaInput
    tbl_cronograma?: tbl_cronogramaCreateNestedManyWithoutTbl_aluno_agendaInput
  }

  export type tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput = {
    id?: number
    carga_horaria: number
    aluno_id: number
    tbl_cronograma?: tbl_cronogramaUncheckedCreateNestedManyWithoutTbl_aluno_agendaInput
  }

  export type tbl_aluno_agendaCreateOrConnectWithoutTbl_semanaInput = {
    where: tbl_aluno_agendaWhereUniqueInput
    create: XOR<tbl_aluno_agendaCreateWithoutTbl_semanaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput>
  }

  export type tbl_aluno_agendaCreateManyTbl_semanaInputEnvelope = {
    data: tbl_aluno_agendaCreateManyTbl_semanaInput | tbl_aluno_agendaCreateManyTbl_semanaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_prof_agendaCreateWithoutTbl_semanaInput = {
    carga_horaria: number
    tbl_professor: tbl_professorCreateNestedOneWithoutTbl_prof_agendaInput
  }

  export type tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput = {
    id?: number
    carga_horaria: number
    professor_id: number
  }

  export type tbl_prof_agendaCreateOrConnectWithoutTbl_semanaInput = {
    where: tbl_prof_agendaWhereUniqueInput
    create: XOR<tbl_prof_agendaCreateWithoutTbl_semanaInput, tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput>
  }

  export type tbl_prof_agendaCreateManyTbl_semanaInputEnvelope = {
    data: tbl_prof_agendaCreateManyTbl_semanaInput | tbl_prof_agendaCreateManyTbl_semanaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_aluno_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput = {
    where: tbl_aluno_agendaWhereUniqueInput
    update: XOR<tbl_aluno_agendaUpdateWithoutTbl_semanaInput, tbl_aluno_agendaUncheckedUpdateWithoutTbl_semanaInput>
    create: XOR<tbl_aluno_agendaCreateWithoutTbl_semanaInput, tbl_aluno_agendaUncheckedCreateWithoutTbl_semanaInput>
  }

  export type tbl_aluno_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput = {
    where: tbl_aluno_agendaWhereUniqueInput
    data: XOR<tbl_aluno_agendaUpdateWithoutTbl_semanaInput, tbl_aluno_agendaUncheckedUpdateWithoutTbl_semanaInput>
  }

  export type tbl_aluno_agendaUpdateManyWithWhereWithoutTbl_semanaInput = {
    where: tbl_aluno_agendaScalarWhereInput
    data: XOR<tbl_aluno_agendaUpdateManyMutationInput, tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_semanaInput>
  }

  export type tbl_prof_agendaUpsertWithWhereUniqueWithoutTbl_semanaInput = {
    where: tbl_prof_agendaWhereUniqueInput
    update: XOR<tbl_prof_agendaUpdateWithoutTbl_semanaInput, tbl_prof_agendaUncheckedUpdateWithoutTbl_semanaInput>
    create: XOR<tbl_prof_agendaCreateWithoutTbl_semanaInput, tbl_prof_agendaUncheckedCreateWithoutTbl_semanaInput>
  }

  export type tbl_prof_agendaUpdateWithWhereUniqueWithoutTbl_semanaInput = {
    where: tbl_prof_agendaWhereUniqueInput
    data: XOR<tbl_prof_agendaUpdateWithoutTbl_semanaInput, tbl_prof_agendaUncheckedUpdateWithoutTbl_semanaInput>
  }

  export type tbl_prof_agendaUpdateManyWithWhereWithoutTbl_semanaInput = {
    where: tbl_prof_agendaScalarWhereInput
    data: XOR<tbl_prof_agendaUpdateManyMutationInput, tbl_prof_agendaUncheckedUpdateManyWithoutTbl_semanaInput>
  }

  export type tbl_redacaoCreateWithoutTbl_temaInput = {
    titulo: string
    texto: string
    status?: boolean | null
  }

  export type tbl_redacaoUncheckedCreateWithoutTbl_temaInput = {
    id?: number
    titulo: string
    texto: string
    status?: boolean | null
  }

  export type tbl_redacaoCreateOrConnectWithoutTbl_temaInput = {
    where: tbl_redacaoWhereUniqueInput
    create: XOR<tbl_redacaoCreateWithoutTbl_temaInput, tbl_redacaoUncheckedCreateWithoutTbl_temaInput>
  }

  export type tbl_redacaoCreateManyTbl_temaInputEnvelope = {
    data: tbl_redacaoCreateManyTbl_temaInput | tbl_redacaoCreateManyTbl_temaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_redacaoUpsertWithWhereUniqueWithoutTbl_temaInput = {
    where: tbl_redacaoWhereUniqueInput
    update: XOR<tbl_redacaoUpdateWithoutTbl_temaInput, tbl_redacaoUncheckedUpdateWithoutTbl_temaInput>
    create: XOR<tbl_redacaoCreateWithoutTbl_temaInput, tbl_redacaoUncheckedCreateWithoutTbl_temaInput>
  }

  export type tbl_redacaoUpdateWithWhereUniqueWithoutTbl_temaInput = {
    where: tbl_redacaoWhereUniqueInput
    data: XOR<tbl_redacaoUpdateWithoutTbl_temaInput, tbl_redacaoUncheckedUpdateWithoutTbl_temaInput>
  }

  export type tbl_redacaoUpdateManyWithWhereWithoutTbl_temaInput = {
    where: tbl_redacaoScalarWhereInput
    data: XOR<tbl_redacaoUpdateManyMutationInput, tbl_redacaoUncheckedUpdateManyWithoutTbl_temaInput>
  }

  export type tbl_redacaoScalarWhereInput = {
    AND?: tbl_redacaoScalarWhereInput | tbl_redacaoScalarWhereInput[]
    OR?: tbl_redacaoScalarWhereInput[]
    NOT?: tbl_redacaoScalarWhereInput | tbl_redacaoScalarWhereInput[]
    id?: IntFilter<"tbl_redacao"> | number
    titulo?: StringFilter<"tbl_redacao"> | string
    texto?: StringFilter<"tbl_redacao"> | string
    tema_id?: IntFilter<"tbl_redacao"> | number
    status?: BoolNullableFilter<"tbl_redacao"> | boolean | null
  }

  export type tbl_disciplina_topicoCreateWithoutTbl_topicosInput = {
    tbl_disciplina: tbl_disciplinaCreateNestedOneWithoutTbl_disciplina_topicoInput
  }

  export type tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput = {
    id?: number
    disciplina_id: number
  }

  export type tbl_disciplina_topicoCreateOrConnectWithoutTbl_topicosInput = {
    where: tbl_disciplina_topicoWhereUniqueInput
    create: XOR<tbl_disciplina_topicoCreateWithoutTbl_topicosInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput>
  }

  export type tbl_disciplina_topicoCreateManyTbl_topicosInputEnvelope = {
    data: tbl_disciplina_topicoCreateManyTbl_topicosInput | tbl_disciplina_topicoCreateManyTbl_topicosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_videoaulasCreateWithoutTbl_topicosInput = {
    titulo: string
    duracao: Date | string
    status?: boolean | null
  }

  export type tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput = {
    id?: number
    titulo: string
    duracao: Date | string
    status?: boolean | null
  }

  export type tbl_videoaulasCreateOrConnectWithoutTbl_topicosInput = {
    where: tbl_videoaulasWhereUniqueInput
    create: XOR<tbl_videoaulasCreateWithoutTbl_topicosInput, tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput>
  }

  export type tbl_videoaulasCreateManyTbl_topicosInputEnvelope = {
    data: tbl_videoaulasCreateManyTbl_topicosInput | tbl_videoaulasCreateManyTbl_topicosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_disciplina_topicoUpsertWithWhereUniqueWithoutTbl_topicosInput = {
    where: tbl_disciplina_topicoWhereUniqueInput
    update: XOR<tbl_disciplina_topicoUpdateWithoutTbl_topicosInput, tbl_disciplina_topicoUncheckedUpdateWithoutTbl_topicosInput>
    create: XOR<tbl_disciplina_topicoCreateWithoutTbl_topicosInput, tbl_disciplina_topicoUncheckedCreateWithoutTbl_topicosInput>
  }

  export type tbl_disciplina_topicoUpdateWithWhereUniqueWithoutTbl_topicosInput = {
    where: tbl_disciplina_topicoWhereUniqueInput
    data: XOR<tbl_disciplina_topicoUpdateWithoutTbl_topicosInput, tbl_disciplina_topicoUncheckedUpdateWithoutTbl_topicosInput>
  }

  export type tbl_disciplina_topicoUpdateManyWithWhereWithoutTbl_topicosInput = {
    where: tbl_disciplina_topicoScalarWhereInput
    data: XOR<tbl_disciplina_topicoUpdateManyMutationInput, tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_topicosInput>
  }

  export type tbl_videoaulasUpsertWithWhereUniqueWithoutTbl_topicosInput = {
    where: tbl_videoaulasWhereUniqueInput
    update: XOR<tbl_videoaulasUpdateWithoutTbl_topicosInput, tbl_videoaulasUncheckedUpdateWithoutTbl_topicosInput>
    create: XOR<tbl_videoaulasCreateWithoutTbl_topicosInput, tbl_videoaulasUncheckedCreateWithoutTbl_topicosInput>
  }

  export type tbl_videoaulasUpdateWithWhereUniqueWithoutTbl_topicosInput = {
    where: tbl_videoaulasWhereUniqueInput
    data: XOR<tbl_videoaulasUpdateWithoutTbl_topicosInput, tbl_videoaulasUncheckedUpdateWithoutTbl_topicosInput>
  }

  export type tbl_videoaulasUpdateManyWithWhereWithoutTbl_topicosInput = {
    where: tbl_videoaulasScalarWhereInput
    data: XOR<tbl_videoaulasUpdateManyMutationInput, tbl_videoaulasUncheckedUpdateManyWithoutTbl_topicosInput>
  }

  export type tbl_videoaulasScalarWhereInput = {
    AND?: tbl_videoaulasScalarWhereInput | tbl_videoaulasScalarWhereInput[]
    OR?: tbl_videoaulasScalarWhereInput[]
    NOT?: tbl_videoaulasScalarWhereInput | tbl_videoaulasScalarWhereInput[]
    id?: IntFilter<"tbl_videoaulas"> | number
    titulo?: StringFilter<"tbl_videoaulas"> | string
    duracao?: DateTimeFilter<"tbl_videoaulas"> | Date | string
    topico_id?: IntFilter<"tbl_videoaulas"> | number
    status?: BoolNullableFilter<"tbl_videoaulas"> | boolean | null
  }

  export type tbl_vestibularesCreateWithoutTbl_vest_fasesInput = {
    nome: string
    data_prova: Date | string
    status?: boolean | null
    tbl_intituicoes: tbl_intituicoesCreateNestedOneWithoutTbl_vestibularesInput
  }

  export type tbl_vestibularesUncheckedCreateWithoutTbl_vest_fasesInput = {
    id?: number
    nome: string
    data_prova: Date | string
    instituicao_id: number
    status?: boolean | null
  }

  export type tbl_vestibularesCreateOrConnectWithoutTbl_vest_fasesInput = {
    where: tbl_vestibularesWhereUniqueInput
    create: XOR<tbl_vestibularesCreateWithoutTbl_vest_fasesInput, tbl_vestibularesUncheckedCreateWithoutTbl_vest_fasesInput>
  }

  export type tbl_fasesCreateWithoutTbl_vest_fasesInput = {
    fase?: number | null
  }

  export type tbl_fasesUncheckedCreateWithoutTbl_vest_fasesInput = {
    id?: number
    fase?: number | null
  }

  export type tbl_fasesCreateOrConnectWithoutTbl_vest_fasesInput = {
    where: tbl_fasesWhereUniqueInput
    create: XOR<tbl_fasesCreateWithoutTbl_vest_fasesInput, tbl_fasesUncheckedCreateWithoutTbl_vest_fasesInput>
  }

  export type tbl_vestibularesUpsertWithoutTbl_vest_fasesInput = {
    update: XOR<tbl_vestibularesUpdateWithoutTbl_vest_fasesInput, tbl_vestibularesUncheckedUpdateWithoutTbl_vest_fasesInput>
    create: XOR<tbl_vestibularesCreateWithoutTbl_vest_fasesInput, tbl_vestibularesUncheckedCreateWithoutTbl_vest_fasesInput>
    where?: tbl_vestibularesWhereInput
  }

  export type tbl_vestibularesUpdateToOneWithWhereWithoutTbl_vest_fasesInput = {
    where?: tbl_vestibularesWhereInput
    data: XOR<tbl_vestibularesUpdateWithoutTbl_vest_fasesInput, tbl_vestibularesUncheckedUpdateWithoutTbl_vest_fasesInput>
  }

  export type tbl_vestibularesUpdateWithoutTbl_vest_fasesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_intituicoes?: tbl_intituicoesUpdateOneRequiredWithoutTbl_vestibularesNestedInput
  }

  export type tbl_vestibularesUncheckedUpdateWithoutTbl_vest_fasesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    instituicao_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_fasesUpsertWithoutTbl_vest_fasesInput = {
    update: XOR<tbl_fasesUpdateWithoutTbl_vest_fasesInput, tbl_fasesUncheckedUpdateWithoutTbl_vest_fasesInput>
    create: XOR<tbl_fasesCreateWithoutTbl_vest_fasesInput, tbl_fasesUncheckedCreateWithoutTbl_vest_fasesInput>
    where?: tbl_fasesWhereInput
  }

  export type tbl_fasesUpdateToOneWithWhereWithoutTbl_vest_fasesInput = {
    where?: tbl_fasesWhereInput
    data: XOR<tbl_fasesUpdateWithoutTbl_vest_fasesInput, tbl_fasesUncheckedUpdateWithoutTbl_vest_fasesInput>
  }

  export type tbl_fasesUpdateWithoutTbl_vest_fasesInput = {
    fase?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_fasesUncheckedUpdateWithoutTbl_vest_fasesInput = {
    id?: IntFieldUpdateOperationsInput | number
    fase?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_vest_fasesCreateWithoutTbl_vestibularesInput = {
    tbl_fases: tbl_fasesCreateNestedOneWithoutTbl_vest_fasesInput
  }

  export type tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput = {
    id?: number
    fase_id: number
  }

  export type tbl_vest_fasesCreateOrConnectWithoutTbl_vestibularesInput = {
    where: tbl_vest_fasesWhereUniqueInput
    create: XOR<tbl_vest_fasesCreateWithoutTbl_vestibularesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput>
  }

  export type tbl_vest_fasesCreateManyTbl_vestibularesInputEnvelope = {
    data: tbl_vest_fasesCreateManyTbl_vestibularesInput | tbl_vest_fasesCreateManyTbl_vestibularesInput[]
    skipDuplicates?: boolean
  }

  export type tbl_intituicoesCreateWithoutTbl_vestibularesInput = {
    nome: string
  }

  export type tbl_intituicoesUncheckedCreateWithoutTbl_vestibularesInput = {
    id?: number
    nome: string
  }

  export type tbl_intituicoesCreateOrConnectWithoutTbl_vestibularesInput = {
    where: tbl_intituicoesWhereUniqueInput
    create: XOR<tbl_intituicoesCreateWithoutTbl_vestibularesInput, tbl_intituicoesUncheckedCreateWithoutTbl_vestibularesInput>
  }

  export type tbl_vest_fasesUpsertWithWhereUniqueWithoutTbl_vestibularesInput = {
    where: tbl_vest_fasesWhereUniqueInput
    update: XOR<tbl_vest_fasesUpdateWithoutTbl_vestibularesInput, tbl_vest_fasesUncheckedUpdateWithoutTbl_vestibularesInput>
    create: XOR<tbl_vest_fasesCreateWithoutTbl_vestibularesInput, tbl_vest_fasesUncheckedCreateWithoutTbl_vestibularesInput>
  }

  export type tbl_vest_fasesUpdateWithWhereUniqueWithoutTbl_vestibularesInput = {
    where: tbl_vest_fasesWhereUniqueInput
    data: XOR<tbl_vest_fasesUpdateWithoutTbl_vestibularesInput, tbl_vest_fasesUncheckedUpdateWithoutTbl_vestibularesInput>
  }

  export type tbl_vest_fasesUpdateManyWithWhereWithoutTbl_vestibularesInput = {
    where: tbl_vest_fasesScalarWhereInput
    data: XOR<tbl_vest_fasesUpdateManyMutationInput, tbl_vest_fasesUncheckedUpdateManyWithoutTbl_vestibularesInput>
  }

  export type tbl_intituicoesUpsertWithoutTbl_vestibularesInput = {
    update: XOR<tbl_intituicoesUpdateWithoutTbl_vestibularesInput, tbl_intituicoesUncheckedUpdateWithoutTbl_vestibularesInput>
    create: XOR<tbl_intituicoesCreateWithoutTbl_vestibularesInput, tbl_intituicoesUncheckedCreateWithoutTbl_vestibularesInput>
    where?: tbl_intituicoesWhereInput
  }

  export type tbl_intituicoesUpdateToOneWithWhereWithoutTbl_vestibularesInput = {
    where?: tbl_intituicoesWhereInput
    data: XOR<tbl_intituicoesUpdateWithoutTbl_vestibularesInput, tbl_intituicoesUncheckedUpdateWithoutTbl_vestibularesInput>
  }

  export type tbl_intituicoesUpdateWithoutTbl_vestibularesInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_intituicoesUncheckedUpdateWithoutTbl_vestibularesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_topicosCreateWithoutTbl_videoaulasInput = {
    nome: string
    tbl_disciplina_topico?: tbl_disciplina_topicoCreateNestedManyWithoutTbl_topicosInput
  }

  export type tbl_topicosUncheckedCreateWithoutTbl_videoaulasInput = {
    id?: number
    nome: string
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedCreateNestedManyWithoutTbl_topicosInput
  }

  export type tbl_topicosCreateOrConnectWithoutTbl_videoaulasInput = {
    where: tbl_topicosWhereUniqueInput
    create: XOR<tbl_topicosCreateWithoutTbl_videoaulasInput, tbl_topicosUncheckedCreateWithoutTbl_videoaulasInput>
  }

  export type tbl_topicosUpsertWithoutTbl_videoaulasInput = {
    update: XOR<tbl_topicosUpdateWithoutTbl_videoaulasInput, tbl_topicosUncheckedUpdateWithoutTbl_videoaulasInput>
    create: XOR<tbl_topicosCreateWithoutTbl_videoaulasInput, tbl_topicosUncheckedCreateWithoutTbl_videoaulasInput>
    where?: tbl_topicosWhereInput
  }

  export type tbl_topicosUpdateToOneWithWhereWithoutTbl_videoaulasInput = {
    where?: tbl_topicosWhereInput
    data: XOR<tbl_topicosUpdateWithoutTbl_videoaulasInput, tbl_topicosUncheckedUpdateWithoutTbl_videoaulasInput>
  }

  export type tbl_topicosUpdateWithoutTbl_videoaulasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tbl_disciplina_topico?: tbl_disciplina_topicoUpdateManyWithoutTbl_topicosNestedInput
  }

  export type tbl_topicosUncheckedUpdateWithoutTbl_videoaulasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tbl_disciplina_topico?: tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_topicosNestedInput
  }

  export type caderno_alunoCreateManyTbl_alunoInput = {
    id?: number
    titulo: string
    texto: string
  }

  export type tbl_aluno_agendaCreateManyTbl_alunoInput = {
    id?: number
    carga_horaria: number
    semana_id: number
  }

  export type caderno_alunoUpdateWithoutTbl_alunoInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
  }

  export type caderno_alunoUncheckedUpdateWithoutTbl_alunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
  }

  export type caderno_alunoUncheckedUpdateManyWithoutTbl_alunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_aluno_agendaUpdateWithoutTbl_alunoInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
    tbl_semana?: tbl_semanaUpdateOneRequiredWithoutTbl_aluno_agendaNestedInput
    tbl_cronograma?: tbl_cronogramaUpdateManyWithoutTbl_aluno_agendaNestedInput
  }

  export type tbl_aluno_agendaUncheckedUpdateWithoutTbl_alunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
    tbl_cronograma?: tbl_cronogramaUncheckedUpdateManyWithoutTbl_aluno_agendaNestedInput
  }

  export type tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_alunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cronogramaCreateManyTbl_aluno_agendaInput = {
    id?: number
    disciplina_id: number
  }

  export type tbl_cronogramaUpdateWithoutTbl_aluno_agendaInput = {
    tbl_disciplina?: tbl_disciplinaUpdateOneRequiredWithoutTbl_cronogramaNestedInput
  }

  export type tbl_cronogramaUncheckedUpdateWithoutTbl_aluno_agendaInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cronogramaUncheckedUpdateManyWithoutTbl_aluno_agendaInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_alunoCreateManyTbl_cursosInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    icone_id: number
    status?: boolean | null
  }

  export type tbl_cursos_disciplinaCreateManyTbl_cursosInput = {
    id?: number
    disciplina_id: number
  }

  export type tbl_alunoUpdateWithoutTbl_cursosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    caderno_aluno?: caderno_alunoUpdateManyWithoutTbl_alunoNestedInput
    tbl_icones?: tbl_iconesUpdateOneRequiredWithoutTbl_alunoNestedInput
    tbl_aluno_agenda?: tbl_aluno_agendaUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_alunoUncheckedUpdateWithoutTbl_cursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    caderno_aluno?: caderno_alunoUncheckedUpdateManyWithoutTbl_alunoNestedInput
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_alunoUncheckedUpdateManyWithoutTbl_cursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    icone_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_cursos_disciplinaUpdateWithoutTbl_cursosInput = {
    tbl_disciplina?: tbl_disciplinaUpdateOneRequiredWithoutTbl_cursos_disciplinaNestedInput
  }

  export type tbl_cursos_disciplinaUncheckedUpdateWithoutTbl_cursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_cursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cronogramaCreateManyTbl_disciplinaInput = {
    id?: number
    agenda_aluno_id: number
  }

  export type tbl_cursos_disciplinaCreateManyTbl_disciplinaInput = {
    id?: number
    curso_id: number
  }

  export type tbl_disciplina_topicoCreateManyTbl_disciplinaInput = {
    id?: number
    topico_id: number
  }

  export type tbl_prof_disciplinasCreateManyTbl_disciplinaInput = {
    id?: number
    professor_id: number
  }

  export type tbl_cronogramaUpdateWithoutTbl_disciplinaInput = {
    tbl_aluno_agenda?: tbl_aluno_agendaUpdateOneRequiredWithoutTbl_cronogramaNestedInput
  }

  export type tbl_cronogramaUncheckedUpdateWithoutTbl_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    agenda_aluno_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cronogramaUncheckedUpdateManyWithoutTbl_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    agenda_aluno_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cursos_disciplinaUpdateWithoutTbl_disciplinaInput = {
    tbl_cursos?: tbl_cursosUpdateOneRequiredWithoutTbl_cursos_disciplinaNestedInput
  }

  export type tbl_cursos_disciplinaUncheckedUpdateWithoutTbl_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    curso_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_cursos_disciplinaUncheckedUpdateManyWithoutTbl_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    curso_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_disciplina_topicoUpdateWithoutTbl_disciplinaInput = {
    tbl_topicos?: tbl_topicosUpdateOneRequiredWithoutTbl_disciplina_topicoNestedInput
  }

  export type tbl_disciplina_topicoUncheckedUpdateWithoutTbl_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    topico_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    topico_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_disciplinasUpdateWithoutTbl_disciplinaInput = {
    tbl_professor?: tbl_professorUpdateOneRequiredWithoutTbl_prof_disciplinasNestedInput
  }

  export type tbl_prof_disciplinasUncheckedUpdateWithoutTbl_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    professor_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_disciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    professor_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_alternativasCreateManyTbl_exercicioInput = {
    id?: number
    opcao: string
    resposta: boolean
  }

  export type tbl_alternativasUpdateWithoutTbl_exercicioInput = {
    opcao?: StringFieldUpdateOperationsInput | string
    resposta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_alternativasUncheckedUpdateWithoutTbl_exercicioInput = {
    id?: IntFieldUpdateOperationsInput | number
    opcao?: StringFieldUpdateOperationsInput | string
    resposta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_alternativasUncheckedUpdateManyWithoutTbl_exercicioInput = {
    id?: IntFieldUpdateOperationsInput | number
    opcao?: StringFieldUpdateOperationsInput | string
    resposta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_vest_fasesCreateManyTbl_fasesInput = {
    id?: number
    vestibular_id: number
  }

  export type tbl_vest_fasesUpdateWithoutTbl_fasesInput = {
    tbl_vestibulares?: tbl_vestibularesUpdateOneRequiredWithoutTbl_vest_fasesNestedInput
  }

  export type tbl_vest_fasesUncheckedUpdateWithoutTbl_fasesInput = {
    id?: IntFieldUpdateOperationsInput | number
    vestibular_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_vest_fasesUncheckedUpdateManyWithoutTbl_fasesInput = {
    id?: IntFieldUpdateOperationsInput | number
    vestibular_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_alunoCreateManyTbl_iconesInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    curso_id: number
    status?: boolean | null
  }

  export type tbl_professorCreateManyTbl_iconesInput = {
    id?: number
    nome: string
    email: string
    senha?: string | null
    status?: boolean | null
  }

  export type tbl_alunoUpdateWithoutTbl_iconesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    caderno_aluno?: caderno_alunoUpdateManyWithoutTbl_alunoNestedInput
    tbl_cursos?: tbl_cursosUpdateOneRequiredWithoutTbl_alunoNestedInput
    tbl_aluno_agenda?: tbl_aluno_agendaUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_alunoUncheckedUpdateWithoutTbl_iconesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    curso_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    caderno_aluno?: caderno_alunoUncheckedUpdateManyWithoutTbl_alunoNestedInput
    tbl_aluno_agenda?: tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_alunoNestedInput
  }

  export type tbl_alunoUncheckedUpdateManyWithoutTbl_iconesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    curso_id?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_professorUpdateWithoutTbl_iconesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUpdateManyWithoutTbl_professorNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUpdateManyWithoutTbl_professorNestedInput
  }

  export type tbl_professorUncheckedUpdateWithoutTbl_iconesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_prof_agenda?: tbl_prof_agendaUncheckedUpdateManyWithoutTbl_professorNestedInput
    tbl_prof_disciplinas?: tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_professorNestedInput
  }

  export type tbl_professorUncheckedUpdateManyWithoutTbl_iconesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_vestibularesCreateManyTbl_intituicoesInput = {
    id?: number
    nome: string
    data_prova: Date | string
    status?: boolean | null
  }

  export type tbl_vestibularesUpdateWithoutTbl_intituicoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_vest_fases?: tbl_vest_fasesUpdateManyWithoutTbl_vestibularesNestedInput
  }

  export type tbl_vestibularesUncheckedUpdateWithoutTbl_intituicoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbl_vest_fases?: tbl_vest_fasesUncheckedUpdateManyWithoutTbl_vestibularesNestedInput
  }

  export type tbl_vestibularesUncheckedUpdateManyWithoutTbl_intituicoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_prova?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_prof_agendaCreateManyTbl_professorInput = {
    id?: number
    carga_horaria: number
    semana_id: number
  }

  export type tbl_prof_disciplinasCreateManyTbl_professorInput = {
    id?: number
    disciplina_id: number
  }

  export type tbl_prof_agendaUpdateWithoutTbl_professorInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
    tbl_semana?: tbl_semanaUpdateOneRequiredWithoutTbl_prof_agendaNestedInput
  }

  export type tbl_prof_agendaUncheckedUpdateWithoutTbl_professorInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_agendaUncheckedUpdateManyWithoutTbl_professorInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    semana_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_disciplinasUpdateWithoutTbl_professorInput = {
    tbl_disciplina?: tbl_disciplinaUpdateOneRequiredWithoutTbl_prof_disciplinasNestedInput
  }

  export type tbl_prof_disciplinasUncheckedUpdateWithoutTbl_professorInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_disciplinasUncheckedUpdateManyWithoutTbl_professorInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_aluno_agendaCreateManyTbl_semanaInput = {
    id?: number
    carga_horaria: number
    aluno_id: number
  }

  export type tbl_prof_agendaCreateManyTbl_semanaInput = {
    id?: number
    carga_horaria: number
    professor_id: number
  }

  export type tbl_aluno_agendaUpdateWithoutTbl_semanaInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
    tbl_aluno?: tbl_alunoUpdateOneRequiredWithoutTbl_aluno_agendaNestedInput
    tbl_cronograma?: tbl_cronogramaUpdateManyWithoutTbl_aluno_agendaNestedInput
  }

  export type tbl_aluno_agendaUncheckedUpdateWithoutTbl_semanaInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    aluno_id?: IntFieldUpdateOperationsInput | number
    tbl_cronograma?: tbl_cronogramaUncheckedUpdateManyWithoutTbl_aluno_agendaNestedInput
  }

  export type tbl_aluno_agendaUncheckedUpdateManyWithoutTbl_semanaInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    aluno_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_agendaUpdateWithoutTbl_semanaInput = {
    carga_horaria?: IntFieldUpdateOperationsInput | number
    tbl_professor?: tbl_professorUpdateOneRequiredWithoutTbl_prof_agendaNestedInput
  }

  export type tbl_prof_agendaUncheckedUpdateWithoutTbl_semanaInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    professor_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_prof_agendaUncheckedUpdateManyWithoutTbl_semanaInput = {
    id?: IntFieldUpdateOperationsInput | number
    carga_horaria?: IntFieldUpdateOperationsInput | number
    professor_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_redacaoCreateManyTbl_temaInput = {
    id?: number
    titulo: string
    texto: string
    status?: boolean | null
  }

  export type tbl_redacaoUpdateWithoutTbl_temaInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_redacaoUncheckedUpdateWithoutTbl_temaInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_redacaoUncheckedUpdateManyWithoutTbl_temaInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_disciplina_topicoCreateManyTbl_topicosInput = {
    id?: number
    disciplina_id: number
  }

  export type tbl_videoaulasCreateManyTbl_topicosInput = {
    id?: number
    titulo: string
    duracao: Date | string
    status?: boolean | null
  }

  export type tbl_disciplina_topicoUpdateWithoutTbl_topicosInput = {
    tbl_disciplina?: tbl_disciplinaUpdateOneRequiredWithoutTbl_disciplina_topicoNestedInput
  }

  export type tbl_disciplina_topicoUncheckedUpdateWithoutTbl_topicosInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_disciplina_topicoUncheckedUpdateManyWithoutTbl_topicosInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplina_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_videoaulasUpdateWithoutTbl_topicosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_videoaulasUncheckedUpdateWithoutTbl_topicosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_videoaulasUncheckedUpdateManyWithoutTbl_topicosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    duracao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbl_vest_fasesCreateManyTbl_vestibularesInput = {
    id?: number
    fase_id: number
  }

  export type tbl_vest_fasesUpdateWithoutTbl_vestibularesInput = {
    tbl_fases?: tbl_fasesUpdateOneRequiredWithoutTbl_vest_fasesNestedInput
  }

  export type tbl_vest_fasesUncheckedUpdateWithoutTbl_vestibularesInput = {
    id?: IntFieldUpdateOperationsInput | number
    fase_id?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_vest_fasesUncheckedUpdateManyWithoutTbl_vestibularesInput = {
    id?: IntFieldUpdateOperationsInput | number
    fase_id?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use Tbl_alunoCountOutputTypeDefaultArgs instead
     */
    export type Tbl_alunoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_alunoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_aluno_agendaCountOutputTypeDefaultArgs instead
     */
    export type Tbl_aluno_agendaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_aluno_agendaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_cursosCountOutputTypeDefaultArgs instead
     */
    export type Tbl_cursosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_cursosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_disciplinaCountOutputTypeDefaultArgs instead
     */
    export type Tbl_disciplinaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_disciplinaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_exercicioCountOutputTypeDefaultArgs instead
     */
    export type Tbl_exercicioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_exercicioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_fasesCountOutputTypeDefaultArgs instead
     */
    export type Tbl_fasesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_fasesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_iconesCountOutputTypeDefaultArgs instead
     */
    export type Tbl_iconesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_iconesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_intituicoesCountOutputTypeDefaultArgs instead
     */
    export type Tbl_intituicoesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_intituicoesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_professorCountOutputTypeDefaultArgs instead
     */
    export type Tbl_professorCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_professorCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_semanaCountOutputTypeDefaultArgs instead
     */
    export type Tbl_semanaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_semanaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_temaCountOutputTypeDefaultArgs instead
     */
    export type Tbl_temaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_temaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_topicosCountOutputTypeDefaultArgs instead
     */
    export type Tbl_topicosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_topicosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_vestibularesCountOutputTypeDefaultArgs instead
     */
    export type Tbl_vestibularesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_vestibularesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use caderno_alunoDefaultArgs instead
     */
    export type caderno_alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = caderno_alunoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_alternativasDefaultArgs instead
     */
    export type tbl_alternativasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_alternativasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_alunoDefaultArgs instead
     */
    export type tbl_alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_alunoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_aluno_agendaDefaultArgs instead
     */
    export type tbl_aluno_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_aluno_agendaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_cronogramaDefaultArgs instead
     */
    export type tbl_cronogramaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_cronogramaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_cursosDefaultArgs instead
     */
    export type tbl_cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_cursosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_cursos_disciplinaDefaultArgs instead
     */
    export type tbl_cursos_disciplinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_cursos_disciplinaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_disciplinaDefaultArgs instead
     */
    export type tbl_disciplinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_disciplinaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_disciplina_topicoDefaultArgs instead
     */
    export type tbl_disciplina_topicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_disciplina_topicoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_exercicioDefaultArgs instead
     */
    export type tbl_exercicioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_exercicioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_fasesDefaultArgs instead
     */
    export type tbl_fasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_fasesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_horariosDefaultArgs instead
     */
    export type tbl_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_horariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_iconesDefaultArgs instead
     */
    export type tbl_iconesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_iconesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_intituicoesDefaultArgs instead
     */
    export type tbl_intituicoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_intituicoesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_prof_agendaDefaultArgs instead
     */
    export type tbl_prof_agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_prof_agendaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_prof_disciplinasDefaultArgs instead
     */
    export type tbl_prof_disciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_prof_disciplinasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_professorDefaultArgs instead
     */
    export type tbl_professorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_professorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_redacaoDefaultArgs instead
     */
    export type tbl_redacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_redacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_semanaDefaultArgs instead
     */
    export type tbl_semanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_semanaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_temaDefaultArgs instead
     */
    export type tbl_temaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_temaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_topicosDefaultArgs instead
     */
    export type tbl_topicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_topicosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_vest_fasesDefaultArgs instead
     */
    export type tbl_vest_fasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_vest_fasesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_vestibularesDefaultArgs instead
     */
    export type tbl_vestibularesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_vestibularesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_videoaulasDefaultArgs instead
     */
    export type tbl_videoaulasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_videoaulasDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}